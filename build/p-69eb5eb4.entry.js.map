{"version":3,"names":["getTextFilter","s","trim","replace","split","map","word","join","getQuery","searchString","ClassFilterFetcher","fetch","sparqlEndpoint","this","promiseWithCancel","sparqlJson","then","res","_a","_b","x","items","results","bindings","b","classLabel","label","value","classUri","class","instanceCount","Number","count","loading","catch","_","error","classUris","limit","offset","length","EntityListFetcher","entityLabel","entityUri","FullCountFetcher","_c","geovExplorerCss","GeovExplorer","data","d","entityList","classSelect","fullCount","__data","val","_offset","fetchEntityListData","_searchString","fetchClassSelectData","fetchFullCountData","selectedClass","_selectedClass","componentWillLoad","initSearchString","getSSRData","_ssrId","promise","fetchData","setSSRData","fetchBeforeRender","constructor","hostRef","undefined","uriRegex","uriReplace","preferredItems","classUriPrefix","setSSRId","Promise","all","fetchClassSelect","cancel","fetchEntityList","fetchFullCount","render","_d","_e","h","Host","sizeMd","sizeLg","sizeXl","debounce","onIonChange","e","detail","onSelectionChanged","ref","el","initValue","animated","style","width","uriPrefix","defaultPageSize","lines","onPageChanged","console","log","pageSize","pageIndex"],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/getTextFilter.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/ClassFilterFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/EntityListFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/FullCountFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/geov-explorer.css?tag=geov-explorer","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/geov-explorer.js"],"sourcesContent":["/**\n * Transforms a string into a jena-lucene search string\n * @param s search string entered by user\n * @returns search string usable for lucene text search\n */\nexport const getTextFilter = (s) => s\n  .trim()\n  .replace('*', ' ')\n  .split(' ')\n  .map(word => {\n  return '*' + word + '*';\n})\n  .join(' AND '); // will form like this : *Girard* AND *GrÃ©goire*\n//# sourceMappingURL=getTextFilter.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString) => `# classes\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT ?class ?label ?count\nWHERE {\n  {\n    SELECT  ?class (count(distinct ?entityUri) as ?count)\n    WHERE {\n      ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n \t   ?entityUri a ?class .\n    }\n    GROUP BY ?class\n    ORDER by DESC(?count)\n  }\n  ?class rdfs:label ?label\n}\nHAVING(?label != \"\")\n`;\nexport class ClassFilterFetcher {\n  async fetch(sparqlEndpoint, searchString) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b;\n      // process and return the data in case of success\n      const x = {\n        items: (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b.map(b => ({ classLabel: b.label.value, classUri: b.class.value, instanceCount: Number(b.count.value) })),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=ClassFilterFetcher.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString, classUris, limit, offset) => {\n  return `# entities\n  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX text: <http://jena.apache.org/text#>\n  SELECT ?entityUri ?entityLabel ?classUri ?classLabel\n  {\n    {\n    SELECT DISTINCT ?entityUri  ?entityLabel ?classUri ?classLabel {\n        {\n          SELECT DISTINCT ?entityUri ?entityLabel ?classUri\n          {\n              {\n                    SELECT ?entityUri  ?entityLabel\n                    {\n                        ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n\n                        ${!(classUris === null || classUris === void 0 ? void 0 : classUris.length)\n    ? `\n                        {\n                          {\n                            SELECT DISTINCT  ?classWithInstances\n                            WHERE {\n                              ?entityUri a ?classWithInstances .\n                            }\n                            GROUP BY ?classWithInstances\n                          }\n                        }\n                        {?entityUri a ?classWithInstances .}\n                        `\n    : ``}\n\n                        ${classUris.map(x => `{?entityUri a <${x}> .}`).join('\\nUNION\\n')}\n                        OPTIONAL {?entityUri rdfs:label ?entityLabel .}\n\n                  }\n                  LIMIT ${limit}\n                  OFFSET ${offset}\n              }\n              ?entityUri a ?classUri .\n          }\n        }\n        OPTIONAL { ?classUri rdfs:label ?classLabel .}\n      }\n      HAVING (?classLabel!=\"\")\n    }\n  }\n`;\n};\nexport class EntityListFetcher {\n  async fetch(sparqlEndpoint, searchString, classUris, limit, offset) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString, classUris, limit, offset));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b;\n      // process and return the data in case of success\n      const x = {\n        items: (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b.map(b => ({ classLabel: b.classLabel.value, entityLabel: b.entityLabel.value, entityUri: b.entityUri.value, classUri: b.classUri.value })),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=EntityListFetcher.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString, classUris) => {\n  return `# count\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ontome: <https://ontome.net/ontology/>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT (count(distinct ?entityUri) as ?count)\nWHERE {\n  ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n\n  ${!(classUris === null || classUris === void 0 ? void 0 : classUris.length)\n    ? `\n          {\n            {\n              SELECT DISTINCT  ?classWithInstances\n              WHERE {\n                 ?entityUri a ?classWithInstances .\n              }\n              GROUP BY ?classWithInstances\n            }\n          }\n          {?entityUri a ?classWithInstances .}\n          `\n    : `${classUris.map(x => `{?entityUri a <${x}> .}`).join('\\nUNION\\n')}`}\n}\n`;\n};\nexport class FullCountFetcher {\n  async fetch(sparqlEndpoint, searchString, classUris) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString, classUris));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b, _c;\n      // process and return the data in case of success\n      const x = {\n        count: Number((_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.count.value),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=FullCountFetcher.js.map\n",":host {\n  display: block;\n}\n\n.entity-count-col {\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n}\n\n.entity-count-label {\n  height: 1rem;\n  padding-inline-start: calc(var(--ion-safe-area-left, 0px) + 20px);\n}\n\n.entity-count-sm {\n  margin-top: 2px;\n  margin-bottom: 1rem;\n  display: block;\n}\n\nion-searchbar {\n  padding-bottom: 0;\n}\n\n.paginator-container {\n  margin-top: 1rem;\n  align-items: center;\n}\n\n.paginator {\n  margin-left: auto;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nimport { ClassFilterFetcher } from \"./lib/ClassFilterFetcher\";\nimport { EntityListFetcher } from \"./lib/EntityListFetcher\";\nimport { FullCountFetcher } from \"./lib/FullCountFetcher\";\n/**\n * This component is a UI to explore Geovistory entities exposed on a Sparql endpoint.\n *\n * Features:\n * - Filter by class\n * - Filter by search stirng\n */\nexport class GeovExplorer {\n  set data(d) {\n    this.entityList = d === null || d === void 0 ? void 0 : d.entityList;\n    this.classSelect = d === null || d === void 0 ? void 0 : d.classSelect;\n    this.fullCount = d === null || d === void 0 ? void 0 : d.fullCount;\n    this.__data = d;\n  }\n  get data() {\n    return this.__data;\n  }\n  set offset(val) {\n    this._offset = val;\n    this.fetchEntityListData();\n  }\n  get offset() {\n    return this._offset;\n  }\n  set searchString(val) {\n    this._searchString = val;\n    this.offset = 0;\n    this.fetchClassSelectData();\n    this.fetchEntityListData();\n    this.fetchFullCountData();\n  }\n  get searchString() {\n    return this._searchString;\n  }\n  set selectedClass(val) {\n    var _a;\n    if (((_a = this._selectedClass) === null || _a === void 0 ? void 0 : _a.classUri) !== (val === null || val === void 0 ? void 0 : val.classUri)) {\n      this._selectedClass = val;\n      this._offset = 0;\n      this.fetchEntityListData();\n      this.fetchFullCountData();\n    }\n  }\n  get selectedClass() {\n    return this._selectedClass;\n  }\n  /**\n   * called once when component is ready. good for data fetching.\n   * if `componentWillLoad()` returns a promise, stencil hydrate\n   * awaits this promise for server side rendering. See:\n   * https://stenciljs.com/docs/static-site-generation-basics\n   */\n  componentWillLoad() {\n    this._searchString = this.initSearchString;\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // fetch data via http\n      const promise = this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n      if (this.fetchBeforeRender)\n        return promise; // <- await this promise!\n    }\n  }\n  constructor() {\n    this.limit = 10;\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.fetchBeforeRender = false;\n    this.initSearchString = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.preferredItems = undefined;\n    this.classUriPrefix = undefined;\n    this.entityList = undefined;\n    this.classSelect = undefined;\n    this.fullCount = undefined;\n    this._offset = 0;\n    // set id for server side rendering of dynamic data\n    setSSRId(this);\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return Promise.all([await this.fetchClassSelectData(), this.fetchEntityListData(), this.fetchFullCountData()]).then(([classSelect, entityList, fullCount]) => {\n      return { classSelect, entityList, fullCount, loading: false };\n    });\n  }\n  async fetchClassSelectData() {\n    this.classSelect = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchClassSelect)\n      this.fetchClassSelect.promiseWithCancel.cancel();\n    this.fetchClassSelect = new ClassFilterFetcher();\n    this.classSelect = await this.fetchClassSelect.fetch(this.sparqlEndpoint, this.searchString);\n    // unset ongoing fetch\n    this.fetchClassSelect = undefined;\n    return this.classSelect;\n  }\n  async fetchEntityListData() {\n    this.entityList = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchEntityList)\n      this.fetchEntityList.promiseWithCancel.cancel();\n    this.fetchEntityList = new EntityListFetcher();\n    this.entityList = await this.fetchEntityList.fetch(this.sparqlEndpoint, this.searchString, this.selectedClass ? [this.selectedClass.classUri] : [], this.limit, this.offset);\n    // unset ongoing fetch\n    this.fetchEntityList = undefined;\n    return this.entityList;\n  }\n  async fetchFullCountData() {\n    this.fullCount = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchFullCount)\n      this.fetchFullCount.promiseWithCancel.cancel();\n    this.fetchFullCount = new FullCountFetcher();\n    this.fullCount = await this.fetchFullCount.fetch(this.sparqlEndpoint, this.searchString, this.selectedClass ? [this.selectedClass.classUri] : []);\n    // unset ongoing fetch\n    this.fetchFullCount = undefined;\n    return this.fullCount;\n  }\n  render() {\n    var _a, _b, _c, _d, _e;\n    return (h(Host, null, h(\"ion-grid\", null, h(\"ion-row\", null, h(\"ion-col\", { sizeMd: \"0\", sizeLg: \"6\", sizeXl: \"3\", class: \"entity-count-col ion-hide-lg-down\" }), h(\"ion-col\", { sizeMd: \"12\", sizeLg: \"6\", sizeXl: \"9\" }, h(\"ion-searchbar\", { value: this.searchString, debounce: 300, onIonChange: e => {\n        this.searchString = e.detail.value;\n      } }), h(\"geov-class-select-popup\", { class: \"ion-hide-lg-up\", onSelectionChanged: e => {\n        this.selectedClass = e.detail.value;\n      }, ref: el => {\n        var _a;\n        el.initValue = this.selectedClass;\n        el.items = (_a = this.classSelect) === null || _a === void 0 ? void 0 : _a.items;\n      } }), h(\"ion-note\", { class: \"entity-count-sm entity-count-label\" }, ((_a = this.fullCount) === null || _a === void 0 ? void 0 : _a.loading) ? h(\"ion-skeleton-text\", { animated: true, style: { width: '40px' } }) : h(\"span\", null, (_b = this.fullCount) === null || _b === void 0 ? void 0 :\n      _b.count, \" Entities\"), ' '))), h(\"ion-row\", null, h(\"ion-col\", { sizeMd: \"0\", sizeLg: \"6\", sizeXl: \"3\", class: \"ion-hide-lg-down\" }, h(\"geov-class-radio-group\", { onSelectionChanged: e => {\n        this.selectedClass = e.detail.value;\n      }, ref: el => {\n        var _a, _b;\n        el.initValue = this.selectedClass;\n        el.preferredItems = this.preferredItems;\n        if (this.classUriPrefix)\n          el.uriPrefix = this.classUriPrefix;\n        el.items = (_a = this.classSelect) === null || _a === void 0 ? void 0 : _a.items;\n        el.loading = (_b = this.classSelect) === null || _b === void 0 ? void 0 : _b.loading;\n      } })), h(\"ion-col\", { sizeMd: \"12\", sizeLg: \"6\", sizeXl: \"9\" }, h(\"geov-entity-list\", { defaultPageSize: this.limit, uriRegex: this.uriRegex, uriReplace: this.uriReplace, ref: el => {\n        var _a, _b;\n        el.items = (_a = this.entityList) === null || _a === void 0 ? void 0 : _a.items;\n        el.loading = (_b = this.entityList) === null || _b === void 0 ? void 0 : _b.loading;\n      } }), h(\"ion-item\", { class: \"paginator-container\", lines: \"none\" }, ((_c = this.fullCount) === null || _c === void 0 ? void 0 : _c.count) && !((_d = this.fullCount) === null || _d === void 0 ? void 0 : _d.loading) && (h(\"geov-paginator\", { class: \"paginator\", onPageChanged: e => {\n        console.log('onPageChanged');\n        this.offset = e.detail.pageSize * e.detail.pageIndex;\n      }, pageSize: this.limit, length: (_e = this.fullCount) === null || _e === void 0 ? void 0 : _e.count })))))), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-explorer\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-explorer.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-explorer.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"_ssrId is short for server side rendering id and\\nidentifies this component and the fetched data\\nrespectively. Set this only if you want to\\nenable this component to fetch serve side\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the component will not render before the\\ninitial data is fetched\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"initSearchString\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"initialize the component with a given search string\"\n        },\n        \"attribute\": \"init-search-string\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"preferredItems\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string[]\",\n          \"resolved\": \"string[]\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"preferredItems\\nList of preferred items. If set, these items will be\\nshown first in the list of items.\\n\\nExample: [\\\"c523\\\", \\\"c50\\\"]\"\n        }\n      },\n      \"classUriPrefix\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"type\",\n              \"text\": \"{string}\"\n            }],\n          \"text\": \"classUriPrefix\\nOptional prefix for the class uris.\\nExample: \\\"http://geovistory.org/resource/\\\"\\nDefault: \\\"http://geovistory.org/resource/\\\"\"\n        },\n        \"attribute\": \"class-uri-prefix\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"entityList\": {},\n      \"classSelect\": {},\n      \"fullCount\": {},\n      \"_offset\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-explorer.js.map\n"],"mappings":"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"}