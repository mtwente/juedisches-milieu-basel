{"version":3,"names":["geovYasguiMapCirclesCss","createGeoJSON","data","labelIndices","type","features","map","ele","_a","_b","_c","_d","_e","_f","_g","geometry","coordinates","parseFloat","value","properties","label","radius","Math","round","number","parseInt","typeindex","indexOf","link","children","GeovYasguiMapCircles","constructor","hostRef","this","long","lat","radiusMin","radiusMax","maxZoom","colorScale","ledgendExpanded","disableScrollZoom","displayMapNavigationControls","Set","componentDidLoad","isNode","invalidPoints","filter","d","_h","_j","Object","hasOwn","isNaN","Number","length","MapLibre","importMapLibre","Map","container","mapContainerEl","style","version","sources","osm","tiles","tileSize","attribution","maxzoom","layers","id","source","glyphs","zoom","minLng","MAX_VALUE","maxLng","MIN_VALUE","minLat","maxLat","forEach","lng","min","max","bounds","fitBounds","padding","animate","scrollZoom","disable","addControl","NavigationControl","on","addSource","maxRadius","colorSteps","i","push","addLayer","paint","handleMarkerClick","e","popupData","feature","JSON","parse","popupItem","url","suffix","items","c","el","document","createElement","Popup","setLngLat","setDOMContent","setMaxWidth","addTo","getCanvas","cursor","render","h","Host","class","size","fill","onClick","icon","closeOutline","informationCircleOutline","slot","lines","height","width","cx","cy","r","ref"],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-map-circles/geov-yasgui-map-circles.css?tag=geov-yasgui-map-circles","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-map-circles/geov-yasgui-map-circles.js"],"sourcesContent":[":host,\ngeov-yasgui-map-circles {\n  container-type: size;\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n.geov-map-circles-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.geov-map-circles-container .maplibregl-popup-content {\n  overflow-y: auto;\n  max-height: 210px;\n  padding: 0;\n}\n\n\ngeov-yasgui-map-circles ion-list {\n  overflow-y: auto;\n}\n\n.legend {\n  position: absolute;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0;\n  top: 10px;\n  left: 10px;\n  max-height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n}\n\n\n.legend .collapse-button {\n  position: absolute;\n  margin: 0;\n  top: 4px;\n  left: 0;\n  z-index: 9999;\n}\n\n.legend.collapsed {\n  width: 46px;\n  height: 36px;\n\n}\n\n\n@container (width >=700px) {\n  .legend {\n    max-width: 300px;\n  }\n}\n\n#display-query {\n  position: absolute;\n  z-index: 1;\n  right: 0;\n}\n\n.yasgui .hidden {\n  display: none !important;\n}\n","import { Host, h } from \"@stencil/core\";\nimport { closeOutline, informationCircleOutline } from \"ionicons/icons\";\nimport { importMapLibre } from \"../../lib/importMapLibre\";\nimport { isNode } from \"../../lib/isNode\";\nfunction createGeoJSON(data, labelIndices) {\n  return {\n    type: 'FeatureCollection',\n    features: data.map(ele => {\n      var _a, _b, _c, _d, _e, _f, _g;\n      return {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [parseFloat(ele['long'].value), parseFloat(ele['lat'].value)],\n        },\n        //set the properties to the .value of the ele\n        properties: {\n          label: (_a = ele['label']) === null || _a === void 0 ? void 0 : _a.value,\n          radius: Math.round((parseFloat((_b = ele['radius']) === null || _b === void 0 ? void 0 : _b.value) || 0) * 10) / 10,\n          number: parseInt((_c = ele['number']) === null || _c === void 0 ? void 0 : _c.value),\n          type: ((_d = ele['type']) === null || _d === void 0 ? void 0 : _d.value) || 'none',\n          typeindex: labelIndices.indexOf(((_e = ele['type']) === null || _e === void 0 ? void 0 : _e.value) || 'none'),\n          link: (_f = ele['link']) === null || _f === void 0 ? void 0 : _f.value,\n          children: (_g = ele['children']) === null || _g === void 0 ? void 0 : _g.value,\n        },\n      };\n    }),\n  };\n}\n/**\n * This component is used by Yasgui as a plugin. It consumes the data from Yasgui.\n *\n * The result is displayed as circles of different sizes on a map.\n */\nexport class GeovYasguiMapCircles {\n  constructor() {\n    this.data = [\n      {\n        radius: { value: '80.2345', type: 'literal' },\n        number: { value: '0', type: 'literal' },\n        type: { value: 'default', type: 'literal' },\n        long: { value: '8.2318', type: 'literal' },\n        lat: { value: '46.7985', type: 'literal' },\n        label: { value: 'default', type: 'literal' },\n        link: { value: 'default', type: 'literal' },\n      },\n    ];\n    this.radiusMin = 8;\n    this.radiusMax = 20;\n    this.maxZoom = 10;\n    this.colorScale = ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c'];\n    this.ledgendExpanded = true;\n    this.disableScrollZoom = false;\n    this.displayMapNavigationControls = false;\n    this.labelIndices = [...new Set(this.data.map(ele => { var _a; return ((_a = ele['type']) === null || _a === void 0 ? void 0 : _a.value) || 'none'; }))];\n  }\n  async componentDidLoad() {\n    // If we are in a browser\n    if (!isNode()) {\n      /*\n       * Validation: Long and Lat must be numbers and < 540 and > -540, they can also not be omitted\n       * Radius must be a number and not 0, it can be omitted\n       * Number must be a number, it can be omitted\n       */\n      const invalidPoints = this.data.filter(d => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        //@ts-ignore - we want the coercion of isNan\n        if (Object.hasOwn(d, 'radius') && (isNaN((_a = d['radius']) === null || _a === void 0 ? void 0 : _a.value) || Number((_b = d['radius']) === null || _b === void 0 ? void 0 : _b.value) === 0))\n          return true;\n        //@ts-ignore - we want the coercion of isNan\n        if (Object.hasOwn(d, 'number') && isNaN((_c = d['number']) === null || _c === void 0 ? void 0 : _c.value))\n          return true;\n        return (Number((_d = d['long']) === null || _d === void 0 ? void 0 : _d.value) < -180 ||\n          Number((_e = d['long']) === null || _e === void 0 ? void 0 : _e.value) > 180 ||\n          Number((_f = d['lat']) === null || _f === void 0 ? void 0 : _f.value) < -90 ||\n          Number((_g = d['lat']) === null || _g === void 0 ? void 0 : _g.value) > 90 ||\n          //@ts-ignore - we want the coercion of isNan\n          isNaN((_h = d['long']) === null || _h === void 0 ? void 0 : _h.value) ||\n          //@ts-ignore - we want the coercion of isNan\n          isNaN((_j = d['lat']) === null || _j === void 0 ? void 0 : _j.value));\n      });\n      if (!(invalidPoints === null || invalidPoints === void 0 ? void 0 : invalidPoints.length)) {\n        // Load MapLibre script\n        const MapLibre = await importMapLibre();\n        const map = new MapLibre.Map({\n          container: this.mapContainerEl,\n          style: {\n            version: 8,\n            sources: {\n              osm: {\n                type: 'raster',\n                tiles: [\n                  'https://a.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                  'https://b.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                  'https://c.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                ],\n                tileSize: 256,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n                maxzoom: 19,\n              },\n            },\n            layers: [\n              {\n                id: 'osm',\n                type: 'raster',\n                source: 'osm', // This must match the source key above\n              },\n            ],\n            glyphs: 'https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf',\n          },\n          zoom: 6,\n        });\n        /*\n         * move the map to the bounds of the data\n         */\n        let minLng = Number.MAX_VALUE;\n        let maxLng = Number.MIN_VALUE;\n        let minLat = Number.MAX_VALUE;\n        let maxLat = Number.MIN_VALUE;\n        // Find the bounds of the data\n        this.data.forEach(d => {\n          const lng = parseFloat(d['long'].value);\n          const lat = parseFloat(d['lat'].value);\n          minLng = Math.min(minLng, lng);\n          maxLng = Math.max(maxLng, lng);\n          minLat = Math.min(minLat, lat);\n          maxLat = Math.max(maxLat, lat);\n        });\n        const bounds = [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ];\n        map.fitBounds(bounds, {\n          padding: 50,\n          maxZoom: this.maxZoom,\n          animate: false,\n        });\n        if (this.disableScrollZoom) {\n          // disable map zoom when using scroll\n          map.scrollZoom.disable();\n        }\n        if (this.displayMapNavigationControls) {\n          // Add zoom and rotation controls to the map.\n          map.addControl(new MapLibre.NavigationControl());\n        }\n        map.on('load', () => {\n          map.addSource('places', {\n            type: 'geojson',\n            data: createGeoJSON(this.data, this.labelIndices),\n          });\n          const maxRadius = Math.max(...this.data.map(d => { var _a; return parseInt((_a = d['radius']) === null || _a === void 0 ? void 0 : _a.value) || 0; })); // get the max radius (if any)\n          let colorSteps;\n          if (this.colorScale.length < 2) {\n            colorSteps = this.colorScale[0];\n          }\n          else {\n            colorSteps = ['step', ['get', 'typeindex']];\n            for (let i = 0; i < this.colorScale.length; i++) {\n              if (i > 0)\n                colorSteps.push(i);\n              colorSteps.push(this.colorScale[i]);\n            }\n          }\n          map.addLayer({\n            id: 'circles',\n            type: 'circle',\n            source: 'places',\n            paint: {\n              'circle-color': colorSteps,\n              'circle-radius': maxRadius ? ['interpolate', ['linear'], ['get', 'radius'], 0, this.radiusMin, maxRadius, this.radiusMax] : this.radiusMin,\n              'circle-opacity': 0.8,\n            },\n          });\n          //   Add popups to the markers\n          const handleMarkerClick = e => {\n            const coordinates = e.features[0].geometry.coordinates;\n            // let html = `<ul>`;\n            const popupData = e.features.map((feature) => {\n              let children = [];\n              try {\n                children = JSON.parse(feature.properties.children);\n              }\n              catch (_a) { }\n              const popupItem = {\n                label: feature.properties.label,\n                url: feature.properties.link,\n                suffix: feature.properties.number,\n                items: children.map(c => ({\n                  label: c === null || c === void 0 ? void 0 : c.label,\n                  url: c === null || c === void 0 ? void 0 : c.url,\n                })),\n              };\n              return popupItem;\n            });\n            const el = document.createElement('geov-map-circles-popup');\n            el.items = popupData;\n            new MapLibre.Popup().setLngLat(coordinates).setDOMContent(el).setMaxWidth('340px').addTo(map);\n          };\n          // An on click event listener for the \"circles\" layer\n          map.on('click', 'circles', handleMarkerClick);\n          map.on('mouseenter', 'circles', () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n          map.on('mouseleave', 'circles', () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      }\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"ion-card\", { class: `legend ${this.ledgendExpanded ? '' : 'collapsed'}` }, h(\"ion-card-header\", null, h(\"ion-button\", { size: \"small\", class: \"collapse-button\", fill: \"clear\", onClick: () => (this.ledgendExpanded = !this.ledgendExpanded) }, h(\"ion-icon\", { icon: this.ledgendExpanded ? closeOutline : informationCircleOutline, slot: \"icon-only\" }))), h(\"ion-list\", null, this.labelIndices.map((type, i) => (h(\"ion-item\", { lines: i === this.labelIndices.length - 1 ? 'none' : 'full' }, h(\"svg\", { slot: \"start\", height: \"1rem\", width: \"1rem\" }, h(\"circle\", { cx: \"50%\", cy: \"50%\", r: \"50%\", fill: this.colorScale[i % this.colorScale.length] })), h(\"ion-label\", { class: \"ion-text-wrap\" }, type)))))), h(\"div\", { class: \"geov-map-circles-container\", ref: el => (this.mapContainerEl = el) })));\n  }\n  static get is() { return \"geov-yasgui-map-circles\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-map-circles.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-map-circles.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"data\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Parser.Binding[]\",\n          \"resolved\": \"Binding[]\",\n          \"references\": {\n            \"Parser\": {\n              \"location\": \"import\",\n              \"path\": \"@triply/yasr\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"defaultValue\": \"[\\n    {\\n      radius: { value: '80.2345', type: 'literal' },\\n      number: { value: '0', type: 'literal' },\\n      type: { value: 'default', type: 'literal' },\\n      long: { value: '8.2318', type: 'literal' },\\n      lat: { value: '46.7985', type: 'literal' },\\n      label: { value: 'default', type: 'literal' },\\n      link: { value: 'default', type: 'literal' },\\n    },\\n  ]\"\n      },\n      \"radiusMin\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The minimum radius of a circle.\"\n        },\n        \"attribute\": \"radius-min\",\n        \"reflect\": false,\n        \"defaultValue\": \"8\"\n      },\n      \"radiusMax\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The maximum radius of a circle.\"\n        },\n        \"attribute\": \"radius-max\",\n        \"reflect\": false,\n        \"defaultValue\": \"20\"\n      },\n      \"maxZoom\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The maximum zoom level to allow when the map view transitions to the specified bounds,\\nwhen the map is initialized.\"\n        },\n        \"attribute\": \"max-zoom\",\n        \"reflect\": false,\n        \"defaultValue\": \"10\"\n      },\n      \"colorScale\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string[]\",\n          \"resolved\": \"string[]\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"defaultValue\": \"['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c']\"\n      },\n      \"ledgendExpanded\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the legend is expanded, else collapsed\"\n        },\n        \"attribute\": \"ledgend-expanded\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"disableScrollZoom\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, prevents scroll from zooming the map.\"\n        },\n        \"attribute\": \"disable-scroll-zoom\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"displayMapNavigationControls\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, adds zoom and rotation controls to the map.\"\n        },\n        \"attribute\": \"display-map-navigation-controls\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"labelIndices\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-yasgui-map-circles.js.map\n"],"mappings":"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"}