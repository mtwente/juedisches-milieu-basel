{"version":3,"names":["RouterProvider","ionRouterElement","this","_ionRouterElement","e","routerProvider","f","module","exports","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","global","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","draining","queue","oldQueue","len","immediate","task","push","self","window","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","prototype","onRejected","then","onFulfilled","promise","constructor","unwrap","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","resolve","reject","func","returnValue","result","tryCatch","getThen","status","thenable","error","obj","appyThen","apply","arguments","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropDBPromise","deleteDatabase","onblocked","_forage","dropObjectPromise","deleteObjectStore","_forage2","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","Drivers","SecureStorage","IndexedDB","LocalStorage","dbKey","driverOrder","Storage","_db","_secureStorageDriver","actualConfig","assign","create","_a","assertDb","set","remove","forEach","iteratorCallback","setEncryptionKey","appendToMap","map","propName","items","debounce","fn","ms","timeoutId","clearTimeout","isConnected","maybeElement","cleanupElements","filter","stencilSubscription","getRenderingRef","elmsToUpdate","Map","dispose","elm","elements","forceUpdate","reset","elms","val","createObservableMap","defaultState","shouldUpdate","b","unwrappedState","states","entries","cb","oldValue","Proxy","_","ownKeys","from","getOwnPropertyDescriptor","enumerable","configurable","has","on","eventName","removeFromArray","onChange","unSet","newValue","unReset","use","subscriptions","unsubs","reduce","subscription","unsub","index","createStore","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","playedIntro","showBravo","appVersion","getRandomAndRemoveFromArray","randomIndex","Math","floor","random","pickedElement","splice","pickMany","nr","clone","res","sleep","async","startRoulette","nrUnlock","unlocked","locked","picked","promisedIntervals","wait","delay","setInterval","intervals","clearInterval","setupStorage","toStorage","storedStateJSON","storedState","getShuffle","shuffle","queryString","location","search","urlParams","URLSearchParams","catch","finally","startsWith","done"],"sources":["src/global/router-provider.ts","node_modules/localforage/dist/localforage.js","node_modules/@ionic/storage/dist/esm/index.js","node_modules/@stencil/store/dist/index.mjs","src/global/store.ts"],"sourcesContent":["class RouterProvider {\n  private _ionRouterElement: HTMLIonRouterElement;\n  get ionRouterElement() {\n    return this._ionRouterElement;\n  }\n  set ionRouterElement(e: HTMLIonRouterElement) {\n    this._ionRouterElement = e;\n  }\n}\nconst routerProvider = new RouterProvider();\nexport default routerProvider;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import LocalForage from 'localforage';\n/** @hidden */\nexport const Drivers = {\n    SecureStorage: 'ionicSecureStorage',\n    IndexedDB: LocalForage.INDEXEDDB,\n    LocalStorage: LocalForage.LOCALSTORAGE\n};\nconst defaultConfig = {\n    name: '_ionicstorage',\n    storeName: '_ionickv',\n    dbKey: '_ionickey',\n    driverOrder: [\n        Drivers.SecureStorage,\n        Drivers.IndexedDB,\n        Drivers.LocalStorage\n    ]\n};\nexport class Storage {\n    /**\n     * Create a new Storage instance using the order of drivers and any additional config\n     * options to pass to LocalForage.\n     *\n     * Possible default driverOrder options are: ['indexeddb', 'localstorage'] and the\n     * default is that exact ordering.\n     *\n     * When using Ionic Secure Storage (enterprise only), use ['ionicSecureStorage', 'indexeddb', 'localstorage'] to ensure\n     * Secure Storage is used when available, or fall back to IndexedDB or LocalStorage on the web.\n     */\n    constructor(config = defaultConfig) {\n        this._db = null;\n        this._secureStorageDriver = null;\n        const actualConfig = Object.assign({}, defaultConfig, config || {});\n        this._config = actualConfig;\n    }\n    async create() {\n        const db = LocalForage.createInstance(this._config);\n        this._db = db;\n        await db.setDriver(this._config.driverOrder || []);\n        return this;\n    }\n    /**\n     * Define a new Driver. Must be called before\n     * initializing the database. Example:\n     *\n     * await storage.defineDriver(myDriver);\n     * await storage.create();\n     */\n    async defineDriver(driver) {\n        if (driver._driver === Drivers.SecureStorage) {\n            this._secureStorageDriver = driver;\n        }\n        return LocalForage.defineDriver(driver);\n    }\n    /**\n     * Get the name of the driver being used.\n     * @returns Name of the driver\n     */\n    get driver() {\n        var _a;\n        return ((_a = this._db) === null || _a === void 0 ? void 0 : _a.driver()) || null;\n    }\n    assertDb() {\n        if (!this._db) {\n            throw new Error('Database not created. Must call create() first');\n        }\n        return this._db;\n    }\n    /**\n     * Get the value associated with the given key.\n     * @param key the key to identify this value\n     * @returns Returns a promise with the value of the given key\n     */\n    get(key) {\n        const db = this.assertDb();\n        return db.getItem(key);\n    }\n    /**\n     * Set the value for the given key.\n     * @param key the key to identify this value\n     * @param value the value for this key\n     * @returns Returns a promise that resolves when the key and value are set\n     */\n    set(key, value) {\n        const db = this.assertDb();\n        return db.setItem(key, value);\n    }\n    /**\n     * Remove any value associated with this key.\n     * @param key the key to identify this value\n     * @returns Returns a promise that resolves when the value is removed\n     */\n    remove(key) {\n        const db = this.assertDb();\n        return db.removeItem(key);\n    }\n    /**\n     * Clear the entire key value store. WARNING: HOT!\n     * @returns Returns a promise that resolves when the store is cleared\n     */\n    clear() {\n        const db = this.assertDb();\n        return db.clear();\n    }\n    /**\n     * @returns Returns a promise that resolves with the number of keys stored.\n     */\n    length() {\n        const db = this.assertDb();\n        return db.length();\n    }\n    /**\n     * @returns Returns a promise that resolves with the keys in the store.\n     */\n    keys() {\n        const db = this.assertDb();\n        return db.keys();\n    }\n    /**\n     * Iterate through each key,value pair.\n     * @param iteratorCallback a callback of the form (value, key, iterationNumber)\n     * @returns Returns a promise that resolves when the iteration has finished.\n     */\n    forEach(iteratorCallback) {\n        const db = this.assertDb();\n        return db.iterate(iteratorCallback);\n    }\n    setEncryptionKey(key) {\n        var _a;\n        if (!this._secureStorageDriver) {\n            throw new Error('@ionic-enterprise/secure-storage not installed. Encryption support not available');\n        }\n        else {\n            (_a = this._secureStorageDriver) === null || _a === void 0 ? void 0 : _a.setEncryptionKey(key);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { getRenderingRef, forceUpdate } from '@stencil/core';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nexport { createObservableMap, createStore };\n","import { Storage } from '@ionic/storage';\nimport { createStore } from '@stencil/store';\nimport { version } from '../buildinfo';\ntype PuzzlePieceState = 'locked' | 'unlocked' | 'done' | 'highlighted';\nexport interface AppState {\n  t1: PuzzlePieceState;\n  t2: PuzzlePieceState;\n  t3: PuzzlePieceState;\n  t4: PuzzlePieceState;\n  t5: PuzzlePieceState;\n  t6: PuzzlePieceState;\n  t7: PuzzlePieceState;\n  t8: PuzzlePieceState;\n  t9: PuzzlePieceState;\n  t10: PuzzlePieceState;\n  t11: PuzzlePieceState;\n  t12: PuzzlePieceState;\n\n  playedIntro: boolean;\n  showBravo: boolean;\n  appVersion: string;\n}\nconst { state, onChange, on, reset } = createStore<AppState>({\n  t1: 'unlocked',\n  t2: 'locked',\n  t3: 'locked',\n  t4: 'locked',\n  t5: 'locked',\n  t6: 'locked',\n  t7: 'locked',\n  t8: 'locked',\n  t9: 'locked',\n  t10: 'locked',\n  t11: 'locked',\n  t12: 'locked',\n\n  playedIntro: false,\n  showBravo: false,\n  appVersion: version,\n});\nfunction getRandomAndRemoveFromArray(array: string[]) {\n  // Generate a random index within the range of the array length\n  const randomIndex = Math.floor(Math.random() * array.length);\n\n  // Remove the element at the random index from the array and store it\n  const pickedElement = array.splice(randomIndex, 1)[0];\n\n  // Return the picked element\n  return pickedElement;\n}\nfunction pickMany(nr: number, array: string[]): string[] {\n  let clone = [...array];\n  // as long as 3 or more are locked\n  if (clone.length > 2) {\n    // exclude t12\n    clone = clone.filter(k => k !== 't12');\n  }\n  const res: string[] = [];\n  for (let i = 0; i < nr; i++) {\n    res.push(getRandomAndRemoveFromArray(clone));\n  }\n  return res;\n}\nconst sleep = async (ms: number) =>\n  new Promise<void>(res => {\n    setTimeout(() => {\n      res();\n    }, ms);\n  });\nasync function startRoulette(nrUnlock: number) {\n  // get unlocked\n  const unlocked = Object.keys(state).filter(k => state[k] === 'unlocked');\n  if (unlocked.length >= 3) return;\n  await sleep(500);\n\n  // get all locked\n  const locked = Object.keys(state).filter(k => state[k] === 'locked');\n\n  // pick the levels to unlock\n  const picked = pickMany(nrUnlock, locked);\n\n  // blink\n  const promisedIntervals = locked.map(async key => {\n    const wait = Math.random() * 500;\n    await sleep(wait);\n    const delay = 800;\n    return setInterval(() => {\n      if (state[key] === 'locked') {\n        state[key] = 'highlighted';\n      }\n      setTimeout(() => {\n        if (picked.includes(key)) {\n          state[key] = 'unlocked';\n        } else {\n          state[key] = 'locked';\n        }\n      }, 200);\n    }, delay);\n  });\n  const intervals = await Promise.all(promisedIntervals);\n\n  // stop blinking\n  setTimeout(() => {\n    intervals.forEach(i => clearInterval(i));\n  }, 2000);\n}\n\nasync function setupStorage() {\n  const store = new Storage();\n  await store.create();\n\n  // save state to local storage on each change\n  const toStorage = () => store.set('app-state', JSON.stringify(state));\n  on('set', toStorage);\n  on('reset', toStorage);\n\n  // get state from local storage on init\n  try {\n    const storedStateJSON = await store.get('app-state');\n    const storedState: AppState = JSON.parse(storedStateJSON);\n\n    // if app versions are the same\n    if (storedState?.appVersion === state?.appVersion) {\n      // read the stored state into memory\n      for (const key in storedState) {\n        if (Object.prototype.hasOwnProperty.call(storedState, key)) {\n          state[key] = storedState[key] === 'highlighted' ? 'locked' : storedState[key];\n        }\n      }\n    } else {\n      // override the storage with initial state\n      toStorage();\n    }\n  } catch (error) {\n    console.warn('Problem when trying to restore the state from storage');\n  }\n}\n\n/**\n * returns false, if the URL contains ?shuffle=false, else true\n */\nfunction getShuffle(): boolean {\n  let shuffle = true;\n  try {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    shuffle = urlParams.get('shuffle') !== 'false';\n  } catch (error) {}\n  return shuffle;\n}\nsetupStorage()\n  .then()\n  .catch()\n  .finally(() => {\n    const shuffle = getShuffle();\n\n    onChange('t1', value => {\n      if (value === 'done') {\n        if (shuffle) {\n          const nrUnlock = 3;\n          startRoulette(nrUnlock);\n        } else {\n          state.t2 = 'unlocked';\n          state.t3 = 'unlocked';\n          state.t4 = 'unlocked';\n          state.t5 = 'unlocked';\n          state.t6 = 'unlocked';\n          state.t7 = 'unlocked';\n          state.t8 = 'unlocked';\n          state.t9 = 'unlocked';\n          state.t10 = 'unlocked';\n          state.t11 = 'unlocked';\n          state.t12 = 'unlocked';\n        }\n      }\n    });\n\n    if (shuffle) {\n      for (let i = 2; i <= 12; i++) {\n        onChange(('t' + i) as keyof AppState, value => {\n          if (value === 'done') {\n            const nrUnlock = 1;\n            startRoulette(nrUnlock);\n          }\n        });\n      }\n    }\n    on('set', async key => {\n      if (key.startsWith('t')) {\n        const parts = [state.t1, state.t2, state.t3, state.t4, state.t5, state.t6, state.t7, state.t8, state.t9, state.t10, state.t11, state.t12];\n        const done = parts.filter(t => t === 'done');\n        if (parts.length === done.length) {\n          await sleep(1000);\n          state.showBravo = true;\n        } else if (state.showBravo === true) {\n          state.showBravo = false;\n        }\n      }\n    });\n  });\n\nexport { onChange, reset, state };\n"],"mappings":"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"}