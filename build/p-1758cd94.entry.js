import{r as g,h as n,H as m,d as y}from"./p-1bafedb0.js";import{i as f}from"./p-27a92608.js";import{i as b}from"./p-66f7ee4f.js";import{s as c}from"./p-855a8bbd.js";const v="geov-map-places{display:block;position:relative;width:100%;height:100%;--point-color:var(--ion-color-primary, #3880ff);--circle-color-small:#fc8d59;--circle-color-medium:#ffffbf;--circle-color-large:#91bfdb}geov-map-places ion-toast{--background:var(--ion-color-danger, red)}.loading{display:flex;align-items:center;justify-content:center;background-color:var(--ion-color-light-tint, #fafafa)}",p=class{constructor(i){g(this,i),this.parseResponse=(e,l)=>{var t;const o=(t=e?.results)===null||t===void 0?void 0:t.bindings;if(o.length>=this.limit){const s=this.el.querySelector("ion-card");s.style.setProperty("display","block"),s.querySelector("ion-card-title").innerHTML=`Too many results (${o.length})`}o.forEach(s=>{const r=s.subject.value,a=s.geoPlaceLabel.value;this.markers.ids.has(r)||(this.markers.features.push({type:"Feature",geometry:{type:"Point",coordinates:[parseFloat(s.long.value),parseFloat(s.lat.value)]},properties:{name:a,link:r}}),this.markers.ids.add(r))}),l.getSource("places").setData(this.markers)},this.sparqlEndpoint=void 0,this.limit=1e4,this.center=[8.2318,46.7985],this.zoom=6,this.queryBoundingBox=!0,this.projectID=void 0,this.loading=void 0,this.markers={type:"FeatureCollection",features:[],ids:new Set}}async componentDidLoad(){if(!f()){this.loading=!0;const i=await b(),e=new i.Map({container:this.el,style:{version:8,sources:{osm:{type:"raster",tiles:["https://a.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png","https://b.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png","https://c.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png"],tileSize:256,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',maxzoom:19}},layers:[{id:"osm",type:"raster",source:"osm"}],glyphs:"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf"},center:this.center,zoom:this.zoom}),l=t=>`
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX ontome: <https://ontome.net/ontology/>
      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

      SELECT ?subject ?geoPlaceLabel ?long ?lat
          WHERE {?subject ^ontome:p147 ?presence.
          ?subject rdfs:label    ?geoPlaceLabel.
          ?presence ontome:p148 ?place.
          bind(replace(str(?place), '<http://www.opengis.net/def/crs/EPSG/0/4326>', "", "i") as ?rep)
          bind( replace( str(?rep), "^[^0-9.-]*([-]?[0-9.]+) .*$", "$1" ) as ?long )
          bind( replace( str(?rep), "^.* ([-]?[0-9.]+)[^0-9.]*$", "$1" ) as ?lat )
          ${this.queryBoundingBox?`
          FILTER (
            xsd:double(?lat) >= ${t._sw.lat.toFixed(3)} &&
            xsd:double(?lat) <= ${t._ne.lat.toFixed(3)} &&
            xsd:double(?long) >= ${t._sw.lng.toFixed(3)} &&
            xsd:double(?long) <= ${t._ne.lng.toFixed(3)}
        )`:""}
        }
        LIMIT ${this.limit}
          `;e.on("load",()=>{e.addSource("places",{type:"geojson",data:this.markers,cluster:!0,clusterMaxZoom:12,clusterRadius:40});const t=getComputedStyle(this.el),o=[t.getPropertyValue("--point-color")||"red",t.getPropertyValue("--circle-color-small")||"red",t.getPropertyValue("--circle-color-medium")||"green",t.getPropertyValue("--circle-color-large")||"grey"];e.addLayer({id:"clusters",type:"circle",source:"places",filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],o[1],100,o[2],750,o[3]],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}}),e.addLayer({id:"cluster-count",type:"symbol",source:"places",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-size":12}}),e.addLayer({id:"unclustered-point",type:"circle",source:"places",filter:["!",["has","point_count"]],paint:{"circle-color":o[0],"circle-radius":10}});const s=r=>{const a=r.features[0],d=a.geometry.coordinates,u=a.properties.name,h=this.projectID?`${a.properties.link}?p=${this.projectID}`:a.properties.link;new i.Popup().setLngLat(d).setHTML(`<div><a href = "${h}" target="_blank">${u}</a></div>`).addTo(e)};e.on("click","unclustered-point",s),e.on("mouseenter","unclustered-point",()=>{e.getCanvas().style.cursor="pointer"}),e.on("mouseleave","unclustered-point",()=>{e.getCanvas().style.cursor=""}),c(this.sparqlEndpoint,l(e.getBounds())).then(r=>this.parseResponse(r,e))}),this.queryBoundingBox&&e.on("moveend",()=>{var t;(t=this.el.querySelectorAll("ion-card"))===null||t===void 0||t.forEach(o=>o.style.setProperty("display","none")),c(this.sparqlEndpoint,l(e.getBounds())).then(o=>this.parseResponse(o,e))}),this.loading=!1}}render(){return n(m,null,this.loading&&n("div",{style:{width:"100%",height:"100%"},class:"loading"},n("ion-spinner",{name:"dots"})),n("ion-card",{style:{display:"none",zIndex:"1000"}},n("ion-card-header",null,n("ion-card-title",null,"Too many results")),n("ion-card-content",null,"please zoom in to see all available datapoints in a given location")))}get el(){return y(this)}};p.style=v;export{p as geov_map_places};
