import{r as t,h as e,H as o,d as s}from"./p-1bafedb0.js";import{i}from"./p-27a92608.js";import{i as n}from"./p-66f7ee4f.js";import{s as r}from"./p-855a8bbd.js";const a="geov-map-places{display:block;position:relative;width:100%;height:100%;--point-color:var(--ion-color-primary, #3880ff);--circle-color-small:#fc8d59;--circle-color-medium:#ffffbf;--circle-color-large:#91bfdb}geov-map-places ion-toast{--background:var(--ion-color-danger, red)}.loading{display:flex;align-items:center;justify-content:center;background-color:var(--ion-color-light-tint, #fafafa)}";const l=class{constructor(e){t(this,e);this.parseResponse=(t,e)=>{var o;const s=(o=t===null||t===void 0?void 0:t.results)===null||o===void 0?void 0:o.bindings;if(s.length>=this.limit){const t=this.el.querySelector("ion-card");t.style.setProperty("display","block");t.querySelector("ion-card-title").innerHTML=`Too many results (${s.length})`}s.forEach((t=>{const e=t["subject"].value;const o=t["geoPlaceLabel"].value;if(!this.markers.ids.has(e)){this.markers.features.push({type:"Feature",geometry:{type:"Point",coordinates:[parseFloat(t["long"].value),parseFloat(t["lat"].value)]},properties:{name:o,link:e}});this.markers.ids.add(e)}}));e.getSource("places").setData(this.markers)};this.sparqlEndpoint=undefined;this.limit=1e4;this.center=[8.2318,46.7985];this.zoom=6;this.queryBoundingBox=true;this.projectID=undefined;this.loading=undefined;this.markers={type:"FeatureCollection",features:[],ids:new Set}}async componentDidLoad(){if(!i()){this.loading=true;const t=await n();const e=new t.Map({container:this.el,style:{version:8,sources:{osm:{type:"raster",tiles:["https://a.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png","https://b.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png","https://c.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png"],tileSize:256,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',maxzoom:19}},layers:[{id:"osm",type:"raster",source:"osm"}],glyphs:"https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf"},center:this.center,zoom:this.zoom});const o=t=>`\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX ontome: <https://ontome.net/ontology/>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      SELECT ?subject ?geoPlaceLabel ?long ?lat\n          WHERE {?subject ^ontome:p147 ?presence.\n          ?subject rdfs:label    ?geoPlaceLabel.\n          ?presence ontome:p148 ?place.\n          bind(replace(str(?place), '<http://www.opengis.net/def/crs/EPSG/0/4326>', "", "i") as ?rep)\n          bind( replace( str(?rep), "^[^0-9.-]*([-]?[0-9.]+) .*$", "$1" ) as ?long )\n          bind( replace( str(?rep), "^.* ([-]?[0-9.]+)[^0-9.]*$", "$1" ) as ?lat )\n          ${this.queryBoundingBox?`\n          FILTER (\n            xsd:double(?lat) >= ${t._sw.lat.toFixed(3)} &&\n            xsd:double(?lat) <= ${t._ne.lat.toFixed(3)} &&\n            xsd:double(?long) >= ${t._sw.lng.toFixed(3)} &&\n            xsd:double(?long) <= ${t._ne.lng.toFixed(3)}\n        )`:""}\n        }\n        LIMIT ${this.limit}\n          `;e.on("load",(()=>{e.addSource("places",{type:"geojson",data:this.markers,cluster:true,clusterMaxZoom:12,clusterRadius:40});const s=getComputedStyle(this.el);const i=[s.getPropertyValue("--point-color")||"red",s.getPropertyValue("--circle-color-small")||"red",s.getPropertyValue("--circle-color-medium")||"green",s.getPropertyValue("--circle-color-large")||"grey"];e.addLayer({id:"clusters",type:"circle",source:"places",filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],i[1],100,i[2],750,i[3]],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}});e.addLayer({id:"cluster-count",type:"symbol",source:"places",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-size":12}});e.addLayer({id:"unclustered-point",type:"circle",source:"places",filter:["!",["has","point_count"]],paint:{"circle-color":i[0],"circle-radius":10}});const n=o=>{const s=o.features[0];const i=s.geometry.coordinates;const n=s.properties.name;const r=this.projectID?`${s.properties.link}?p=${this.projectID}`:s.properties.link;(new t.Popup).setLngLat(i).setHTML(`<div><a href = "${r}" target="_blank">${n}</a></div>`).addTo(e)};e.on("click","unclustered-point",n);e.on("mouseenter","unclustered-point",(()=>{e.getCanvas().style.cursor="pointer"}));e.on("mouseleave","unclustered-point",(()=>{e.getCanvas().style.cursor=""}));r(this.sparqlEndpoint,o(e.getBounds())).then((t=>this.parseResponse(t,e)))}));if(this.queryBoundingBox){e.on("moveend",(()=>{var t;(t=this.el.querySelectorAll("ion-card"))===null||t===void 0?void 0:t.forEach((t=>t.style.setProperty("display","none")));r(this.sparqlEndpoint,o(e.getBounds())).then((t=>this.parseResponse(t,e)))}))}this.loading=false}}render(){return e(o,null,this.loading&&e("div",{style:{width:100+"%",height:100+"%"},class:"loading"},e("ion-spinner",{name:"dots"})),e("ion-card",{style:{display:"none",zIndex:"1000"}},e("ion-card-header",null,e("ion-card-title",null,"Too many results")),e("ion-card-content",null,"please zoom in to see all available datapoints in a given location")))}get el(){return s(this)}};l.style=a;export{l as geov_map_places};
//# sourceMappingURL=p-1758cd94.entry.js.map