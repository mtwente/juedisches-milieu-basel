{"version":3,"names":["GeovDisplayGeosparqlWktliteral","constructor","hostRef","this","value","undefined","render","coord","replace","coordonnees","split","h","Fragment","geovDisplayStringLiteralCss","GeovDisplayStringLiteralLiteral","handleResize","resizePage","modalTitle","label","language","componentDidLoad","window","addEventListener","labelContainer","itemButton","scrollWidth","clientWidth","style","display","open","modal","present","dismiss","class","ref","element","size","fill","onClick","el","icon","eye","onWillDismiss","isOpen","slot","geovEntityClassIconCss","iconMap","personOutline","locationOutline","peopleOutline","boatOutline","calendarClearOutline","calendarOutline","documentTextOutline","skullOutline","balloonOutline","heartHalfOutline","transgenderOutline","briefcaseOutline","starOutline","earthOutline","chatbubbleEllipsesOutline","defaultIcon","ellipseOutline","GeovEntityClassIcon","classURI","_a","Host","geovEntityPredicateModalCss","GeovEntityPredicateModal","fetchBeforeRender","entityUri","sparqlEndpoint","totalCount","pageSize","predicateUri","predicateLabel","uriRegex","uriReplace","modalIsOpen","e","close","content","geovEntityPropsByPredicateCss","qrProps","predicateId","subjectUri","offset","GeovEntityPropsByPredicate","_ssrId","data","color","pageIndex","entities","setSSRId","componentWillLoad","getSSRData","loading","pageReload","then","d","setSSRData","catch","changePage","pageEvent","detail","qr","sparqlJson","res","results","bindings","_","error","_b","showPaginator","fixed","lines","href","renderPaginator","map","entity","renderItem","item","isUri","type","renderUri","renderLiteral","klass","entityType","renderExternalUri","renderGenericEntity","_c","regex","url","regexReplace","isInternal","includes","target","detailIcon","openOutline","entityLabel","parent","length","onPageChanged","ev","showFirstLastButtons","_d","dt","geovListItemNestedPropertiesCss","qrNestedProps","GeovListItemNestedProperties","predicateInclude","predicateExclude","fetchData","nestedProps","rdfTypeProp","rdfsLabelProp","restProps","splitProps","object","objectLabel","getTimeSpanUri","prepareUrl","b","renderPredicateLabel","predicate","countBiggerThanOne","count","renderModal","renderObject","getPredicateLabel","props","p","isInverseOfParent","push","sort","a","labelA","labelB","localeCompare","parseInt","thisPredicate","parentPredicate","isInversePredicate","overlapOne","overlapTwo","query","title","c","datatype","geovPaginatorCss","GeovPaginator","hidePageSize","pageCount","Math","floor","isFirstPage","isLastPage","firstShownItem","lastShownItem","disabled","changePageTo","arrowBackOutline","chevronBackOutline","chevronForwardOutline","arrowForwardOutline","newPageIndex","previousPageIndex","pageChanged","emit","geovTimeSpanCss","GeovTimeSpan","rows","rowsToString","timeInfos","r","getTime","filter","timeInfo","timeUnit","year","month","day","earliest","latest","timeInfoToString","row","_e","_f","toString","padStart"],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-display-geosparql-wktliteral/geov-display-geosparql-wktliteral.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-display-string-literal/geov-display-string-literal.css?tag=geov-display-string-literal&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-display-string-literal/geov-display-string-literal.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-icon/geov-entity-class-icon.css?tag=geov-entity-class-icon&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-icon/geov-entity-class-icon.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-predicate-modal/geov-entity-predicate-modal.css?tag=geov-entity-predicate-modal&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-predicate-modal/geov-entity-predicate-modal.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-props-by-predicate/geov-entity-props-by-predicate.css?tag=geov-entity-props-by-predicate&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-props-by-predicate/geov-entity-props-by-predicate.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-list-item-nested-properties/geov-list-item-nested-properties.css?tag=geov-list-item-nested-properties&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-list-item-nested-properties/geov-list-item-nested-properties.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-paginator/geov-paginator.css?tag=geov-paginator&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-paginator/geov-paginator.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-time-span/geov-time-span.css?tag=geov-time-span&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-time-span/geov-time-span.js"],"sourcesContent":["import { Fragment, h } from \"@stencil/core\";\n/**\n * This Component displays the coordinates given by a WKT literal string of this form:\n *\n * `http://www.opengis.net/def/crs/EPSG/0/4326>POINT(4.79583 52.55417)`\n */\nexport class GeovDisplayGeosparqlWktliteral {\n  constructor() {\n    this.value = undefined;\n  }\n  render() {\n    //http://www.opengis.net/def/crs/EPSG/0/4326>POINT(4.79583 52.55417)\n    let coord = this.value.replace('<http://www.opengis.net/def/crs/EPSG/0/4326>POINT(', '');\n    coord = coord.replace(')', '');\n    const coordonnees = coord.split(' ');\n    return (h(Fragment, null, \"long: \", coordonnees[0], \", lat: \", coordonnees[1]));\n  }\n  static get is() { return \"geov-display-geosparql-wktliteral\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get properties() {\n    return {\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"the opengis value\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      }\n    };\n  }\n}\n//# sourceMappingURL=geov-display-geosparql-wktliteral.js.map\n",":host {\n  display: block;\n}\n\n.wrapper {\n  display: flex;\n}\n\n.literal-container {\n  overflow: clip;\n  width: 100%;\n}\n\n.literal-container ion-button {\n  display: none;\n  margin-left: auto;\n}\n\n.label-container {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.color-light {\n  color: var(--ion-color-step-600, black);\n}\n\n.label {\n  width: 100%;\n}\n\n.open-modal-btn {\n  min-height: 0;\n  padding: 0;\n  margin: 0 0 0 0.25rem;\n  --padding-inline-start: 0;\n  --padding-inline-end: 0;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --padding-end: 0;\n}\n\n/* ion-item {\n  border-top: var(--border-top, solid 1px #eee);\n  --padding-start: var(--padding-start);\n  --inner-padding-top: 0;\n  --min-height: var(--min-height);\n} */","import { Fragment, h } from \"@stencil/core\";\nimport { eye } from \"ionicons/icons\";\n/**\n * This component displays string literals (with and without language)\n *\n * If the displayed string is overflows, the component shows a button\n * to open a modal, where the full string is displayed.\n *\n * Resize the window to see the effect, in case the button is not displayed.\n */\nexport class GeovDisplayStringLiteralLiteral {\n  constructor() {\n    this.handleResize = () => {\n      this.resizePage();\n    };\n    this.modalTitle = undefined;\n    this.label = undefined;\n    this.language = undefined;\n  }\n  componentDidLoad() {\n    this.resizePage();\n    window.addEventListener('resize', this.handleResize);\n  }\n  resizePage() {\n    // Display Expand button if need. The page must be loaded in order to have the measurements\n    if (this.labelContainer && this.itemButton) {\n      // If size of text > size of container\n      if (this.labelContainer.scrollWidth > this.labelContainer.clientWidth) {\n        this.itemButton.style.display = 'block';\n      }\n      else {\n        this.itemButton.style.display = 'none';\n      }\n    }\n  }\n  open() {\n    this.modal.present();\n  }\n  dismiss() {\n    this.modal.dismiss();\n  }\n  render() {\n    return (h(Fragment, null, h(\"div\", { class: \"wrapper\" }, h(\"div\", { class: \"literal-container\" }, h(\"div\", { ref: element => (this.labelContainer = element) }, this.label, \" \", this.language && h(\"span\", { class: \"color-light\" }, \"@\", this.language))), h(\"ion-button\", { class: \"open-modal-btn\", size: \"small\", fill: \"clear\", onClick: () => this.open(), ref: el => (this.itemButton = el) }, h(\"ion-icon\", { icon: eye }))), h(\"ion-modal\", { ref: element => (this.modal = element), onWillDismiss: () => this.dismiss(), isOpen: false }, h(\"ion-header\", null, h(\"ion-toolbar\", null, h(\"ion-buttons\", { slot: \"end\" }, h(\"ion-button\", { onClick: () => this.dismiss() }, \"Close\")), h(\"ion-title\", null, this.modalTitle))), h(\"ion-content\", { class: \"ion-padding\" }, this.label))));\n  }\n  static get is() { return \"geov-display-string-literal\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-display-string-literal.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-display-string-literal.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"modalTitle\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Title of the modal, that opens when user clicks on show button\"\n        },\n        \"attribute\": \"modal-title\",\n        \"reflect\": false\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The label (string) to display\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"\",\n              \"text\": \".\"\n            }],\n          \"text\": \"The language to display on the second line. Will be prefixed with\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false\n      }\n    };\n  }\n}\n//# sourceMappingURL=geov-display-string-literal.js.map\n",":host {\n  display: inline;\n  vertical-align: middle;\n}\n\nion-icon {\n  --ion-margin: 0.3em;\n  margin-right: var(--ion-margin);\n}\n","import { Host, h } from \"@stencil/core\";\nimport { balloonOutline, boatOutline, briefcaseOutline, calendarClearOutline, calendarOutline, chatbubbleEllipsesOutline, documentTextOutline, earthOutline, ellipseOutline, heartHalfOutline, locationOutline, peopleOutline, personOutline, skullOutline, starOutline, transgenderOutline, } from \"ionicons/icons\";\nconst iconMap = {\n  'https://ontome.net/ontology/c21': personOutline,\n  'https://ontome.net/ontology/c363': locationOutline,\n  'https://ontome.net/ontology/c68': peopleOutline,\n  'https://ontome.net/ontology/c523': boatOutline,\n  'https://ontome.net/ontology/c50': calendarClearOutline,\n  'http://www.w3.org/2006/time#DateTimeDescription': calendarOutline,\n  'https://ontome.net/ontology/c785': documentTextOutline,\n  'https://ontome.net/ontology/c63': skullOutline,\n  'https://ontome.net/ontology/c61': balloonOutline,\n  'https://ontome.net/ontology/c633': heartHalfOutline,\n  'https://ontome.net/ontology/c442': peopleOutline,\n  'https://ontome.net/ontology/c629': transgenderOutline,\n  'https://ontome.net/ontology/c697': briefcaseOutline,\n  'https://ontome.net/ontology/c698': briefcaseOutline,\n  'https://ontome.net/ontology/c213': briefcaseOutline,\n  'https://ontome.net/ontology/c444': briefcaseOutline,\n  'https://ontome.net/ontology/c636': briefcaseOutline,\n  'https://ontome.net/ontology/c637': briefcaseOutline,\n  'https://ontome.net/ontology/c5': starOutline,\n  'https://ontome.net/ontology/c535': starOutline,\n  'https://ontome.net/ontology/c933': documentTextOutline,\n  'https://ontome.net/ontology/c84': earthOutline,\n  'https://ontome.net/ontology/c868': chatbubbleEllipsesOutline, // Person Apppellation in a Language\n};\nconst defaultIcon = ellipseOutline;\n/**\n * This component fetches and displays the class icon of a given Geovistory entity id.\n */\nexport class GeovEntityClassIcon {\n  constructor() {\n    this.classURI = undefined;\n  }\n  render() {\n    var _a;\n    const icon = (_a = iconMap[this.classURI]) !== null && _a !== void 0 ? _a : defaultIcon;\n    return h(Host, null, icon && h(\"ion-icon\", { icon: icon }));\n  }\n  static get is() { return \"geov-entity-class-icon\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-icon.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-icon.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"classURI\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"class-u-r-i\",\n        \"reflect\": false\n      }\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-class-icon.js.map\n",":host {\n  display: block;\n}\n","import { Host, h } from \"@stencil/core\";\n/**\n * This component opens a modal displaying \"Entity Props By Predicate\".\n * The inputs are the ones of `geov-entity-props-by-predicate` plus an input for the modal title.\n */\nexport class GeovEntityPredicateModal {\n  constructor() {\n    this.modalTitle = undefined;\n    this.fetchBeforeRender = true;\n    this.entityUri = undefined;\n    this.sparqlEndpoint = undefined;\n    this.totalCount = undefined;\n    this.pageSize = 3;\n    this.language = undefined;\n    this.predicateUri = undefined;\n    this.predicateLabel = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.modalIsOpen = false;\n  }\n  render() {\n    return (h(Host, null, h(\"span\", { onClick: () => this.open() }, h(\"slot\", null)), h(\"ion-modal\", { ref: e => (this.modal = e) }, h(\"ion-header\", null, h(\"ion-toolbar\", null, h(\"ion-buttons\", { slot: \"start\" }, h(\"ion-button\", { onClick: () => this.close() }, \"Close\")), h(\"ion-title\", null, this.modalTitle))), h(\"ion-content\", { ref: e => (this.content = e), class: \"ion-padding\" }, this.modalIsOpen && (h(\"geov-entity-props-by-predicate\", { sparqlEndpoint: this.sparqlEndpoint, entityUri: this.entityUri, totalCount: this.totalCount, language: this.language, predicateUri: this.predicateUri, predicateLabel: this.predicateLabel, fetchBeforeRender: this.fetchBeforeRender }))))));\n  }\n  open() {\n    this.modal.present();\n    this.modalIsOpen = true;\n  }\n  close() {\n    this.modal.dismiss();\n    this.modalIsOpen = false;\n  }\n  static get is() { return \"geov-entity-predicate-modal\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-predicate-modal.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-predicate-modal.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"modalTitle\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Modal title\"\n        },\n        \"attribute\": \"modal-title\",\n        \"reflect\": false\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"if true, componentWillLoad() returns a promise for the loading of all data [default: true]\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityUri\\nURI entity, e.g. 'http://geovistory.org/resource/i1234'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"totalCount\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"totalCount\\nTotal number of entity from this property\"\n        },\n        \"attribute\": \"total-count\",\n        \"reflect\": false\n      },\n      \"pageSize\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"pageSize\\nPage size if too many resultat for a property, default 3\"\n        },\n        \"attribute\": \"page-size\",\n        \"reflect\": false,\n        \"defaultValue\": \"3\"\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false\n      },\n      \"predicateUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateUri\\nURI of the predicate\"\n        },\n        \"attribute\": \"predicate-uri\",\n        \"reflect\": false\n      },\n      \"predicateLabel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateLabel\\nLabel of the predicate\"\n        },\n        \"attribute\": \"predicate-label\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"modalIsOpen\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-predicate-modal.js.map\n","html.ios {\n  --ion-default-font: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Roboto\", sans-serif;\n}\n\nhtml.md {\n  --ion-default-font: \"Roboto\", \"Helvetica Neue\", sans-serif;\n}\n\nhtml {\n  --ion-font-family: var(--ion-default-font);\n}\n\nbody {\n  background: var(--ion-background-color);\n}\n\nbody.backdrop-no-scroll {\n  overflow: hidden;\n}\n\n/**\n * Card style modal needs additional padding on the\n * top of the header. We accomplish this by targeting\n * the first toolbar in the header.\n * Footer also needs this. We do not adjust the bottom\n * padding though because of the safe area.\n */\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal ion-footer ion-toolbar:first-of-type {\n  padding-top: 6px;\n}\n\n/**\n* Card style modal needs additional padding on the\n* bottom of the header. We accomplish this by targeting\n* the last toolbar in the header.\n*/\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:last-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:last-of-type {\n  padding-bottom: 6px;\n}\n\n/**\n* Add padding on the left and right\n* of toolbars while accounting for\n* safe area values when in landscape.\n*/\nhtml.ios ion-modal ion-toolbar {\n  padding-right: calc(var(--ion-safe-area-right) + 8px);\n  padding-left: calc(var(--ion-safe-area-left) + 8px);\n}\n\n/**\n * Card style modal on iPadOS\n * should only have backdrop on first instance.\n */\n@media screen and (min-width: 768px) {\n  html.ios ion-modal.modal-card:first-of-type {\n    --backdrop-opacity: 0.18;\n  }\n}\n/**\n * Subsequent modals should not have a backdrop/box shadow\n * as it will cause the screen to appear to get progressively\n * darker. With Ionic 6, declarative modals made it\n * possible to have multiple non-presented modals in the DOM,\n * so we could no longer rely on ion-modal:first-of-type.\n * Here we disable the opacity/box-shadow for every modal\n * that comes after the first presented modal.\n *\n * Note: ion-modal:not(.overlay-hidden):first-of-type\n * does not match the first modal to not have\n * the .overlay-hidden class, it will match the\n * first modal in general only if it does not\n * have the .overlay-hidden class.\n * The :nth-child() pseudo-class has support\n * for selectors which would help us here. At the\n * time of writing it does not have great cross browser\n * support.\n *\n * Note 2: This should only apply to non-card and\n * non-sheet modals. Card and sheet modals have their\n * own criteria for displaying backdrops/box shadows.\n *\n * Do not use :not(.overlay-hidden) in place of\n * .show-modal because that triggers a memory\n * leak in Blink: https://bugs.chromium.org/p/chromium/issues/detail?id=1418768\n */\nion-modal.modal-default.show-modal ~ ion-modal.modal-default {\n  --backdrop-opacity: 0;\n  --box-shadow: none;\n}\n\n/**\n * This works around a bug in WebKit where the\n * content will overflow outside of the bottom border\n * radius when re-painting. As long as a single\n * border radius value is set on .ion-page, this\n * issue does not happen. We set the top left radius\n * here because the top left corner will always have a\n * radius no matter the platform.\n * This behavior only applies to card modals.\n */\nhtml.ios ion-modal.modal-card .ion-page {\n  border-top-left-radius: var(--border-radius);\n}\n\n.ion-color-primary {\n  --ion-color-base: var(--ion-color-primary, #3880ff) !important;\n  --ion-color-base-rgb: var(--ion-color-primary-rgb, 56, 128, 255) !important;\n  --ion-color-contrast: var(--ion-color-primary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-primary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-primary-shade, #3171e0) !important;\n  --ion-color-tint: var(--ion-color-primary-tint, #4c8dff) !important;\n}\n\n.ion-color-secondary {\n  --ion-color-base: var(--ion-color-secondary, #3dc2ff) !important;\n  --ion-color-base-rgb: var(--ion-color-secondary-rgb, 61, 194, 255) !important;\n  --ion-color-contrast: var(--ion-color-secondary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-secondary-shade, #36abe0) !important;\n  --ion-color-tint: var(--ion-color-secondary-tint, #50c8ff) !important;\n}\n\n.ion-color-tertiary {\n  --ion-color-base: var(--ion-color-tertiary, #5260ff) !important;\n  --ion-color-base-rgb: var(--ion-color-tertiary-rgb, 82, 96, 255) !important;\n  --ion-color-contrast: var(--ion-color-tertiary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-tertiary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-tertiary-shade, #4854e0) !important;\n  --ion-color-tint: var(--ion-color-tertiary-tint, #6370ff) !important;\n}\n\n.ion-color-success {\n  --ion-color-base: var(--ion-color-success, #2dd36f) !important;\n  --ion-color-base-rgb: var(--ion-color-success-rgb, 45, 211, 111) !important;\n  --ion-color-contrast: var(--ion-color-success-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-success-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-success-shade, #28ba62) !important;\n  --ion-color-tint: var(--ion-color-success-tint, #42d77d) !important;\n}\n\n.ion-color-warning {\n  --ion-color-base: var(--ion-color-warning, #ffc409) !important;\n  --ion-color-base-rgb: var(--ion-color-warning-rgb, 255, 196, 9) !important;\n  --ion-color-contrast: var(--ion-color-warning-contrast, #000) !important;\n  --ion-color-contrast-rgb: var(--ion-color-warning-contrast-rgb, 0, 0, 0) !important;\n  --ion-color-shade: var(--ion-color-warning-shade, #e0ac08) !important;\n  --ion-color-tint: var(--ion-color-warning-tint, #ffca22) !important;\n}\n\n.ion-color-danger {\n  --ion-color-base: var(--ion-color-danger, #eb445a) !important;\n  --ion-color-base-rgb: var(--ion-color-danger-rgb, 235, 68, 90) !important;\n  --ion-color-contrast: var(--ion-color-danger-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-danger-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-danger-shade, #cf3c4f) !important;\n  --ion-color-tint: var(--ion-color-danger-tint, #ed576b) !important;\n}\n\n.ion-color-light {\n  --ion-color-base: var(--ion-color-light, #f4f5f8) !important;\n  --ion-color-base-rgb: var(--ion-color-light-rgb, 244, 245, 248) !important;\n  --ion-color-contrast: var(--ion-color-light-contrast, #000) !important;\n  --ion-color-contrast-rgb: var(--ion-color-light-contrast-rgb, 0, 0, 0) !important;\n  --ion-color-shade: var(--ion-color-light-shade, #d7d8da) !important;\n  --ion-color-tint: var(--ion-color-light-tint, #f5f6f9) !important;\n}\n\n.ion-color-medium {\n  --ion-color-base: var(--ion-color-medium, #92949c) !important;\n  --ion-color-base-rgb: var(--ion-color-medium-rgb, 146, 148, 156) !important;\n  --ion-color-contrast: var(--ion-color-medium-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-medium-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-medium-shade, #808289) !important;\n  --ion-color-tint: var(--ion-color-medium-tint, #9d9fa6) !important;\n}\n\n.ion-color-dark {\n  --ion-color-base: var(--ion-color-dark, #222428) !important;\n  --ion-color-base-rgb: var(--ion-color-dark-rgb, 34, 36, 40) !important;\n  --ion-color-contrast: var(--ion-color-dark-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-dark-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-dark-shade, #1e2023) !important;\n  --ion-color-tint: var(--ion-color-dark-tint, #383a3e) !important;\n}\n\n.ion-page {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  contain: layout size style;\n  overflow: hidden;\n  z-index: 0;\n}\n\n/**\n * When making custom dialogs, using\n * ion-content is not required. As a result,\n * some developers may wish to have dialogs\n * that are automatically sized by the browser.\n * These changes allow certain dimension values\n * such as fit-content to work correctly.\n */\nion-modal > .ion-page {\n  position: relative;\n  contain: layout style;\n  height: 100%;\n}\n\n.split-pane-visible > .ion-page.split-pane-main {\n  position: relative;\n}\n\nion-route,\nion-route-redirect,\nion-router,\nion-select-option,\nion-nav-controller,\nion-menu-controller,\nion-action-sheet-controller,\nion-alert-controller,\nion-loading-controller,\nion-modal-controller,\nion-picker-controller,\nion-popover-controller,\nion-toast-controller,\n.ion-page-hidden {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n.ion-page-invisible {\n  opacity: 0;\n}\n\n.can-go-back > ion-header ion-back-button {\n  display: block;\n}\n\nhtml.plt-ios.plt-hybrid, html.plt-ios.plt-pwa {\n  --ion-statusbar-padding: 20px;\n}\n\n@supports (padding-top: 20px) {\n  html {\n    --ion-safe-area-top: var(--ion-statusbar-padding);\n  }\n}\n@supports (padding-top: constant(safe-area-inset-top)) {\n  html {\n    --ion-safe-area-top: constant(safe-area-inset-top);\n    --ion-safe-area-bottom: constant(safe-area-inset-bottom);\n    --ion-safe-area-left: constant(safe-area-inset-left);\n    --ion-safe-area-right: constant(safe-area-inset-right);\n  }\n}\n@supports (padding-top: env(safe-area-inset-top)) {\n  html {\n    --ion-safe-area-top: env(safe-area-inset-top);\n    --ion-safe-area-bottom: env(safe-area-inset-bottom);\n    --ion-safe-area-left: env(safe-area-inset-left);\n    --ion-safe-area-right: env(safe-area-inset-right);\n  }\n}\nion-card.ion-color .ion-inherit-color,\nion-card-header.ion-color .ion-inherit-color {\n  color: inherit;\n}\n\n.menu-content {\n  transform: translate3d(0,  0,  0);\n}\n\n.menu-content-open {\n  cursor: pointer;\n  touch-action: manipulation;\n  pointer-events: none;\n}\n\n.ios .menu-content-reveal {\n  box-shadow: -8px 0 42px rgba(0, 0, 0, 0.08);\n}\n\n[dir=rtl].ios .menu-content-reveal {\n  box-shadow: 8px 0 42px rgba(0, 0, 0, 0.08);\n}\n\n.md .menu-content-reveal {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}\n\n.md .menu-content-push {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}\n\nion-accordion-group.accordion-group-expand-inset > ion-accordion:first-of-type {\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n\nion-accordion-group.accordion-group-expand-inset > ion-accordion:last-of-type {\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\nion-accordion-group > ion-accordion:last-of-type ion-item[slot=header] {\n  --border-width: 0px;\n}\n\nion-accordion.accordion-animated > [slot=header] .ion-accordion-toggle-icon {\n  transition: 300ms transform cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n@media (prefers-reduced-motion: reduce) {\n  ion-accordion .ion-accordion-toggle-icon {\n    /* stylelint-disable declaration-no-important */\n    transition: none !important;\n  }\n}\n/**\n * The > [slot=\"header\"] selector ensures that we do\n * not modify toggle icons for any nested accordions. The state\n * of one accordion should not affect any accordions inside\n * of a nested accordion group.\n */\nion-accordion.accordion-expanding > [slot=header] .ion-accordion-toggle-icon,\nion-accordion.accordion-expanded > [slot=header] .ion-accordion-toggle-icon {\n  transform: rotate(180deg);\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-previous ion-item[slot=header] {\n  --border-width: 0px;\n  --inner-border-width: 0px;\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanding:first-of-type,\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanded:first-of-type {\n  margin-top: 0;\n}\n\nion-input input::-webkit-date-and-time-value {\n  text-align: start;\n}\n\n/**\n * The .ion-datetime-button-overlay class contains\n * styles that allow any modal/popover to be\n * sized according to the dimensions of the datetime\n * when used with ion-datetime-button.\n */\n.ion-datetime-button-overlay {\n  --width: fit-content;\n  --height: fit-content;\n}\n\n/**\n * The grid variant can scale down when inline.\n * When used in a `fit-content` overlay, this causes\n * the overlay to shrink when the month/year picker is open.\n * Explicitly setting the dimensions lets us have a consistently\n * sized grid interface.\n */\n.ion-datetime-button-overlay ion-datetime.datetime-grid {\n  width: 320px;\n  min-height: 320px;\n}\n\n/*# sourceMappingURL=core.css.map */\n\n\n:host {\n  display: block;\n}\n\nion-list {\n  --ion-item-background: none;\n}\n\nion-item.heading {\n  --padding-start: 0;\n  --inner-padding-end: 0;\n  --ion-item-background: none;\n}\n\ngeov-paginator {\n  margin-left: auto;\n}\n\na.propertyLabel,\na.propertyLabel:visited {\n  text-decoration: var(--gv-property-link-decoration, none);\n}\n\na.propertyLabel:hover {\n  color: var(--ion-color-primary-shade, #5e3eaa);\n  text-decoration: underline;\n}\n\na.propertyLabel {\n  color: var(--gv-property-link-color, black);\n  font-size: 1.5rem;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { openOutline } from \"ionicons/icons\";\nimport { regexReplace } from \"../../lib/regexReplace\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrProps = (predicateId, subjectUri, pageSize, offset, language) => `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?entity ?entityLabel ?entityType ?entityTypeLabel ?dt\nWHERE {\n  <${subjectUri}> <${predicateId}> ?entity .\n  OPTIONAL {?entity rdfs:label ?entityLabel . FILTER(LANG(?entityLabel) IN (\"${language}\", \"en\")) .}\n  OPTIONAL {?entity rdf:type ?entityType . OPTIONAL {?entityType rdfs:label ?entityTypeLabel . FILTER(LANG(?entityTypeLabel) IN (\"${language}\", \"en\")) .}}\n  BIND (datatype(?entity) AS ?dt) .\n}\nLIMIT ${pageSize} OFFSET ${offset}\n`;\n/**\n * This component fetches and displays a paginated list of properties\n * with a given subject and predicate.\n */\nexport class GeovEntityPropsByPredicate {\n  /*\n   * assigns an id to the component\n   */\n  constructor() {\n    this._ssrId = undefined;\n    this.data = undefined;\n    this.fetchBeforeRender = true;\n    this.entityUri = undefined;\n    this.sparqlEndpoint = undefined;\n    this.totalCount = undefined;\n    this.pageSize = 3;\n    this.language = undefined;\n    this.predicateUri = undefined;\n    this.predicateLabel = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.color = '';\n    this.pageIndex = 0;\n    this.entities = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    if (this.fetchBeforeRender) {\n      /**\n       * try to get data from ssr\n       */\n      this.data = getSSRData(this._ssrId);\n    }\n    // if no data found (or fetchBeforeRender is false), fetchData\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      await this.pageReload()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  changePage(pageEvent) {\n    this.pageIndex = pageEvent.detail.pageIndex;\n    this.data = { loading: true };\n    this.pageReload()\n      .then(d => {\n      this.data = d;\n      setSSRData(this._ssrId, d);\n      return d;\n    })\n      .catch(d => {\n      this.data = d;\n      return d;\n    });\n  }\n  async pageReload() {\n    const qr = qrProps(this.predicateUri, this.entityUri, this.pageSize, this.pageIndex * this.pageSize, this.language);\n    return sparqlJson(this.sparqlEndpoint, qr)\n      .then(res => {\n      var _a;\n      return {\n        entities: (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings,\n        loading: false,\n      };\n    })\n      .catch(_ => {\n      return {\n        error: true,\n        loading: false,\n      };\n    });\n  }\n  render() {\n    var _a, _b;\n    const showPaginator = this.totalCount > this.pageSize;\n    //const contentMinHeight = showPaginator ? this.pageSize * 62 : 0;\n    return (h(Host, null, h(\"ion-grid\", { fixed: true }, h(\"ion-item\", { class: \"heading\", color: this.color, lines: \"full\" }, h(\"a\", { class: \"propertyLabel\", href: this.predicateUri }, this.predicateLabel), showPaginator && this.renderPaginator()), h(\"ion-list\", { lines: \"full\" }, (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.entities) === null || _b === void 0 ? void 0 : _b.map(entity => this.renderItem(entity))))));\n  }\n  renderItem(item) {\n    const isUri = item.entity.type === 'uri';\n    if (isUri) {\n      return this.renderUri(item);\n    }\n    return (h(\"ion-item\", null, h(\"ion-label\", null, this.renderLiteral(item))));\n  }\n  renderUri(item) {\n    var _a;\n    const klass = (_a = item.entityType) === null || _a === void 0 ? void 0 : _a.value;\n    switch (klass) {\n      case undefined:\n        return this.renderExternalUri(item);\n      // here you can add more class-specific renderings\n      default:\n        return this.renderGenericEntity(item);\n    }\n  }\n  renderExternalUri(item) {\n    var _a, _b, _c;\n    const regex = this.uriRegex;\n    const replace = this.uriReplace;\n    const url = regexReplace(item.entity.value, regex, replace);\n    const isInternal = url.includes('geovistory.org');\n    const target = isInternal ? '' : '_blank';\n    const detailIcon = isInternal ? undefined : openOutline;\n    return (h(\"ion-item\", { color: this.color, href: url, target: target, detailIcon: detailIcon }, ((_a = item.entityLabel) === null || _a === void 0 ? void 0 : _a.value) ? h(\"p\", null, (_b = item.entityLabel) === null || _b === void 0 ? void 0 : _b.value) : h(\"p\", null, (_c = item.entity) === null || _c === void 0 ? void 0 : _c.value)));\n  }\n  renderGenericEntity(item) {\n    return (h(\"ion-item\", null, h(\"geov-list-item-nested-properties\", { sparqlEndpoint: this.sparqlEndpoint, entityUri: item.entity.value, language: \"en\", fetchBeforeRender: this.fetchBeforeRender, parent: { subjectUri: this.entityUri, predicateUri: this.predicateUri }, uriRegex: this.uriRegex, uriReplace: this.uriReplace })));\n  }\n  renderPaginator() {\n    return (h(\"geov-paginator\", { color: this.color, length: this.totalCount, pageSize: this.pageSize, pageIndex: this.pageIndex, onPageChanged: ev => this.changePage(ev), showFirstLastButtons: false }));\n  }\n  renderLiteral(item) {\n    var _a, _b, _c, _d;\n    switch ((_a = item.dt) === null || _a === void 0 ? void 0 : _a.value) {\n      case 'http://www.opengis.net/ont/geosparql#wktLiteral':\n        return h(\"geov-display-geosparql-wktliteral\", { color: this.color, value: (_b = item.entity) === null || _b === void 0 ? void 0 : _b.value });\n      case 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString':\n      case 'http://www.w3.org/2001/XMLSchema#string':\n      default:\n        return (h(\"geov-display-string-literal\", { color: this.color, modalTitle: this.predicateLabel, label: (_c = item.entity) === null || _c === void 0 ? void 0 : _c.value, language: (_d = item.entity) === null || _d === void 0 ? void 0 : _d['xml:lang'] }));\n    }\n  }\n  static get is() { return \"geov-entity-props-by-predicate\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-props-by-predicate.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-props-by-predicate.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"declares an _ssrId property that is reflected as attribute\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"if true, componentWillLoad() returns a promise for the loading of all data [default: true]\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityUri\\nURI entity, e.g. 'http://geovistory.org/resource/i1234'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"totalCount\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"totalCount\\nTotal number of entity from this property\"\n        },\n        \"attribute\": \"total-count\",\n        \"reflect\": false\n      },\n      \"pageSize\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"pageSize\\nPage size if too many resultat for a property, default 3\"\n        },\n        \"attribute\": \"page-size\",\n        \"reflect\": false,\n        \"defaultValue\": \"3\"\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false\n      },\n      \"predicateUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateUri\\nURI of the predicate\"\n        },\n        \"attribute\": \"predicate-uri\",\n        \"reflect\": false\n      },\n      \"predicateLabel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateLabel\\nLabel of the predicate\"\n        },\n        \"attribute\": \"predicate-label\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {},\n      \"pageIndex\": {},\n      \"entities\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"pageChanged\",\n        \"name\": \"pageChanged\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"pageChanged\\nListener of change page\"\n        },\n        \"complexType\": {\n          \"original\": \"PageEvent\",\n          \"resolved\": \"PageEvent\",\n          \"references\": {\n            \"PageEvent\": {\n              \"location\": \"import\",\n              \"path\": \"../geov-paginator/geov-paginator\",\n              \"id\": \"src/components/geov-paginator/geov-paginator.tsx::PageEvent\"\n            }\n          }\n        }\n      }];\n  }\n}\n//# sourceMappingURL=geov-entity-props-by-predicate.js.map\n",":host {\n  display: block;\n  width: 100%;\n}\n\ngeov-display-string-literal {\n  --border-top: none;\n  --padding-start: 0;\n  --min-height: 0;\n  --inner-padding-end: 0;\n}\n\ngeov-time-span {\n  display: inline;\n  padding-left: 1rem;\n  color: var(--ion-color-step-600);\n}\n\nion-item {\n  --padding-start: 0;\n}\n\n.containerForQuery {\n  container-type: inline-size;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.header {\n  padding: 1rem 16px 0.5rem 0;\n  flex-basis: 200px;\n  flex-grow: 1;\n  flex-shrink: 0;\n  border-bottom: dashed 1px var(--border-color);\n  border-right: dashed 1px var(--ion-color-tertiary);\n}\n\n.content ion-col {\n  flex-basis: 300px;\n}\n\n.content {\n  padding: 0.5rem 0 0.5rem 16px;\n  flex-basis: 300px;\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n.header .classLabelContainer {\n  color: var(--gv-class-link-color, #000);\n}\n\n.header a.classLabel {\n  color: var(--gv-class-link-color, #000);\n  text-decoration: var(--gv-class-link-decoration);\n}\n\n.header a.classLabel:hover {\n  text-decoration: underline;\n}\n\n.nestedProp .propLabelWrapper a.propLabel {\n  color: var(--gv-property-link-color, #000);\n  text-decoration: var(--gv-property-link-decoration);\n}\n\n.nestedProp .propLabelWrapper a.propLabel:hover {\n  text-decoration: underline;\n}\n\nion-col {\n  padding: 0;\n  margin: 0;\n}\n\na.entityLink {\n  color: var(--gv-entity-link-color, #000);\n  text-decoration: var(--gv-entity-link-decoration);\n}\n\na.entityLink:hover {\n  text-decoration: underline;\n}\n\n.timespanLabel geov-time-span {\n  padding: 0;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n@container (width > 532px) {\n  .container {\n    flex-wrap: nowrap;\n  }\n\n  .header {\n    flex-grow: 0;\n    border-right: dashed 1px var(--border-color);\n    border-bottom: none;\n  }\n\n  .content ion-col {\n    flex-basis: 0px;\n  }\n}\n","import { Host, h } from \"@stencil/core\";\nimport { getTimeSpanUri } from \"../../lib/getTimeSpanUri\";\nimport { regexReplace } from \"../../lib/regexReplace\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrNestedProps = (entityUri, language) => {\n  return ` PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    PREFIX owl: <http://www.w3.org/2002/07/owl#>\n    PREFIX xml: <http://www.w3.org/XML/1998/namespace>\n    PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n    PREFIX geo: <http://www.opengis.net/ont/geosparql#>\n    PREFIX time: <http://www.w3.org/2006/time#>\n    PREFIX ontome: <https://ontome.net/ontology/>\n    PREFIX geov: <http://geovistory.org/resource/>\n\n    SELECT\n      ?predicate # predicate uri\n      ?count # count of props per predicate\n      ?object # one sample object per predicate\n      (GROUP_CONCAT(DISTINCT ?pLabel; separator=\", \") as ?predicateLabel) # predicate label\n      (GROUP_CONCAT(DISTINCT ?oLabel; separator=\", \") as ?objectLabel) # object label\n    WHERE {\n\n      # Innermost subquery:\n      {\n        # Select all properties of entity, group by predicate, count\n        # and select one sample object per predicate\n        SELECT ?predicate (count(?predicate) as ?count) (sample(?o) as ?object) WHERE {\n          <${entityUri}> ?predicate ?o.\n        }\n        GROUP BY ?predicate\n      }.\n\n      # Left join predicate labels\n      OPTIONAL {\n        ?predicate rdfs:label ?pLabel . FILTER(LANG(?pLabel) IN (\"${language}\", \"en\")) .\n      }.\n\n      # Left join add object labels\n      OPTIONAL {\n        ?object rdfs:label ?oLabel\n      }.\n  }\n\n  GROUP BY ?predicate ?count ?object\n  # limit to max 50 predicate groups\n  LIMIT 50`;\n};\n/**\n * This component displays information about an entity (URI) in a compact way.\n */\nexport class GeovListItemNestedProperties {\n  /*\n   * assigns an id to the component\n   */\n  constructor() {\n    this._ssrId = undefined;\n    this.data = undefined;\n    this.fetchBeforeRender = true;\n    this.sparqlEndpoint = undefined;\n    this.entityUri = undefined;\n    this.language = 'en';\n    this.predicateInclude = undefined;\n    this.predicateExclude = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.color = '';\n    this.parent = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    if (this.fetchBeforeRender) {\n      /**\n       * try to get data from ssr\n       */\n      this.data = getSSRData(this._ssrId);\n    }\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = {\n        loading: true,\n      };\n      // fetch data via http\n      await this.fetchData() // <- await this promise!\n        .then(d => {\n        var _a;\n        // filter language\n        d.nestedProps = (_a = d.nestedProps) !== null && _a !== void 0 ? _a : []; // this.filterByLanguage(d.nestedProps ?? [], this.language);\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  render() {\n    var _a, _b;\n    const { rdfTypeProp, rdfsLabelProp, restProps } = this.splitProps(this.data.nestedProps);\n    return (h(Host, null, h(\"div\", { class: \"containerForQuery\" }, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"header\" }, h(\"div\", { class: 'classLabelContainer' }, h(\"geov-entity-class-icon\", { classURI: rdfTypeProp.object.value }), h(\"a\", { href: rdfTypeProp.object.value, target: \"_blank\", class: \"classLabel\" }, (_a = rdfTypeProp === null || rdfTypeProp === void 0 ? void 0 : rdfTypeProp.objectLabel) === null || _a === void 0 ? void 0 : _a.value), ' ', h(\"div\", { class: 'timespanLabel' }, h(\"geov-time-span\", { sparqlEndpoint: this.sparqlEndpoint, entityUri: getTimeSpanUri(this.entityUri) }))), h(\"div\", { class: 'entityLabelContainer' }, h(\"a\", { href: this.prepareUrl(this.entityUri), target: \"_blank\", class: \"entityLink\" }, (_b = rdfsLabelProp === null || rdfsLabelProp === void 0 ? void 0 : rdfsLabelProp.object) === null || _b === void 0 ? void 0 : _b.value))), h(\"div\", { class: \"content\" }, h(\"ion-row\", null, restProps.map(b => {\n      var _a;\n      return (h(\"ion-col\", null, h(\"ion-item\", { lines: \"none\", class: \"nestedProp\" }, h(\"ion-label\", null, h(\"p\", { class: \"propLabelWrapper\" }, this.renderPredicateLabel(b.predicateLabel, b.predicate)), this.countBiggerThanOne(b.count) ? (h(\"p\", null, this.renderModal(b, (_a = rdfTypeProp === null || rdfTypeProp === void 0 ? void 0 : rdfTypeProp.objectLabel) === null || _a === void 0 ? void 0 : _a.value))) : (h(\"h3\", null, this.renderObject(b.object, b.objectLabel, this.getPredicateLabel(b.predicateLabel, b.predicate))))))));\n    }))))), h(\"slot\", null)));\n  }\n  /**\n   * Splits the property array into three parts:\n   * - one rdfs:label prop (entity label)\n   * - one rdf:type prop (class label)\n   * - all other props\n   * @param props\n   * @returns\n   */\n  splitProps(props) {\n    let rdfsLabelProp;\n    let rdfTypeProp;\n    const restProps = [];\n    for (const p of props) {\n      if (p.predicate.value === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type')\n        rdfTypeProp = p;\n      else if (p.predicate.value === 'http://www.w3.org/2000/01/rdf-schema#label')\n        rdfsLabelProp = p;\n      // push to rest, unless it is the inverse prop of parent\n      else if (!this.isInverseOfParent(p))\n        restProps.push(p);\n    }\n    // sort by prop label A-Z\n    restProps.sort((a, b) => {\n      var _a, _b, _c, _d;\n      const labelA = (_b = (_a = a === null || a === void 0 ? void 0 : a.predicateLabel) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n      const labelB = (_d = (_c = b === null || b === void 0 ? void 0 : b.predicateLabel) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '';\n      return labelA.localeCompare(labelB);\n    });\n    return {\n      rdfTypeProp,\n      rdfsLabelProp,\n      restProps,\n    };\n  }\n  /**\n   * If the property is the inverse of the parent property, return true, else false.\n   *\n   * @param p\n   */\n  isInverseOfParent(p) {\n    var _a, _b, _c;\n    if (!((_a = this.parent) === null || _a === void 0 ? void 0 : _a.predicateUri) || !((_b = this.parent) === null || _b === void 0 ? void 0 : _b.subjectUri))\n      return false;\n    // if we have more then one props of this predicate, we in in fact have a\n    // group of properties. This group is not identical to the parent property,\n    // which is only one property by definition\n    if (parseInt((_c = p.count) === null || _c === void 0 ? void 0 : _c.value) > 1)\n      return false;\n    const thisPredicate = p.predicate.value;\n    const parentPredicate = this.parent.predicateUri;\n    const isInversePredicate = () => {\n      const overlapOne = thisPredicate.replace(parentPredicate, '');\n      const overlapTwo = parentPredicate.replace(thisPredicate, '');\n      return overlapOne === 'i' || overlapTwo == 'i';\n    };\n    // it is inverse, in case object = parentSubject and predicate isInverseOf parentPredicate\n    if (p.object.value === this.parent.subjectUri && isInversePredicate())\n      return true;\n    return false;\n  }\n  async fetchData() {\n    let d = {\n      loading: true,\n    };\n    const query = qrNestedProps(this.entityUri, this.language);\n    await sparqlJson(this.sparqlEndpoint, query)\n      .then(res => {\n      var _a;\n      d = {\n        loading: false,\n        nestedProps: (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings,\n      };\n    })\n      .catch(_ => {\n      d = {\n        loading: false,\n        error: true,\n      };\n    });\n    return d;\n  }\n  /**\n   * render the predicate label\n   * @param predicateLabel\n   * @param predicate\n   * @returns jsx element\n   */\n  renderPredicateLabel(predicateLabel, predicate) {\n    return (h(\"a\", { class: \"propLabel\", href: predicate.value, target: \"_blank\" }, this.getPredicateLabel(predicateLabel, predicate)));\n  }\n  /**\n   * extract the predicate label string from predicate label and predicate bindings.\n   * It returns the predicate label, if available, else the predicate uri.\n   * in case the predicate uri is rendered, abbreviate the most common uris.\n   * @param predicateLabel\n   * @param predicate\n   * @returns string\n   */\n  getPredicateLabel(predicateLabel, predicate) {\n    var _a;\n    return (_a = predicateLabel === null || predicateLabel === void 0 ? void 0 : predicateLabel.value) !== null && _a !== void 0 ? _a : predicate.value.replace('http://www.w3.org/2000/01/rdf-schema#', 'rdfs:').replace('http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'rdf:');\n  }\n  /**\n   * render the count information (only if count > 1)\n   * @param count\n   * @returns jsx element\n   */\n  renderModal(nestedProps, title) {\n    var _a, _b;\n    return (h(\"geov-entity-predicate-modal\", { modalTitle: title, sparqlEndpoint: this.sparqlEndpoint, entityUri: this.entityUri, totalCount: parseInt((_a = nestedProps.count) === null || _a === void 0 ? void 0 : _a.value), language: this.language, predicateUri: nestedProps.predicate.value, predicateLabel: nestedProps.predicateLabel.value, fetchBeforeRender: false }, h(\"span\", { class: \"pointer\" }, \" \", (_b = nestedProps.count) === null || _b === void 0 ? void 0 :\n      _b.value, \" items...\")));\n  }\n  /**\n   * Check if count is bigger than 1.\n   * @param count\n   * @returns true if count > 1, else false.\n   */\n  countBiggerThanOne(count) {\n    const c = parseInt(count === null || count === void 0 ? void 0 : count.value);\n    return c > 1;\n  }\n  renderObject(object, objectLabel, modalTitle) {\n    var _a;\n    // if object is a URI\n    if ((object === null || object === void 0 ? void 0 : object.type) === 'uri') {\n      return (h(\"a\", { href: this.prepareUrl(object === null || object === void 0 ? void 0 : object.value), target: \"_blank\", class: \"entityLink\" }, (_a = objectLabel === null || objectLabel === void 0 ? void 0 : objectLabel.value) !== null && _a !== void 0 ? _a : object === null || object === void 0 ? void 0 : object.value));\n    }\n    // return object?.value;\n    // else it is a literal\n    switch (object === null || object === void 0 ? void 0 : object.datatype) {\n      case 'http://www.opengis.net/ont/geosparql#wktLiteral':\n        return h(\"geov-display-geosparql-wktliteral\", { color: this.color, value: object === null || object === void 0 ? void 0 : object.value });\n      case 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString':\n      case 'http://www.w3.org/2001/XMLSchema#string':\n      default:\n        return h(\"geov-display-string-literal\", { color: this.color, modalTitle: modalTitle, label: object === null || object === void 0 ? void 0 : object.value, language: object === null || object === void 0 ? void 0 : object['xml:lang'] });\n    }\n  }\n  /**\n   * Prepares a url by applying the uirRegex and uriReplace\n   *\n   * @param url\n   * @returns string\n   */\n  prepareUrl(url) {\n    return regexReplace(url, this.uriRegex, this.uriReplace);\n  }\n  static get is() { return \"geov-list-item-nested-properties\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-list-item-nested-properties.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-list-item-nested-properties.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"declares an _ssrId property that is reflected as attribute\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"if true, componentWillLoad() returns a promise for the loading of all data [default: true]\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nUri of subject, e.g. 'http://www.geovistory.org/ressource/iXXX'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false,\n        \"defaultValue\": \"'en'\"\n      },\n      \"predicateInclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateInclude\\nComma separated list of predicate URI's to include, e.g:\\nFetch only the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-include\",\n        \"reflect\": false\n      },\n      \"predicateExclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateExclude\\nComma separated list of predicate URI's to exclude, e.g:\\nDon't fetch the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-exclude\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Color assigned to ion-item\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      },\n      \"parent\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"{ subjectUri: string; predicateUri: string }\",\n          \"resolved\": \"{ subjectUri: string; predicateUri: string; }\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"parent subject and predicate\\nIf given, the reversed nested property is hidden, if the parent subject is the only\\nobject of the nested prop\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-list-item-nested-properties.js.map\n",":host {\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\nion-item {\n  --inner-padding-end: var(--inner-padding-end);\n}","import { h, Host } from \"@stencil/core\";\nimport { arrowBackOutline, arrowForwardOutline, chevronBackOutline, chevronForwardOutline } from \"ionicons/icons\";\n/**\n * This component is a UI to create paginated lists.\n */\nexport class GeovPaginator {\n  constructor() {\n    this.hidePageSize = undefined;\n    this.length = 0;\n    this.pageIndex = 0;\n    this.pageSize = 25;\n    this.showFirstLastButtons = true;\n    this.color = undefined;\n  }\n  render() {\n    // number of pages\n    const pageCount = Math.floor((this.length - 1) / this.pageSize) + 1;\n    const isFirstPage = this.pageIndex <= 0;\n    const isLastPage = this.pageIndex + 1 >= pageCount;\n    const firstShownItem = this.pageIndex * this.pageSize + 1;\n    const lastShownItem = this.pageIndex * this.pageSize + this.pageSize;\n    return (h(Host, null, h(\"ion-item\", { color: this.color, lines: \"none\" }, !this.hidePageSize && (h(\"ion-note\", null, firstShownItem, \" \\u2013\\u00A0\", lastShownItem <= this.length ? lastShownItem : this.length, \" of \", this.length)), h(\"ion-buttons\", null, this.showFirstLastButtons && (h(\"ion-button\", { disabled: isFirstPage, onClick: () => this.changePageTo(0) }, h(\"ion-icon\", { slot: \"icon-only\", icon: arrowBackOutline }))), h(\"ion-button\", { disabled: isFirstPage, onClick: () => this.changePageTo(this.pageIndex - 1) }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronBackOutline })), h(\"ion-button\", { disabled: isLastPage, onClick: () => this.changePageTo(this.pageIndex + 1) }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronForwardOutline })), this.showFirstLastButtons && (h(\"ion-button\", { disabled: isLastPage, onClick: () => this.changePageTo(pageCount - 1) }, h(\"ion-icon\", { slot: \"icon-only\", icon: arrowForwardOutline })))))));\n  }\n  changePageTo(newPageIndex) {\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = newPageIndex;\n    this.pageChanged.emit({\n      length: this.length,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      previousPageIndex,\n    });\n  }\n  static get is() { return \"geov-paginator\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-paginator.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-paginator.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"hidePageSize\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"hide-page-size\",\n        \"reflect\": false\n      },\n      \"length\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"length\",\n        \"reflect\": false,\n        \"defaultValue\": \"0\"\n      },\n      \"pageIndex\": {\n        \"type\": \"number\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"page-index\",\n        \"reflect\": false,\n        \"defaultValue\": \"0\"\n      },\n      \"pageSize\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"page-size\",\n        \"reflect\": false,\n        \"defaultValue\": \"25\"\n      },\n      \"showFirstLastButtons\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"show-first-last-buttons\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"pageChanged\",\n        \"name\": \"pageChanged\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"complexType\": {\n          \"original\": \"PageEvent\",\n          \"resolved\": \"PageEvent\",\n          \"references\": {\n            \"PageEvent\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-paginator/geov-paginator.tsx\",\n              \"id\": \"src/components/geov-paginator/geov-paginator.tsx::PageEvent\"\n            }\n          }\n        }\n      }];\n  }\n}\n//# sourceMappingURL=geov-paginator.js.map\n",":host {\n  display: block;\n}\n","import { Fragment, h } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qr = (entityUri) => `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    PREFIX owl: <http://www.w3.org/2002/07/owl#>\n    PREFIX xml: <http://www.w3.org/XML/1998/namespace>\n    PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n    PREFIX geo: <http://www.opengis.net/ont/geosparql#>\n    PREFIX time: <http://www.w3.org/2006/time#>\n    PREFIX ontome: <https://ontome.net/ontology/>\n    PREFIX geov: <http://geovistory.org/resource/>\n\n    SELECT\n      ?predicate # predicate uri\n      (SAMPLE(?y) as ?year)\n      (SAMPLE(?m) as ?month)\n      (SAMPLE(?d) as ?day)\n      (SAMPLE(?tUnit) as ?timeUnit)\n\n    WHERE {\n\n      # Innermost subquery:\n      {\n        # Select all properties of entity, group by predicate\n        # and select one sample object per predicate\n        SELECT ?predicate (sample(?o) as ?object) WHERE {\n          <${entityUri}> ?predicate ?o.\n        }\n        GROUP BY ?predicate\n      }.\n\n  \t  # Left year, month, day\n      OPTIONAL { ?object time:year ?y }.\n      OPTIONAL { ?object time:month ?m }.\n      OPTIONAL { ?object time:day ?d }.\n      OPTIONAL { ?object time:unitType ?tUnit }.\n  }\n\n  GROUP BY ?predicate ?object\n  # limit to max 50 predicate groups\n  LIMIT 50`;\n/**\n * This component queries and renders the dates of a time span as readable string\n *\n * - In case there are mutiple dates, the output is {earliest} – {latest}: `1739-11-25 – 1740-07-08`\n * - In case there is one date, the output is {date}: `1739-11-25`\n * - In case there is no date, the output is empty\n *\n * Remark: The predicates from Time Span to Date, like `crm:P81b begin of the end`, are not taken into account for\n * the retrieval of {earliest} and {latest}.\n *\n * @param rows\n */\nexport class GeovTimeSpan {\n  /*\n   * assigns an id to the component\n   */\n  constructor() {\n    this._ssrId = undefined;\n    this.data = undefined;\n    this.fetchBeforeRender = true;\n    this.sparqlEndpoint = undefined;\n    this.entityUri = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    if (this.fetchBeforeRender) {\n      /**\n       * try to get data from ssr\n       */\n      this.data = getSSRData(this._ssrId);\n    }\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = {\n        loading: true,\n      };\n      // fetch data via http\n      await this.fetchData() // <- await this promise!\n        .then(d => {\n        // filter language\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  async fetchData() {\n    let d = {\n      loading: true,\n    };\n    const query = qr(this.entityUri);\n    await sparqlJson(this.sparqlEndpoint, query)\n      .then(res => {\n      var _a;\n      d = {\n        loading: false,\n        rows: (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings,\n      };\n    })\n      .catch(_ => {\n      d = {\n        loading: false,\n        error: true,\n      };\n    });\n    return d;\n  }\n  /**\n   * Converts the rows into a readable string\n   *\n   * In case there are mutiple dates, the output is {earliest} – {latest}:\n   * 1739-11-25 – 1740-07-08\n   *\n   * In case there is one date, the output is {date}:\n   * 1739-11-25\n   *\n   * In case there is no date, the output is empty\n   *\n   * @param rows\n   */\n  rowsToString(rows) {\n    const timeInfos = rows\n      // map rows to year month time\n      .map(r => this.getTime(r))\n      // filter items with time info\n      .filter(timeInfo => !!timeInfo.timeUnit)\n      // sort earliest date first\n      .sort((a, b) => {\n      // Compare years\n      if (a.year !== b.year) {\n        return a.year - b.year;\n      }\n      // Compare months\n      if (a.month !== b.month) {\n        return a.month - b.month;\n      }\n      // Compare days\n      return a.day - b.day;\n    });\n    // return if we have no time info\n    if (timeInfos.length === 0)\n      return;\n    const earliest = timeInfos[0];\n    const latest = timeInfos[timeInfos.length - 1];\n    if (earliest === latest)\n      return this.timeInfoToString(earliest);\n    return `${this.timeInfoToString(earliest)} – ${this.timeInfoToString(latest)}`;\n  }\n  /**\n   * Extracts TimeInfo from a Row\n   */\n  getTime(row) {\n    var _a, _b, _c, _d, _e, _f;\n    return {\n      year: parseInt((_a = row.year) === null || _a === void 0 ? void 0 : _a.value),\n      month: parseInt((_c = (_b = row.month) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c.replace('--', '')),\n      day: parseInt((_e = (_d = row.day) === null || _d === void 0 ? void 0 : _d.value) === null || _e === void 0 ? void 0 : _e.replace('---', '')),\n      timeUnit: (_f = row.timeUnit) === null || _f === void 0 ? void 0 : _f.value,\n    };\n  }\n  /**\n   * Converts a timeInfo to a string\n   * @param timeInfo\n   * @returns\n   */\n  timeInfoToString(timeInfo) {\n    switch (timeInfo.timeUnit) {\n      case 'http://www.w3.org/2006/time#unitYear':\n        return `${timeInfo.year}`;\n      case 'http://www.w3.org/2006/time#unitMonth':\n        return `${timeInfo.year}-${timeInfo.month.toString().padStart(2, '0')}`;\n      case 'http://www.w3.org/2006/time#unitDay':\n      default:\n        return `${timeInfo.year}-${timeInfo.month.toString().padStart(2, '0')}-${timeInfo.day.toString().padStart(2, '0')}`;\n    }\n  }\n  render() {\n    return h(Fragment, null, this.rowsToString(this.data.rows));\n  }\n  static get is() { return \"geov-time-span\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-time-span.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-time-span.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"declares an _ssrId property that is reflected as attribute\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"if true, componentWillLoad() returns a promise for the loading of all data [default: true]\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nUri of subject, e.g. 'http://www.geovistory.org/ressource/iXXX'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-time-span.js.map\n"],"mappings":"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"}