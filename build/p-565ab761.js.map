{"version":3,"names":["ExceptionCode","KeyboardResize","Keyboard","getEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","undefined","getResizeMode","engine","this","Promise","resolve","catch","e","code","Unimplemented"],"sources":["node_modules/@ionic/core/dist/collection/utils/native/native-interface.js","node_modules/@ionic/core/dist/collection/utils/native/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport var ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getCapacitor } from './capacitor';\nimport { ExceptionCode } from './native-interface';\nexport var KeyboardResize;\n(function (KeyboardResize) {\n  /**\n   * Only the `body` HTML element will be resized.\n   * Relative units are not affected, because the viewport does not change.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Body\"] = \"body\";\n  /**\n   * Only the `ion-app` HTML element will be resized.\n   * Use it only for Ionic Framework apps.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Ionic\"] = \"ionic\";\n  /**\n   * The whole native Web View will be resized when the keyboard shows/hides.\n   * This affects the `vh` relative unit.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Native\"] = \"native\";\n  /**\n   * Neither the app nor the Web View are resized.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"None\"] = \"none\";\n})(KeyboardResize || (KeyboardResize = {}));\nexport const Keyboard = {\n  getEngine() {\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Keyboard')) {\n      return capacitor.Plugins.Keyboard;\n    }\n    return undefined;\n  },\n  getResizeMode() {\n    const engine = this.getEngine();\n    if (!(engine === null || engine === void 0 ? void 0 : engine.getResizeMode)) {\n      return Promise.resolve(undefined);\n    }\n    return engine.getResizeMode().catch((e) => {\n      if (e.code === ExceptionCode.Unimplemented) {\n        // If the native implementation is not available\n        // we treat it the same as if the plugin is not available.\n        return undefined;\n      }\n      throw e;\n    });\n  },\n};\n"],"mappings":";;;GAGO,IAAIA,GACX,SAAWA,GAOTA,EAAc,iBAAmB,gBAQjCA,EAAc,eAAiB,aAChC,EAhBD,CAgBGA,IAAkBA,EAAgB;;;GCf3B,IAACC,GACX,SAAWA,GAOTA,EAAe,QAAU,OAOzBA,EAAe,SAAW,QAO1BA,EAAe,UAAY,SAM3BA,EAAe,QAAU,MAC1B,EA5BD,CA4BGA,IAAmBA,EAAiB,KAC3B,MAACC,EAAW,CACtB,SAAAC,GACE,MAAMC,EAAYC,IAClB,GAAID,IAAc,MAAQA,SAAmB,OAAS,EAAIA,EAAUE,kBAAkB,YAAa,CACjG,OAAOF,EAAUG,QAAQL,QAC/B,CACI,OAAOM,SACX,EACE,aAAAC,GACE,MAAMC,EAASC,KAAKR,YACpB,KAAMO,IAAW,MAAQA,SAAgB,OAAS,EAAIA,EAAOD,eAAgB,CAC3E,OAAOG,QAAQC,QAAQL,UAC7B,CACI,OAAOE,EAAOD,gBAAgBK,OAAOC,IACnC,GAAIA,EAAEC,OAAShB,EAAciB,cAAe,CAG1C,OAAOT,SACf,CACM,MAAMO,CAAC,GAEb,U"}