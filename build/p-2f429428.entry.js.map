{"version":3,"names":["tabsCss","Tabs","constructor","hostRef","this","transitioning","onTabClicked","ev","href","tab","detail","useRouter","undefined","router","document","querySelector","push","select","selectedTab","componentWillLoad","el","closest","tabs","length","ionNavWillLoad","emit","componentWillRender","tabBar","getTab","shouldSwitch","setActive","notifyRouter","tabSwitch","getSelected","Promise","resolve","setRouteId","id","changed","element","markVisible","getRouteId","_a","tabId","reject","leavingTab","ionTabsWillChange","active","ionTabsDidChange","navChanged","Array","from","querySelectorAll","render","h","Host","onIonTabButtonClick","name","class","tabEl","find","t","console","error"],"sources":["node_modules/@ionic/core/dist/collection/components/tabs/tabs.css?tag=ion-tabs&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tabs/tabs.js"],"sourcesContent":[":host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n  z-index: 0;\n}\n\n.tabs-inner {\n  position: relative;\n  flex: 1;\n  contain: layout size style;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nexport class Tabs {\n  constructor() {\n    this.transitioning = false;\n    this.onTabClicked = (ev) => {\n      const { href, tab } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      }\n      else {\n        this.select(tab);\n      }\n    };\n    this.selectedTab = undefined;\n    this.useRouter = false;\n  }\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n    this.ionNavWillLoad.emit();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n    if (!this.shouldSwitch(selectedTab)) {\n      return { changed: false, element: this.selectedTab };\n    }\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch(),\n    };\n  }\n  /** @internal */\n  async getRouteId() {\n    var _a;\n    const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n    return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n  }\n  static get is() { return \"ion-tabs\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"tabs.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"tabs.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"useRouter\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"\"\n        },\n        \"attribute\": \"use-router\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"selectedTab\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionNavWillLoad\",\n        \"name\": \"ionNavWillLoad\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the navigation will load a component.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsWillChange\",\n        \"name\": \"ionTabsWillChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation is about to transition to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionTabsDidChange\",\n        \"name\": \"ionTabsDidChange\",\n        \"bubbles\": false,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the navigation has finished transitioning to a new component.\"\n        },\n        \"complexType\": {\n          \"original\": \"{ tab: string }\",\n          \"resolved\": \"{ tab: string; }\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"select\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getTab\": {\n        \"complexType\": {\n          \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                }],\n              \"text\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"HTMLIonTabElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<HTMLIonTabElement | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n            }]\n        }\n      },\n      \"getSelected\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<string | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<string | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n          \"tags\": []\n        }\n      },\n      \"setRouteId\": {\n        \"complexType\": {\n          \"signature\": \"(id: string) => Promise<RouteWrite>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteWrite\": {\n              \"location\": \"import\",\n              \"path\": \"../router/utils/interface\"\n            }\n          },\n          \"return\": \"Promise<RouteWrite>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"getRouteId\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<RouteID | undefined>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"RouteID\": {\n              \"location\": \"import\",\n              \"path\": \"../router/utils/interface\"\n            }\n          },\n          \"return\": \"Promise<RouteID | undefined>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\n"],"mappings":"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"}