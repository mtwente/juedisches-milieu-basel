import{r as n,e as h,h as i,H as c}from"./p-1bafedb0.js";const m="div,p{color:var(--ion-color-danger)}",l=class{constructor(a){n(this,a),this.validationCompleted=h(this,"validationCompleted",7),this.requiredMismatch=new Set,this.datatypeMismatch=new Set,this.dataIsNotValid={},this.data=void 0,this.expectedKeys=void 0}componentWillLoad(){this.validateData()}validateData(){this.requiredMismatch.clear(),this.datatypeMismatch.clear(),this.dataIsNotValid={},this.expectedKeys.forEach(t=>{this.data.forEach(e=>{var d;t.required&&e[t.name]===void 0&&this.requiredMismatch.add(t.name);for(const o in e)if(Object.prototype.hasOwnProperty.call(e,o)){const s=e[o];if(t.name===o&&(t.datatype&&((d=s?.datatype)!==null&&d!==void 0?d:"string")!==t.datatype&&this.datatypeMismatch.add(t.name),t?.customValidator&&typeof t.customValidator=="function")){const r=t.customValidator(s);r&&(this.dataIsNotValid[t.name]=r)}}})});const a=this.requiredMismatch.size===0&&this.datatypeMismatch.size===0&&Object.keys(this.dataIsNotValid).length===0;this.validationCompleted.emit(a)}render(){return i(c,null,Array.from(this.requiredMismatch).map(a=>i("p",null,"The variable ?",a," must not return empty values. Currently it is either not bound or it returns empty records.")),Array.from(this.datatypeMismatch).map(a=>{var t;return i("p",null,"The variable ?",a," must be of datatype ",(t=this.expectedKeys.find(e=>e.name===a))===null||t===void 0?void 0:t.datatype,". Some or all records do not match that data type.")}),Object.keys(this.dataIsNotValid).map(a=>i("div",null,"Validation errors for variable ?",a,":",i("ul",null,Array.from(this.dataIsNotValid[a]).map(t=>i("li",null,t))))))}};l.style=m;export{l as geov_yasgui_data_validation};
