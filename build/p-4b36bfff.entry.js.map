{"version":3,"names":["geovEntityClassLabelCss","qrLabel","id","GeovEntityClassLabel","constructor","hostRef","this","_ssrId","undefined","sparqlEndpoint","entityId","withIcon","data","setSSRId","componentWillLoad","getSSRData","loading","fetchData","then","d","setSSRData","catch","sparqlJson","res","_a","_b","_c","_d","_e","_f","_g","_h","Object","assign","label","results","bindings","classLabel","value","classURI","t","_","error","render","h","Host","href","target","class","geovEntityDefinitionCss","GeovEntityDefinition","emptyPlaceholder","definitions","map","b","definition","length","geovEntityDownloadRdfCss","GeovEntityDownloadRdf","projectId","color","expand","fill","buttonLabel","buttonIcon","listFormat","TRIX","Thrift","Turtle","response","open","modal","present","dismiss","fetchRDF","format","headers","Headers","Accept","args","url","fetch","method","mode","cache","blob","a","document","createElement","URL","createObjectURL","download","click","renderClickableItem","entries","button","detail","onClick","slot","name","icon","downloadOutline","ref","element","onWillDismiss","isOpen","lines","geovEntityLabelCss","GeovEntityLabel","o","geovEntityPropertiesCss","qrPropsWithCount","uri","language","predicateInclude","predicateExclude","selectClause","parsePredicateList","input","split","rawPredicate","trim","filterClause","excludePredicates","predicates","predicate","join","includePredicates","unions","GeovEntityProperties","entityUri","fetchBeforeRender","uriRegex","uriReplace","fixedGrid","propsWithCount","filterByLanguage","dataFetched","emit","props","lang","pr","filter","anpr","predicateLabel","forEach","query","fixed","renderCards","totalCount","Number","count","predicateUri","replace"],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-label/geov-entity-class-label.css?tag=geov-entity-class-label&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-label/geov-entity-class-label.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-definition/geov-entity-definition.css?tag=geov-entity-definition&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-definition/geov-entity-definition.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-download-rdf/geov-entity-download-rdf.css?tag=geov-entity-download-rdf","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-download-rdf/geov-entity-download-rdf.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-label/geov-entity-label.css?tag=geov-entity-label&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-label/geov-entity-label.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-properties/geov-entity-properties.css?tag=geov-entity-properties&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-properties/geov-entity-properties.js"],"sourcesContent":[":host {\n  display: inline;\n  vertical-align: middle;\n\n}\n\na {\n  color: var(--gv-class-link-color, black);\n  text-decoration: var(--gv-class-link-decoration, none);\n}\n","import { Host, h } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrLabel = (id) => `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX geov: <http://geovistory.org/resource/>\n\nSELECT ?classLabel ?t\nWHERE {\n  geov:${id} rdf:type ?t.\n  optional{?t rdfs:label ?classLabel}\n}\nLIMIT 1\n`;\n/**\n * This component fetches and displays the class label of a given Geovistory entity id.\n */\nexport class GeovEntityClassLabel {\n  constructor() {\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.entityId = undefined;\n    this.withIcon = false;\n    this.data = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      await this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return sparqlJson(this.sparqlEndpoint, qrLabel(this.entityId))\n      .then(res => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      return Object.assign(Object.assign({}, this.data), { label: (_d = (_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.classLabel) === null || _d === void 0 ? void 0 : _d.value, classURI: (_h = (_g = (_f = (_e = res === null || res === void 0 ? void 0 : res.results) === null || _e === void 0 ? void 0 : _e.bindings) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.t) === null || _h === void 0 ? void 0 : _h.value, loading: false });\n    })\n      .catch(_ => {\n      return Object.assign(Object.assign({}, this.data), { error: true, loading: false });\n    });\n  }\n  render() {\n    return (h(Host, null, h(\"a\", { href: this.data.classURI, target: \"_blank\" }, this.withIcon && h(\"geov-entity-class-icon\", { classURI: this.data.classURI }), this.data.label, this.data.loading && `loading...`, this.data.error && `error!`, !this.data.label && !this.data.loading && !this.data.error && h(\"span\", { class: \"no-label-found\" }, \"no label found\"))));\n  }\n  static get is() { return \"geov-entity-class-label\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-label.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-label.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"withIcon\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"withIcon\\nAdd an icon in the left of label\"\n        },\n        \"attribute\": \"with-icon\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-class-label.js.map\n",":host {\n  display: block;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrLabel = (id) => `\nPREFIX ontome: <https://ontome.net/ontology/>\nPREFIX geov: <http://geovistory.org/resource/>\n\nSELECT  ?definition\nWHERE {\n  geov:${id} ontome:p1762 / ontome:p1864 ?definition;\n}\nLIMIT 10\n`;\n/**\n * This component fetches and displays the definitions of a given Geovistory entity id.\n */\nexport class GeovEntityDefinition {\n  constructor() {\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.entityId = undefined;\n    this.emptyPlaceholder = '';\n    this.data = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      await this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return sparqlJson(this.sparqlEndpoint, qrLabel(this.entityId))\n      .then(res => {\n      var _a, _b;\n      return Object.assign(Object.assign({}, this.data), { definitions: (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b.map(b => { var _a; return (_a = b.definition) === null || _a === void 0 ? void 0 : _a.value; }), loading: false });\n    })\n      .catch(_ => {\n      return Object.assign(Object.assign({}, this.data), { error: true, loading: false });\n    });\n  }\n  render() {\n    return (h(Host, null, this.data.definitions.map(definition => (h(\"p\", { class: \"definition\" }, definition))), this.data.loading && `loading...`, this.data.error && `error!`, !this.data.definitions.length && !this.data.loading && !this.data.error && this.emptyPlaceholder && h(\"span\", { class: \"no-label-found\" }, this.emptyPlaceholder), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-entity-definition\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-definition.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-definition.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"emptyPlaceholder\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"text to be displayed in case no definition is found\"\n        },\n        \"attribute\": \"empty-placeholder\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-definition.js.map\n",":host {\n  display: block;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { downloadOutline } from \"ionicons/icons\";\n/**\n * This component is a UI to fetch and download the RDF of a given Geovistory entity id.\n * It allows to choose one of the following rdf syntaxes:\n *\n * - RDF XML\n * - JSON-LD\n * - N-Triples\n * - N-Quads\n * - TRIX\n * - Thrift\n * - Turtle\n *\n */\nexport class GeovEntityDownloadRdf {\n  constructor() {\n    this.entityId = undefined;\n    this.projectId = undefined;\n    this.color = undefined;\n    this.expand = undefined;\n    this.fill = undefined;\n    this.buttonLabel = 'Download RDF';\n    this.buttonIcon = undefined;\n    this.listFormat = {\n      'RDF XML': ['application/rdf+xml', '.rdf'],\n      'JSON-LD': ['application/ld+json', '.jsonld'],\n      'N-Triples': ['application/n-triples', '.nt'],\n      'N-Quads': ['application/n-quads', '.nq'],\n      'TRIX': ['application/trix+xml', '.trix'],\n      'Thrift': ['application/rdf+thrift', '.thrift'],\n      'Turtle': ['text/turtle', '.ttl'],\n    };\n    this.response = undefined;\n  }\n  open() {\n    this.modal.present();\n  }\n  dismiss() {\n    this.modal.dismiss();\n  }\n  async fetchRDF(format) {\n    const headers = new Headers({\n      Accept: format[0], //format[0] = Type\n    });\n    let args = this.entityId;\n    if (this.projectId != undefined) {\n      args += '?p=' + this.projectId;\n    }\n    const url = 'https://www.geovistory.org/resource/';\n    const response = await fetch(url + args, {\n      method: 'GET',\n      headers: headers,\n      mode: 'cors',\n      cache: 'default',\n    });\n    this.response = await response.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(this.response);\n    a.download = this.entityId + format[1]; //format[1] = Extension file\n    a.click();\n    this.dismiss();\n  }\n  renderClickableItem() {\n    return Object.entries(this.listFormat).map(([a, b]) => (h(\"ion-item\", { button: true, detail: false, onClick: () => this.fetchRDF(b), download: \"Download\" }, this.buttonIcon ? h(\"ion-icon\", { slot: \"start\", name: this.buttonIcon }) : h(\"ion-icon\", { slot: \"start\", icon: downloadOutline }), h(\"ion-label\", null, a))));\n  }\n  render() {\n    return (h(Host, null, h(\"ion-button\", { expand: this.expand, fill: this.fill, color: this.color, onClick: () => this.open() }, this.buttonLabel, \" \", this.buttonIcon ? h(\"ion-icon\", { slot: \"end\", name: this.buttonIcon }) : h(\"ion-icon\", { slot: \"end\", icon: downloadOutline })), h(\"ion-modal\", { ref: element => (this.modal = element), onWillDismiss: () => this.dismiss(), isOpen: false }, h(\"ion-header\", null, h(\"ion-toolbar\", null, h(\"ion-buttons\", { slot: \"start\" }, h(\"ion-button\", { onClick: () => this.dismiss() }, \"Cancel\")), h(\"ion-title\", null, \"Download RDF\"))), h(\"ion-content\", { class: \"ion-padding\" }, h(\"ion-list\", { lines: \"none\" }, this.renderClickableItem()))), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-entity-download-rdf\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-download-rdf.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-download-rdf.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"projectId\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number | undefined\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"projectId\\nID number of project, e.g. '123123'\"\n        },\n        \"attribute\": \"project-id\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"color\\ncolor of the button\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      },\n      \"expand\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'block' | 'full'\",\n          \"resolved\": \"\\\"block\\\" | \\\"full\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"expand\\nexpand of the button\"\n        },\n        \"attribute\": \"expand\",\n        \"reflect\": false\n      },\n      \"fill\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'clear' | 'outline' | 'solid' | 'default'\",\n          \"resolved\": \"\\\"clear\\\" | \\\"default\\\" | \\\"outline\\\" | \\\"solid\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"fill\\nfill of the button\"\n        },\n        \"attribute\": \"fill\",\n        \"reflect\": false\n      },\n      \"buttonLabel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"buttonLabel\\nLabel of the button\"\n        },\n        \"attribute\": \"button-label\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Download RDF'\"\n      },\n      \"buttonIcon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"buttonIcon\\nIcon of the button\"\n        },\n        \"attribute\": \"button-icon\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"listFormat\": {},\n      \"response\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-download-rdf.js.map\n",":host {\n  display: block;\n  margin-top: 0;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrLabel = (id) => `\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX geov: <http://geovistory.org/resource/>\n\nSELECT ?o\nWHERE {\n  geov:${id} rdfs:label ?o .\n}\nLIMIT 1\n`;\n/**\n * This component fetches and displays the entity label of a given Geovistory entity id.\n */\nexport class GeovEntityLabel {\n  constructor() {\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.entityId = undefined;\n    this.data = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      await this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return sparqlJson(this.sparqlEndpoint, qrLabel(this.entityId))\n      .then(res => {\n      var _a, _b, _c, _d;\n      return Object.assign(Object.assign({}, this.data), { label: (_d = (_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.o) === null || _d === void 0 ? void 0 : _d.value, loading: false });\n    })\n      .catch(_ => {\n      return Object.assign(Object.assign({}, this.data), { error: true, loading: false });\n    });\n  }\n  render() {\n    return (h(Host, null, this.data.label, this.data.loading && `loading...`, this.data.error && `error!`, !this.data.label && !this.data.loading && !this.data.error && h(\"span\", { class: \"no-label-found\" }, \"no label found\"), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-entity-label\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-label.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-label.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-label.js.map\n","html.ios {\n  --ion-default-font: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Roboto\", sans-serif;\n}\n\nhtml.md {\n  --ion-default-font: \"Roboto\", \"Helvetica Neue\", sans-serif;\n}\n\nhtml {\n  --ion-font-family: var(--ion-default-font);\n}\n\nbody {\n  background: var(--ion-background-color);\n}\n\nbody.backdrop-no-scroll {\n  overflow: hidden;\n}\n\n/**\n * Card style modal needs additional padding on the\n * top of the header. We accomplish this by targeting\n * the first toolbar in the header.\n * Footer also needs this. We do not adjust the bottom\n * padding though because of the safe area.\n */\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal ion-footer ion-toolbar:first-of-type {\n  padding-top: 6px;\n}\n\n/**\n* Card style modal needs additional padding on the\n* bottom of the header. We accomplish this by targeting\n* the last toolbar in the header.\n*/\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:last-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:last-of-type {\n  padding-bottom: 6px;\n}\n\n/**\n* Add padding on the left and right\n* of toolbars while accounting for\n* safe area values when in landscape.\n*/\nhtml.ios ion-modal ion-toolbar {\n  padding-right: calc(var(--ion-safe-area-right) + 8px);\n  padding-left: calc(var(--ion-safe-area-left) + 8px);\n}\n\n/**\n * Card style modal on iPadOS\n * should only have backdrop on first instance.\n */\n@media screen and (min-width: 768px) {\n  html.ios ion-modal.modal-card:first-of-type {\n    --backdrop-opacity: 0.18;\n  }\n}\n/**\n * Subsequent modals should not have a backdrop/box shadow\n * as it will cause the screen to appear to get progressively\n * darker. With Ionic 6, declarative modals made it\n * possible to have multiple non-presented modals in the DOM,\n * so we could no longer rely on ion-modal:first-of-type.\n * Here we disable the opacity/box-shadow for every modal\n * that comes after the first presented modal.\n *\n * Note: ion-modal:not(.overlay-hidden):first-of-type\n * does not match the first modal to not have\n * the .overlay-hidden class, it will match the\n * first modal in general only if it does not\n * have the .overlay-hidden class.\n * The :nth-child() pseudo-class has support\n * for selectors which would help us here. At the\n * time of writing it does not have great cross browser\n * support.\n *\n * Note 2: This should only apply to non-card and\n * non-sheet modals. Card and sheet modals have their\n * own criteria for displaying backdrops/box shadows.\n *\n * Do not use :not(.overlay-hidden) in place of\n * .show-modal because that triggers a memory\n * leak in Blink: https://bugs.chromium.org/p/chromium/issues/detail?id=1418768\n */\nion-modal.modal-default.show-modal ~ ion-modal.modal-default {\n  --backdrop-opacity: 0;\n  --box-shadow: none;\n}\n\n/**\n * This works around a bug in WebKit where the\n * content will overflow outside of the bottom border\n * radius when re-painting. As long as a single\n * border radius value is set on .ion-page, this\n * issue does not happen. We set the top left radius\n * here because the top left corner will always have a\n * radius no matter the platform.\n * This behavior only applies to card modals.\n */\nhtml.ios ion-modal.modal-card .ion-page {\n  border-top-left-radius: var(--border-radius);\n}\n\n.ion-color-primary {\n  --ion-color-base: var(--ion-color-primary, #3880ff) !important;\n  --ion-color-base-rgb: var(--ion-color-primary-rgb, 56, 128, 255) !important;\n  --ion-color-contrast: var(--ion-color-primary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-primary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-primary-shade, #3171e0) !important;\n  --ion-color-tint: var(--ion-color-primary-tint, #4c8dff) !important;\n}\n\n.ion-color-secondary {\n  --ion-color-base: var(--ion-color-secondary, #3dc2ff) !important;\n  --ion-color-base-rgb: var(--ion-color-secondary-rgb, 61, 194, 255) !important;\n  --ion-color-contrast: var(--ion-color-secondary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-secondary-shade, #36abe0) !important;\n  --ion-color-tint: var(--ion-color-secondary-tint, #50c8ff) !important;\n}\n\n.ion-color-tertiary {\n  --ion-color-base: var(--ion-color-tertiary, #5260ff) !important;\n  --ion-color-base-rgb: var(--ion-color-tertiary-rgb, 82, 96, 255) !important;\n  --ion-color-contrast: var(--ion-color-tertiary-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-tertiary-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-tertiary-shade, #4854e0) !important;\n  --ion-color-tint: var(--ion-color-tertiary-tint, #6370ff) !important;\n}\n\n.ion-color-success {\n  --ion-color-base: var(--ion-color-success, #2dd36f) !important;\n  --ion-color-base-rgb: var(--ion-color-success-rgb, 45, 211, 111) !important;\n  --ion-color-contrast: var(--ion-color-success-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-success-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-success-shade, #28ba62) !important;\n  --ion-color-tint: var(--ion-color-success-tint, #42d77d) !important;\n}\n\n.ion-color-warning {\n  --ion-color-base: var(--ion-color-warning, #ffc409) !important;\n  --ion-color-base-rgb: var(--ion-color-warning-rgb, 255, 196, 9) !important;\n  --ion-color-contrast: var(--ion-color-warning-contrast, #000) !important;\n  --ion-color-contrast-rgb: var(--ion-color-warning-contrast-rgb, 0, 0, 0) !important;\n  --ion-color-shade: var(--ion-color-warning-shade, #e0ac08) !important;\n  --ion-color-tint: var(--ion-color-warning-tint, #ffca22) !important;\n}\n\n.ion-color-danger {\n  --ion-color-base: var(--ion-color-danger, #eb445a) !important;\n  --ion-color-base-rgb: var(--ion-color-danger-rgb, 235, 68, 90) !important;\n  --ion-color-contrast: var(--ion-color-danger-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-danger-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-danger-shade, #cf3c4f) !important;\n  --ion-color-tint: var(--ion-color-danger-tint, #ed576b) !important;\n}\n\n.ion-color-light {\n  --ion-color-base: var(--ion-color-light, #f4f5f8) !important;\n  --ion-color-base-rgb: var(--ion-color-light-rgb, 244, 245, 248) !important;\n  --ion-color-contrast: var(--ion-color-light-contrast, #000) !important;\n  --ion-color-contrast-rgb: var(--ion-color-light-contrast-rgb, 0, 0, 0) !important;\n  --ion-color-shade: var(--ion-color-light-shade, #d7d8da) !important;\n  --ion-color-tint: var(--ion-color-light-tint, #f5f6f9) !important;\n}\n\n.ion-color-medium {\n  --ion-color-base: var(--ion-color-medium, #92949c) !important;\n  --ion-color-base-rgb: var(--ion-color-medium-rgb, 146, 148, 156) !important;\n  --ion-color-contrast: var(--ion-color-medium-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-medium-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-medium-shade, #808289) !important;\n  --ion-color-tint: var(--ion-color-medium-tint, #9d9fa6) !important;\n}\n\n.ion-color-dark {\n  --ion-color-base: var(--ion-color-dark, #222428) !important;\n  --ion-color-base-rgb: var(--ion-color-dark-rgb, 34, 36, 40) !important;\n  --ion-color-contrast: var(--ion-color-dark-contrast, #fff) !important;\n  --ion-color-contrast-rgb: var(--ion-color-dark-contrast-rgb, 255, 255, 255) !important;\n  --ion-color-shade: var(--ion-color-dark-shade, #1e2023) !important;\n  --ion-color-tint: var(--ion-color-dark-tint, #383a3e) !important;\n}\n\n.ion-page {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  contain: layout size style;\n  overflow: hidden;\n  z-index: 0;\n}\n\n/**\n * When making custom dialogs, using\n * ion-content is not required. As a result,\n * some developers may wish to have dialogs\n * that are automatically sized by the browser.\n * These changes allow certain dimension values\n * such as fit-content to work correctly.\n */\nion-modal > .ion-page {\n  position: relative;\n  contain: layout style;\n  height: 100%;\n}\n\n.split-pane-visible > .ion-page.split-pane-main {\n  position: relative;\n}\n\nion-route,\nion-route-redirect,\nion-router,\nion-select-option,\nion-nav-controller,\nion-menu-controller,\nion-action-sheet-controller,\nion-alert-controller,\nion-loading-controller,\nion-modal-controller,\nion-picker-controller,\nion-popover-controller,\nion-toast-controller,\n.ion-page-hidden {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n.ion-page-invisible {\n  opacity: 0;\n}\n\n.can-go-back > ion-header ion-back-button {\n  display: block;\n}\n\nhtml.plt-ios.plt-hybrid, html.plt-ios.plt-pwa {\n  --ion-statusbar-padding: 20px;\n}\n\n@supports (padding-top: 20px) {\n  html {\n    --ion-safe-area-top: var(--ion-statusbar-padding);\n  }\n}\n@supports (padding-top: constant(safe-area-inset-top)) {\n  html {\n    --ion-safe-area-top: constant(safe-area-inset-top);\n    --ion-safe-area-bottom: constant(safe-area-inset-bottom);\n    --ion-safe-area-left: constant(safe-area-inset-left);\n    --ion-safe-area-right: constant(safe-area-inset-right);\n  }\n}\n@supports (padding-top: env(safe-area-inset-top)) {\n  html {\n    --ion-safe-area-top: env(safe-area-inset-top);\n    --ion-safe-area-bottom: env(safe-area-inset-bottom);\n    --ion-safe-area-left: env(safe-area-inset-left);\n    --ion-safe-area-right: env(safe-area-inset-right);\n  }\n}\nion-card.ion-color .ion-inherit-color,\nion-card-header.ion-color .ion-inherit-color {\n  color: inherit;\n}\n\n.menu-content {\n  transform: translate3d(0,  0,  0);\n}\n\n.menu-content-open {\n  cursor: pointer;\n  touch-action: manipulation;\n  pointer-events: none;\n}\n\n.ios .menu-content-reveal {\n  box-shadow: -8px 0 42px rgba(0, 0, 0, 0.08);\n}\n\n[dir=rtl].ios .menu-content-reveal {\n  box-shadow: 8px 0 42px rgba(0, 0, 0, 0.08);\n}\n\n.md .menu-content-reveal {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}\n\n.md .menu-content-push {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}\n\nion-accordion-group.accordion-group-expand-inset > ion-accordion:first-of-type {\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n\nion-accordion-group.accordion-group-expand-inset > ion-accordion:last-of-type {\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\n\nion-accordion-group > ion-accordion:last-of-type ion-item[slot=header] {\n  --border-width: 0px;\n}\n\nion-accordion.accordion-animated > [slot=header] .ion-accordion-toggle-icon {\n  transition: 300ms transform cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n@media (prefers-reduced-motion: reduce) {\n  ion-accordion .ion-accordion-toggle-icon {\n    /* stylelint-disable declaration-no-important */\n    transition: none !important;\n  }\n}\n/**\n * The > [slot=\"header\"] selector ensures that we do\n * not modify toggle icons for any nested accordions. The state\n * of one accordion should not affect any accordions inside\n * of a nested accordion group.\n */\nion-accordion.accordion-expanding > [slot=header] .ion-accordion-toggle-icon,\nion-accordion.accordion-expanded > [slot=header] .ion-accordion-toggle-icon {\n  transform: rotate(180deg);\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-previous ion-item[slot=header] {\n  --border-width: 0px;\n  --inner-border-width: 0px;\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanding:first-of-type,\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanded:first-of-type {\n  margin-top: 0;\n}\n\nion-input input::-webkit-date-and-time-value {\n  text-align: start;\n}\n\n/**\n * The .ion-datetime-button-overlay class contains\n * styles that allow any modal/popover to be\n * sized according to the dimensions of the datetime\n * when used with ion-datetime-button.\n */\n.ion-datetime-button-overlay {\n  --width: fit-content;\n  --height: fit-content;\n}\n\n/**\n * The grid variant can scale down when inline.\n * When used in a `fit-content` overlay, this causes\n * the overlay to shrink when the month/year picker is open.\n * Explicitly setting the dimensions lets us have a consistently\n * sized grid interface.\n */\n.ion-datetime-button-overlay ion-datetime.datetime-grid {\n  width: 320px;\n  min-height: 320px;\n}\n\n/*# sourceMappingURL=core.css.map */\n\n\n:host.container,\n.container {\n  display: block;\n  column-count: var(--column-count);\n  column-gap: var(--column-gap);\n  column-rule-style: var(--column-rule-style);\n  column-rule-width: var(--column-rule-width);\n  column-rule-color: var(--column-rule-color);\n  column-rule: var(--column-rule);\n  column-span: var(--column-span);\n  column-width: var(--column-width);\n}\n\n.predicateContainer {\n  padding: var(--ion-padding);\n}\n\n.predicateContainer~.predicateContainer {\n  margin-top: 2rem;\n}","import { h, Host } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrPropsWithCount = (uri, language, predicateInclude, predicateExclude) => {\n  let selectClause;\n  // Function ot parse comma separated list of URI's\n  const parsePredicateList = (input) => {\n    return input.split(',').map(rawPredicate => `${rawPredicate.trim()}`);\n  };\n  let filterClause = '';\n  if (predicateExclude) {\n    const excludePredicates = parsePredicateList(predicateExclude);\n    const predicates = excludePredicates.map(predicate => `\"${predicate}\"`);\n    filterClause = `FILTER (str(?predicate) NOT IN (\n      ${predicates.join(`,\n        `)}\n      ))`;\n  }\n  if (predicateInclude) {\n    const includePredicates = parsePredicateList(predicateInclude);\n    const unions = includePredicates.map(predicate => `\n      {\n        SELECT (<${predicate}> as ?predicate) ?predicateLabel (count(distinct ?object) as ?count)\n        WHERE {\n          <${uri}> <${predicate}> ?object .\n          OPTIONAL {\n            <${predicate}> rdfs:label ?predicateLabel .\n            FILTER(LANG(?predicateLabel) IN (\"${language}\", \"en\"))\n          } .\n          ${filterClause}\n        }\n        GROUP BY ?predicate ?predicateLabel\n      }`);\n    selectClause = `SELECT * {\n      ${unions.join('\\nUNION\\n')}\n    }`;\n  }\n  else {\n    selectClause = `\n    SELECT ?predicate ?predicateLabel (count(distinct ?object) as ?count)\n    WHERE {\n      <${uri}> ?predicate ?object .\n      OPTIONAL {\n        ?predicate rdfs:label ?predicateLabel .\n        FILTER(LANG(?predicateLabel) IN (\"${language}\", \"en\"))\n      } .\n      ${filterClause}\n    }\n    GROUP BY ?predicate ?predicateLabel\n    `;\n  }\n  return `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX xml: <http://www.w3.org/XML/1998/namespace>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX geo: <http://www.opengis.net/ont/geosparql#>\nPREFIX time: <http://www.w3.org/2006/time#>\nPREFIX ontome: <https://ontome.net/ontology/>\nPREFIX geov: <http://geovistory.org/resource/>\n\n${selectClause}\n`;\n};\n/**\n * This component fetches and displays the properties of an entity.\n * Each predicate is queried and displayed as a paginated list.\n * The properties `predicateInclude` and `predicateExclude` allow to customize\n * what predicates to fetch.\n */\nexport class GeovEntityProperties {\n  constructor() {\n    this._ssrId = undefined;\n    this.data = undefined;\n    this.sparqlEndpoint = undefined;\n    this.entityUri = undefined;\n    this.language = 'en';\n    this.fetchBeforeRender = true;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.color = '';\n    this.predicateInclude = undefined;\n    this.predicateExclude = undefined;\n    this.fixedGrid = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    if (this.fetchBeforeRender) {\n      /**\n       * try to get data from ssr\n       */\n      this.data = getSSRData(this._ssrId);\n    }\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      // fetch data via http\n      await this.fetchData() // <- await this promise!\n        .then(d => {\n        var _a;\n        // filter language\n        d.propsWithCount = this.filterByLanguage((_a = d.propsWithCount) !== null && _a !== void 0 ? _a : [], this.language);\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        this.dataFetched.emit(d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  filterByLanguage(props, lang) {\n    //If we have 2 labels in the same language, concatenate for one and deactivate for the other\n    props.map(pr => {\n      props\n        .filter(anpr => {\n        return pr.predicate.value == anpr.predicate.value && pr != anpr && pr.predicateLabel['xml:lang'] == anpr.predicateLabel['xml:lang'];\n      })\n        .forEach(anpr => {\n        pr.predicateLabel.value += ', ' + anpr.predicateLabel.value;\n        anpr.predicateLabel['xml:lang'] = 'deactivate'; //It's just a trick\n      });\n    });\n    return props.filter(pr => {\n      // Find if there are other identical predicates\n      if (props.filter(anpr => {\n        return pr.predicate.value == anpr.predicate.value && pr != anpr;\n      }).length) {\n        // Yes another same predicate. Priority selected language\n        if (pr.predicateLabel['xml:lang'] == lang) {\n          //We keep pr\n          return true;\n        }\n        else {\n          //We don't keep pr\n          return false;\n        }\n      }\n      else {\n        //No, we keep pr\n        return true;\n      }\n    });\n  }\n  async fetchData() {\n    let d = { loading: true };\n    const query = qrPropsWithCount(this.entityUri, this.language, this.predicateInclude, this.predicateExclude);\n    await sparqlJson(this.sparqlEndpoint, query)\n      .then(res => {\n      var _a;\n      d = {\n        loading: false,\n        propsWithCount: (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings,\n      };\n    })\n      .catch(_ => {\n      d = {\n        loading: false,\n        error: true,\n      };\n    });\n    return d;\n  }\n  render() {\n    if (this.fixedGrid) {\n      return (h(Host, null, h(\"ion-grid\", { fixed: true, class: \"container\" }, this.renderCards())));\n    }\n    return h(Host, { class: \"container\" }, this.renderCards());\n  }\n  renderCards() {\n    return this.data.propsWithCount.map(b => {\n      var _a;\n      return (h(\"div\", { class: 'predicateContainer' }, h(\"geov-entity-props-by-predicate\", { entityUri: this.entityUri, sparqlEndpoint: this.sparqlEndpoint, totalCount: Number(b.count.value), predicateUri: b.predicate.value, predicateLabel: b.predicateLabel\n          ? (_a = b.predicateLabel) === null || _a === void 0 ? void 0 : _a.value\n          : b.predicate.value.replace('http://www.w3.org/2000/01/rdf-schema#', 'rdfs:').replace('http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'rdf:'), uriRegex: this.uriRegex, uriReplace: this.uriReplace, color: this.color })));\n    });\n  }\n  static get is() { return \"geov-entity-properties\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-properties.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-properties.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"declares an _ssrId property that is reflected as attribute\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityUri\\nURI entity, e.g. 'http://geovistory.org/resource/i1234'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false,\n        \"defaultValue\": \"'en'\"\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"color\\nColor of the properties\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      },\n      \"predicateInclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateInclude\\nComma separated list of predicate URI's to include, e.g:\\nFetch only the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-include\",\n        \"reflect\": false\n      },\n      \"predicateExclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateInclude\\nComma separated list of predicate URI's to exclude, e.g:\\nDon't fetch the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-exclude\",\n        \"reflect\": false\n      },\n      \"fixedGrid\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"fixedGrid\\nif true, the content is wrapped in a <ion-grid fixed=true></ion-grid>\"\n        },\n        \"attribute\": \"fixed-grid\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"dataFetched\",\n        \"name\": \"dataFetched\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emits fetched data, after being fetched.\"\n        },\n        \"complexType\": {\n          \"original\": \"GeovEntityPropertiesData\",\n          \"resolved\": \"GeovEntityPropertiesData\",\n          \"references\": {\n            \"GeovEntityPropertiesData\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-entity-properties/geov-entity-properties.tsx\",\n              \"id\": \"src/components/geov-entity-properties/geov-entity-properties.tsx::GeovEntityPropertiesData\"\n            }\n          }\n        }\n      }];\n  }\n}\n//# sourceMappingURL=geov-entity-properties.js.map\n"],"mappings":"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"}