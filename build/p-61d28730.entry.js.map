{"version":3,"names":["importYasgui","async","Promise","resolve","reject","isNode","window","script","document","createElement","onload","onerror","src","body","appendChild","link","href","rel","type","generatePluginMapCircles","config","PluginMapCircles","constructor","yasr","this","priority","hideFromSelection","label","expectedKeys","name","required","customValidator","val","Number","value","Set","isNaN","parsed","draw","elValidation","data","results","getBindings","resultsEl","classList","add","addEventListener","isValid","_a","detail","elVisual","style","height","mapHeight","key","remove","removeChild","canHandleResults","hasError","getIcon","textIcon","icon","mapOutline","geovYasguiCss","GeovYasgui","hostRef","toggling","plugins","collapse","defaultPlugin","pluginOrder","pluginConfig","queryTabs","hideYasqueToggle","componentWillLoad","Y","componentDidLoad","setupYasr","localStorage","removeItem","el","yasgui","length","getTab","close","tabDefaults","Tab","getDefaults","forEach","q","i","addTab","Object","assign","id","requestConfig","endpoint","sparqlEndpoint","yasqe","query","settings","selectedPlugin","avoidDuplicateTabs","setYasqueVisibility","toggleVisiblity","elementsToSwitchVis","querySelectorAll","ele","res","setTimeout","registerCustomPlugins","setPluginOrder","customPlugins","mapCircles","plugin","Yasr","registerPlugin","defaults","render","h","Host","class","size","onClick","title","slot","settingsOutline","closeOutline"],"sources":["node_modules/@geovistory/design-system-web/dist/collection/lib/importYasgui.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/PluginMapCircles.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/geov-yasgui.css?tag=geov-yasgui","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/geov-yasgui.js"],"sourcesContent":["import { isNode } from \"./isNode\";\n/**\n * Load and return plotly library from CDN in browsers.\n * In node server environment returns null.\n * @returns Yasgui (in browser) or null (in server)\n */\nexport const importYasgui = async () => new Promise((resolve, reject) => {\n  // if we are on a node server resolve with null\n  if (isNode())\n    return resolve(null);\n  // if Yasgui is already defined resolve it\n  if ('Yasgui' in window) {\n    return resolve(window['Yasgui']);\n  }\n  // create new script element\n  const script = document.createElement('script');\n  // register on load callback and resolve Yasgui\n  script.onload = () => resolve(window['Yasgui']);\n  // register on error callback and reject\n  script.onerror = reject;\n  // set url\n  script.src = 'https://cdn.jsdelivr.net/npm/@triply/yasgui@4.2.28/build/yasgui.min.js';\n  // append script to load Yasgui JS from CDN to document\n  document.body.appendChild(script);\n  // create new link element\n  const link = document.createElement('link');\n  link.href = 'https://cdn.jsdelivr.net/npm/@triply/yasgui@4.2.28/build/yasgui.min.css';\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  // append link to load Yasgui CSS from CDN to document\n  document.body.appendChild(link);\n});\n//# sourceMappingURL=importYasgui.js.map\n","import { mapOutline } from \"ionicons/icons\";\nexport default function generatePluginMapCircles(config) {\n  return class PluginMapCircles {\n    constructor(yasr) {\n      // A priority value. If multiple plugin support rendering of a result, this value is used\n      // to select the correct plugin\n      this.priority = 10;\n      // Whether to show a select-button for this plugin\n      this.hideFromSelection = false;\n      this.label = 'Map Circles';\n      this.expectedKeys = [\n        {\n          name: 'radius',\n          required: false,\n          customValidator: val => {\n            if (Number(val === null || val === void 0 ? void 0 : val.value) > 0)\n              return;\n            return new Set(['must be parsable to a number, and bigger than 0']);\n          },\n        },\n        {\n          name: 'number',\n          required: false,\n          customValidator: val => {\n            if (!isNaN(Number(val === null || val === void 0 ? void 0 : val.value)))\n              return;\n            return new Set(['must be parsable to a number']);\n          },\n        },\n        {\n          name: 'long',\n          required: true,\n          customValidator: val => {\n            const parsed = Number(val === null || val === void 0 ? void 0 : val.value);\n            if (parsed >= -180 && parsed <= 180)\n              return;\n            return new Set(['must be parsable to a number in the range -180 and +180']);\n          },\n        },\n        {\n          name: 'lat',\n          required: true,\n          customValidator: val => {\n            const parsed = Number(val === null || val === void 0 ? void 0 : val.value);\n            if (parsed >= -90 && parsed <= 90)\n              return;\n            return new Set(['must be parsable to a number in the range -90 and +90']);\n          },\n        },\n      ];\n      this.yasr = yasr;\n    }\n    // Draw the result set. This plugin creates a <geov-yasgui-map-circles/ data=[...]>\n    draw() {\n      const elValidation = document.createElement('geov-yasgui-data-validation');\n      const data = this.yasr.results.getBindings();\n      elValidation.data = data;\n      elValidation.expectedKeys = this.expectedKeys;\n      this.yasr.resultsEl.appendChild(elValidation);\n      this.yasr.resultsEl.classList.add('ion-padding');\n      // listen for the validation result\n      elValidation.addEventListener('validationCompleted', (isValid) => {\n        var _a;\n        // if data is valid ...\n        if (isValid.detail) {\n          // create the timeline element\n          const elVisual = document.createElement('geov-yasgui-map-circles');\n          elVisual.data = data;\n          elVisual.style.height = (_a = config === null || config === void 0 ? void 0 : config.mapHeight) !== null && _a !== void 0 ? _a : '400px';\n          for (const key in config) {\n            elVisual[key] = config[key];\n          }\n          // remove validation element\n          this.yasr.resultsEl.classList.remove('ion-padding');\n          this.yasr.resultsEl.removeChild(elValidation);\n          // append timeline element\n          this.yasr.resultsEl.appendChild(elVisual);\n        }\n      });\n    }\n    // A required function, used to indicate whether this plugin can draw the current\n    // resultset from yasr\n    canHandleResults() {\n      return !this.yasr.results.hasError();\n    }\n    // A required function, used to identify the plugin, works best with an svg\n    getIcon() {\n      const textIcon = document.createElement('ion-icon');\n      textIcon.icon = mapOutline;\n      return textIcon;\n    }\n  };\n}\n//# sourceMappingURL=PluginMapCircles.js.map\n","geov-yasgui {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\ngeov-yasgui .toggle-button {\n  position: absolute;\n  z-index: 1000;\n  right: var(--ion-padding, 1rem);\n  top: var(--ion-padding, 1rem);\n}\n\ngeov-yasgui.toggling .tabsList,\ngeov-yasgui.toggling .yasr_header,\ngeov-yasgui.toggling .yasqe .resizeWrapper,\ngeov-yasgui.toggling .yasqe .CodeMirror,\ngeov-yasgui.toggling .controlbar {\n  transition: all .2s ease-in;\n  overflow: hidden;\n}\n\ngeov-yasgui .tabsList.collapsed,\ngeov-yasgui .yasr_header.collapsed,\ngeov-yasgui .yasqe.collapsed .resizeWrapper,\ngeov-yasgui .controlbar.collapsed,\ngeov-yasgui .yasqe.collapsed .CodeMirror {\n  transition: all .2s ease-out;\n  overflow: hidden;\n}\n\ngeov-yasgui .tabsList.collapsed,\ngeov-yasgui .yasr_header.collapsed,\ngeov-yasgui .yasqe.collapsed .resizeWrapper {\n  height: 0px;\n}\n\ngeov-yasgui .controlbar.collapsed {\n  max-height: 0px;\n}\n\ngeov-yasgui .yasqe.collapsed .CodeMirror {\n  height: 0px !important;\n  border: none;\n  min-height: 0px;\n}\n\ngeov-yasgui .yasr.collapsed {\n  margin-top: 0px;\n}\n","import { Host, h } from \"@stencil/core\";\nimport { importYasgui } from \"../../lib/importYasgui\";\nimport generatePluginMapCircles from \"./PluginMapCircles\";\nimport { closeOutline, settingsOutline } from \"ionicons/icons\";\nimport { isNode } from \"../../lib/isNode\";\n/**\n * Yasgui is a SPARQL query editor and results visualizer.\n *\n * The component is a wrapper around the Yasgui library it can also use custom plugins.\n */\nexport class GeovYasgui {\n  constructor() {\n    // True during 200ms of toggling\n    this.toggling = false;\n    this.plugins = new Set();\n    this.collapse = false;\n    this.defaultPlugin = 'table';\n    this.pluginOrder = ['table', 'response'];\n    this.pluginConfig = {};\n    this.queryTabs = [];\n    this.hideYasqueToggle = false;\n  }\n  async componentWillLoad() {\n    this.Y = await importYasgui();\n  }\n  componentDidLoad() {\n    // If we are in a browser\n    if (!isNode()) {\n      this.setupYasr();\n      localStorage.removeItem('yagui__config');\n      if (!this.el)\n        return;\n      const yasgui = new this.Y(this.el, {});\n      // close initial tab\n      if (this.queryTabs.length)\n        yasgui.getTab().close();\n      // add tabs\n      const tabDefaults = this.Y.Tab.getDefaults();\n      this.queryTabs.forEach((q, i) => {\n        var _a;\n        yasgui.addTab(i === 0, Object.assign(Object.assign({}, tabDefaults), { id: 'tab' + i, requestConfig: Object.assign(Object.assign({}, tabDefaults.requestConfig), { endpoint: q.sparqlEndpoint }), name: q.name, yasqe: { value: q.query }, yasr: Object.assign(Object.assign({}, tabDefaults.yasr), { settings: {\n              selectedPlugin: (_a = q.selectedPlugin) !== null && _a !== void 0 ? _a : this.defaultPlugin,\n            } }) }), { avoidDuplicateTabs: true });\n      });\n      // execute query of active tab\n      yasgui.getTab().query();\n      // set Yasque visibility\n      this.setYasqueVisibility();\n    }\n  }\n  toggleVisiblity() {\n    if (this.toggling)\n      return;\n    this.collapse = !this.collapse;\n    this.setYasqueVisibility();\n  }\n  async setYasqueVisibility() {\n    this.toggling = true;\n    this.el.classList.add('toggling');\n    const elementsToSwitchVis = this.el.querySelectorAll('.yasr, .yasr_header, .yasqe, .tabsList, .controlbar');\n    elementsToSwitchVis.forEach(ele => {\n      this.collapse ? ele.classList.add('collapsed') : ele.classList.remove('collapsed');\n    });\n    await new Promise(res => setTimeout(res, 200));\n    this.el.classList.remove('toggling');\n    this.toggling = false;\n  }\n  /**\n   * Setup yasr configuration\n   */\n  setupYasr() {\n    this.registerCustomPlugins();\n    this.setPluginOrder();\n  }\n  /**\n   * Register custom yasr plugins\n   */\n  registerCustomPlugins() {\n    var _a;\n    const customPlugins = {\n      mapCircles: generatePluginMapCircles(this.pluginConfig.mapCircles),\n    };\n    (_a = this.plugins) === null || _a === void 0 ? void 0 : _a.forEach(plugin => {\n      if (!!customPlugins[plugin])\n        this.Y.Yasr.registerPlugin(plugin, customPlugins[plugin]);\n    });\n  }\n  /**\n   * Set yasr plugin order\n   */\n  setPluginOrder() {\n    this.Y.Yasr.defaults.pluginOrder = this.pluginOrder;\n  }\n  render() {\n    return (h(Host, null, !this.hideYasqueToggle && (h(\"ion-button\", { class: \"toggle-button\", size: \"small\", onClick: () => this.toggleVisiblity(), title: this.collapse ? 'Show query' : 'Hide query' }, this.collapse ? h(\"ion-icon\", { slot: \"icon-only\", icon: settingsOutline }) : h(\"ion-icon\", { slot: \"icon-only\", icon: closeOutline })))));\n  }\n  static get is() { return \"geov-yasgui\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-yasgui.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-yasgui.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"plugins\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Set<CustomPlugin>\",\n          \"resolved\": \"Set<\\\"mapCircles\\\">\",\n          \"references\": {\n            \"Set\": {\n              \"location\": \"global\",\n              \"id\": \"global::Set\"\n            },\n            \"CustomPlugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::CustomPlugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Plugins to enable (in addition to the built-in plugins: response, table, error, boolean)\"\n        },\n        \"defaultValue\": \"new Set()\"\n      },\n      \"collapse\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Collapse the GUI elements of Yasgui\"\n        },\n        \"attribute\": \"collapse\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"defaultPlugin\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Plugin\",\n          \"resolved\": \"\\\"mapCircles\\\" | \\\"response\\\" | \\\"table\\\"\",\n          \"references\": {\n            \"Plugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::Plugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The plugin initially activated\"\n        },\n        \"attribute\": \"default-plugin\",\n        \"reflect\": false,\n        \"defaultValue\": \"'table'\"\n      },\n      \"pluginOrder\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Plugin[]\",\n          \"resolved\": \"Plugin[]\",\n          \"references\": {\n            \"Plugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::Plugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The order of plugin tabs\"\n        },\n        \"defaultValue\": \"['table', 'response']\"\n      },\n      \"pluginConfig\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"PluginConfig\",\n          \"resolved\": \"PluginConfig\",\n          \"references\": {\n            \"PluginConfig\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::PluginConfig\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The config of plugins\"\n        },\n        \"defaultValue\": \"{}\"\n      },\n      \"queryTabs\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"QueryTab[]\",\n          \"resolved\": \"QueryTab[]\",\n          \"references\": {\n            \"QueryTab\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::QueryTab\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"For each item in this array a tab will be added to Yasgui.\\n`QueryTab: { name: 'Tab name', sparqlEndpoint: 'https://...', query: 'SELECT ?s ?p ?o' }`\"\n        },\n        \"defaultValue\": \"[]\"\n      },\n      \"hideYasqueToggle\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the button to toggle the query (Yasque) is hidden.\"\n        },\n        \"attribute\": \"hide-yasque-toggle\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=geov-yasgui.js.map\n"],"mappings":"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"}