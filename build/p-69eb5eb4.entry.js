import{r as t,h as i,H as n}from"./p-1bafedb0.js";import{g as s,a as e,s as a}from"./p-1445007b.js";import{s as l}from"./p-855a8bbd.js";const o=t=>t.trim().replace("*"," ").split(" ").map((t=>"*"+t+"*")).join(" AND ");const r=t=>`# classes\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT ?class ?label ?count\nWHERE {\n  {\n    SELECT  ?class (count(distinct ?entityUri) as ?count)\n    WHERE {\n      ${t?`(?entityUri) text:query ('${o(t)}') . `:``}\n \t   ?entityUri a ?class .\n    }\n    GROUP BY ?class\n    ORDER by DESC(?count)\n  }\n  ?class rdfs:label ?label\n}\nHAVING(?label != "")\n`;class h{async fetch(t,i){this.promiseWithCancel=l(t,r(i));return this.promiseWithCancel.then((t=>{var i,n;const s={items:(n=(i=t===null||t===void 0?void 0:t.results)===null||i===void 0?void 0:i.bindings)===null||n===void 0?void 0:n.map((t=>({classLabel:t.label.value,classUri:t.class.value,instanceCount:Number(t.count.value)}))),loading:false};return s})).catch((t=>{const i={error:true,loading:false};return i}))}}const d=(t,i,n,s)=>`# entities\n  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX text: <http://jena.apache.org/text#>\n  SELECT ?entityUri ?entityLabel ?classUri ?classLabel\n  {\n    {\n    SELECT DISTINCT ?entityUri  ?entityLabel ?classUri ?classLabel {\n        {\n          SELECT DISTINCT ?entityUri ?entityLabel ?classUri\n          {\n              {\n                    SELECT ?entityUri  ?entityLabel\n                    {\n                        ${t?`(?entityUri) text:query ('${o(t)}') . `:``}\n\n                        ${!(i===null||i===void 0?void 0:i.length)?`\n                        {\n                          {\n                            SELECT DISTINCT  ?classWithInstances\n                            WHERE {\n                              ?entityUri a ?classWithInstances .\n                            }\n                            GROUP BY ?classWithInstances\n                          }\n                        }\n                        {?entityUri a ?classWithInstances .}\n                        `:``}\n\n                        ${i.map((t=>`{?entityUri a <${t}> .}`)).join("\nUNION\n")}\n                        OPTIONAL {?entityUri rdfs:label ?entityLabel .}\n\n                  }\n                  LIMIT ${n}\n                  OFFSET ${s}\n              }\n              ?entityUri a ?classUri .\n          }\n        }\n        OPTIONAL { ?classUri rdfs:label ?classLabel .}\n      }\n      HAVING (?classLabel!="")\n    }\n  }\n`;class c{async fetch(t,i,n,s,e){this.promiseWithCancel=l(t,d(i,n,s,e));return this.promiseWithCancel.then((t=>{var i,n;const s={items:(n=(i=t===null||t===void 0?void 0:t.results)===null||i===void 0?void 0:i.bindings)===null||n===void 0?void 0:n.map((t=>({classLabel:t.classLabel.value,entityLabel:t.entityLabel.value,entityUri:t.entityUri.value,classUri:t.classUri.value}))),loading:false};return s})).catch((t=>{const i={error:true,loading:false};return i}))}}const u=(t,i)=>`# count\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ontome: <https://ontome.net/ontology/>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT (count(distinct ?entityUri) as ?count)\nWHERE {\n  ${t?`(?entityUri) text:query ('${o(t)}') . `:``}\n\n  ${!(i===null||i===void 0?void 0:i.length)?`\n          {\n            {\n              SELECT DISTINCT  ?classWithInstances\n              WHERE {\n                 ?entityUri a ?classWithInstances .\n              }\n              GROUP BY ?classWithInstances\n            }\n          }\n          {?entityUri a ?classWithInstances .}\n          `:`${i.map((t=>`{?entityUri a <${t}> .}`)).join("\nUNION\n")}`}\n}\n`;class v{async fetch(t,i,n){this.promiseWithCancel=l(t,u(i,n));return this.promiseWithCancel.then((t=>{var i,n,s;const e={count:Number((s=(n=(i=t===null||t===void 0?void 0:t.results)===null||i===void 0?void 0:i.bindings)===null||n===void 0?void 0:n[0])===null||s===void 0?void 0:s.count.value),loading:false};return e})).catch((t=>{const i={error:true,loading:false};return i}))}}const g=":host{display:block}.entity-count-col{align-items:center;display:flex;flex-direction:row}.entity-count-label{height:1rem;padding-inline-start:calc(var(--ion-safe-area-left, 0px) + 20px)}.entity-count-sm{margin-top:2px;margin-bottom:1rem;display:block}ion-searchbar{padding-bottom:0}.paginator-container{margin-top:1rem;align-items:center}.paginator{margin-left:auto}";const f=class{set data(t){this.entityList=t===null||t===void 0?void 0:t.entityList;this.classSelect=t===null||t===void 0?void 0:t.classSelect;this.fullCount=t===null||t===void 0?void 0:t.fullCount;this.__data=t}get data(){return this.__data}set offset(t){this._offset=t;this.fetchEntityListData()}get offset(){return this._offset}set searchString(t){this._searchString=t;this.offset=0;this.fetchClassSelectData();this.fetchEntityListData();this.fetchFullCountData()}get searchString(){return this._searchString}set selectedClass(t){var i;if(((i=this._selectedClass)===null||i===void 0?void 0:i.classUri)!==(t===null||t===void 0?void 0:t.classUri)){this._selectedClass=t;this._offset=0;this.fetchEntityListData();this.fetchFullCountData()}}get selectedClass(){return this._selectedClass}componentWillLoad(){this._searchString=this.initSearchString;this.data=s(this._ssrId);if(!this.data){const t=this.fetchData().then((t=>{this.data=t;e(this._ssrId,t);return t})).catch((t=>{this.data=t;return t}));if(this.fetchBeforeRender)return t}}constructor(i){t(this,i);this.limit=10;this._ssrId=undefined;this.sparqlEndpoint=undefined;this.fetchBeforeRender=false;this.initSearchString=undefined;this.uriRegex=undefined;this.uriReplace=undefined;this.preferredItems=undefined;this.classUriPrefix=undefined;this.entityList=undefined;this.classSelect=undefined;this.fullCount=undefined;this._offset=0;a(this)}async fetchData(){return Promise.all([await this.fetchClassSelectData(),this.fetchEntityListData(),this.fetchFullCountData()]).then((([t,i,n])=>({classSelect:t,entityList:i,fullCount:n,loading:false})))}async fetchClassSelectData(){this.classSelect={loading:true};if(this.fetchClassSelect)this.fetchClassSelect.promiseWithCancel.cancel();this.fetchClassSelect=new h;this.classSelect=await this.fetchClassSelect.fetch(this.sparqlEndpoint,this.searchString);this.fetchClassSelect=undefined;return this.classSelect}async fetchEntityListData(){this.entityList={loading:true};if(this.fetchEntityList)this.fetchEntityList.promiseWithCancel.cancel();this.fetchEntityList=new c;this.entityList=await this.fetchEntityList.fetch(this.sparqlEndpoint,this.searchString,this.selectedClass?[this.selectedClass.classUri]:[],this.limit,this.offset);this.fetchEntityList=undefined;return this.entityList}async fetchFullCountData(){this.fullCount={loading:true};if(this.fetchFullCount)this.fetchFullCount.promiseWithCancel.cancel();this.fetchFullCount=new v;this.fullCount=await this.fetchFullCount.fetch(this.sparqlEndpoint,this.searchString,this.selectedClass?[this.selectedClass.classUri]:[]);this.fetchFullCount=undefined;return this.fullCount}render(){var t,s,e,a,l;return i(n,null,i("ion-grid",null,i("ion-row",null,i("ion-col",{sizeMd:"0",sizeLg:"6",sizeXl:"3",class:"entity-count-col ion-hide-lg-down"}),i("ion-col",{sizeMd:"12",sizeLg:"6",sizeXl:"9"},i("ion-searchbar",{value:this.searchString,debounce:300,onIonChange:t=>{this.searchString=t.detail.value}}),i("geov-class-select-popup",{class:"ion-hide-lg-up",onSelectionChanged:t=>{this.selectedClass=t.detail.value},ref:t=>{var i;t.initValue=this.selectedClass;t.items=(i=this.classSelect)===null||i===void 0?void 0:i.items}}),i("ion-note",{class:"entity-count-sm entity-count-label"},((t=this.fullCount)===null||t===void 0?void 0:t.loading)?i("ion-skeleton-text",{animated:true,style:{width:"40px"}}):i("span",null,(s=this.fullCount)===null||s===void 0?void 0:s.count," Entities")," "))),i("ion-row",null,i("ion-col",{sizeMd:"0",sizeLg:"6",sizeXl:"3",class:"ion-hide-lg-down"},i("geov-class-radio-group",{onSelectionChanged:t=>{this.selectedClass=t.detail.value},ref:t=>{var i,n;t.initValue=this.selectedClass;t.preferredItems=this.preferredItems;if(this.classUriPrefix)t.uriPrefix=this.classUriPrefix;t.items=(i=this.classSelect)===null||i===void 0?void 0:i.items;t.loading=(n=this.classSelect)===null||n===void 0?void 0:n.loading}})),i("ion-col",{sizeMd:"12",sizeLg:"6",sizeXl:"9"},i("geov-entity-list",{defaultPageSize:this.limit,uriRegex:this.uriRegex,uriReplace:this.uriReplace,ref:t=>{var i,n;t.items=(i=this.entityList)===null||i===void 0?void 0:i.items;t.loading=(n=this.entityList)===null||n===void 0?void 0:n.loading}}),i("ion-item",{class:"paginator-container",lines:"none"},((e=this.fullCount)===null||e===void 0?void 0:e.count)&&!((a=this.fullCount)===null||a===void 0?void 0:a.loading)&&i("geov-paginator",{class:"paginator",onPageChanged:t=>{console.log("onPageChanged");this.offset=t.detail.pageSize*t.detail.pageIndex},pageSize:this.limit,length:(l=this.fullCount)===null||l===void 0?void 0:l.count}))))),i("slot",null))}};f.style=g;export{f as geov_explorer};
//# sourceMappingURL=p-69eb5eb4.entry.js.map