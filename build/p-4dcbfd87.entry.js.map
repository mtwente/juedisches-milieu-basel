{"version":3,"names":["appFooterCss","AppFooter","render","h","Host"],"sources":["src/components/app-footer/app-footer.css?tag=app-footer&encapsulation=shadow","src/components/app-footer/app-footer.tsx"],"sourcesContent":[":host {\n  display: block;\n  position: relative;\n}\n\n.progress-bar {\n  height: 2rem;\n  border-radius: 8px;\n  background-color: var(--ion-color-success);\n  transition: width 2s;\n}\n\n.progress-text {\n  position: absolute;\n  top: 10px;\n  text-align: center;\n  width: 100%;\n}\n","import { Component, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'app-footer',\n  styleUrl: 'app-footer.css',\n  shadow: true,\n})\nexport class AppFooter {\n  render() {\n    // const parts = [state.t1, state.t2, state.t3, state.t4, state.t5, state.t6, state.t7, state.t8, state.t9, state.t10, state.t11, state.t12];\n    // const resolved = parts.filter(t => t).length;\n    // const total = parts.length;\n    // const percentResolved = (resolved / total) * 100;\n    return (\n      <Host>\n        {/* <ion-footer translucent={true}>\n          <ion-toolbar>\n            <div class=\"progress-bar\" style={{ width: `${percentResolved}%` }}></div>\n            <div class=\"progress-text\">\n              Gel√∂st: {resolved} / {total}\n            </div>\n          </ion-toolbar>\n        </ion-footer> */}\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAe,0N,MCORC,EAAS,M,yBACpB,MAAAC,GAKE,OACEC,EAACC,EAAI,K"}