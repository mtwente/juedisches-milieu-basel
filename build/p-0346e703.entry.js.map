{"version":3,"names":["baseAnimation","isIos","createAnimation","duration","menuOverlayAnimation","menu","closedX","openedX","width","menuAnimation","backdropAnimation","isEndSide","addElement","menuInnerEl","fromTo","mode","getIonMode","opacity","backdropEl","addAnimation","menuPushAnimation","contentOpenedX","menuClosedX","contentAnimation","contentEl","menuRevealAnimation","contentOpen","createMenuController","menuAnimations","Map","menus","open","async","menuEl","get","close","undefined","getOpen","toggle","enable","shouldEnable","disabled","swipeGesture","isOpen","isEnabled","waitUntilReady","menuRef","find","m","side","menuId","length","el","_getOpenSync","getMenus","getMenusSync","isAnimating","isAnimatingSync","registerAnimation","name","animation","set","_register","indexOf","_setActiveMenu","push","_unregister","index","splice","filter","forEach","_setOpen","shouldOpen","animated","openedMenu","setOpen","_createAnimation","type","menuCmp","animationBuilder","Error","_isOpen","map","some","predicate","instance","Promise","all","Array","from","document","querySelectorAll","resolve","componentOnReady","addEventListener","ev","openMenu","detail","register","MENU_BACK_BUTTON_PRIORITY","menuController","appDialogRestartCss","AppDialogRestart","this","confirmRestartModal","present","render","h","Host","ref","e","slot","onClick","dismiss","restart","class","reset","routerProvider","ionRouterElement","animationBuilderFadePages","appMenuCss","AppMenu","contentId","id","appPages","appPage","t","state","key","autoHide","location","pathname","url","href","routerDirection","lines","color","icon","checkmarkCircleOutline","src","getAssetPath","title","informationCircleOutline","button","refreshOutline","backButtonIosCss","backButtonMdCss","BackButton","constructor","hostRef","inheritedAttributes","nav","closest","preventDefault","canGoBack","pop","routerAnimation","skipIfBusy","openURL","defaultHref","text","componentWillLoad","inheritAriaAttributes","config","backButtonIcon","chevronBack","arrowBackSharp","backButtonText","defaultBackButtonText","hasIconOnly","rippleType","showBackButton","ariaLabel","createColorClasses","hostContext","part","lazy","listHeaderIosCss","listHeaderMdCss","ListHeader","menuIosCss","menuMdCss","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","focusableQueryString","Menu","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","handleFocus","lastOverlay","getOverlay","contains","trapKeyboardFocus","isPaneVisible","maxEdgeStart","typeChanged","oldType","classList","remove","add","removeAttribute","disabledChanged","updateState","ionMenuChange","emit","sideChanged","isEnd","swipeGestureChanged","connectedCallback","customElements","whenDefined","content","getElementById","console","error","gesture","import","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentDidLoad","disconnectedCallback","destroy","onSplitPaneChanged","isPane","onBackdropClick","timeStamp","shouldClose","composedPath","includes","stopPropagation","onKeydown","isActive","_isActive","focusFirstDescendant","firstInput","querySelector","focus","focusLastDescendant","inputs","lastInput","doc","target","lastFocus","activeElement","beforeAnimation","loadAnimation","startAnimation","afterAnimation","offsetWidth","getBoolean","fill","isReversed","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","isModalPresented","checkEdgeSide","window","currentX","assert","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","getTimeGivenProgression","clamp","playTo","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","ionWillOpen","ionWillClose","_a","unblock","ionDidOpen","focusedMenu","stop","ionDidClose","removeEventListener","forceClosing","role","tappable","Math","max","win","posX","innerWidth","updateVisibility","menuButtonIosCss","menuButtonMdCss","MenuButton","visible","visibilityChanged","menuIcon","menuOutline","menuSharp","hidden","attrs","Object","assign","menuToggleCss","MenuToggle"],"sources":["node_modules/@ionic/core/dist/collection/utils/menu-controller/animations/base.js","node_modules/@ionic/core/dist/collection/utils/menu-controller/animations/overlay.js","node_modules/@ionic/core/dist/collection/utils/menu-controller/animations/push.js","node_modules/@ionic/core/dist/collection/utils/menu-controller/animations/reveal.js","node_modules/@ionic/core/dist/collection/utils/menu-controller/index.js","src/components/app-dialog-restart/app-dialog-restart.css?tag=app-dialog-restart&encapsulation=shadow","src/components/app-dialog-restart/app-dialog-restart.tsx","src/components/app-menu/app-menu.css?tag=app-menu","src/components/app-menu/app-menu.tsx","node_modules/@ionic/core/dist/collection/components/back-button/back-button.ios.css?tag=ion-back-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/back-button/back-button.md.css?tag=ion-back-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/back-button/back-button.js","node_modules/@ionic/core/dist/collection/components/list-header/list-header.ios.css?tag=ion-list-header&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/list-header/list-header.md.css?tag=ion-list-header&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/list-header/list-header.js","node_modules/@ionic/core/dist/collection/components/menu/menu.ios.css?tag=ion-menu&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.md.css?tag=ion-menu&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu/menu.js","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle-util.js","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.ios.css?tag=ion-menu-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.md.css?tag=ion-menu-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-button/menu-button.js","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.css?tag=ion-menu-toggle&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/menu-toggle/menu-toggle.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from '../../animation/animation';\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\nexport const baseAnimation = (isIos) => {\n  // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n  // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n  /**\n   * \"Apply the sharp curve to items temporarily leaving the screen that may return\n   * from the same exit point. When they return, use the deceleration curve. On mobile,\n   * this transition typically occurs over 300ms\" -- MD Motion Guide\n   */\n  return createAnimation().duration(isIos ? 400 : 300);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getIonMode } from '../../../global/ionic-global';\nimport { createAnimation } from '../../animation/animation';\nimport { baseAnimation } from './base';\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\nexport const menuOverlayAnimation = (menu) => {\n  let closedX;\n  let openedX;\n  const width = menu.width + 8;\n  const menuAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  if (menu.isEndSide) {\n    // right side\n    closedX = width + 'px';\n    openedX = '0px';\n  }\n  else {\n    // left side\n    closedX = -width + 'px';\n    openedX = '0px';\n  }\n  menuAnimation.addElement(menu.menuInnerEl).fromTo('transform', `translateX(${closedX})`, `translateX(${openedX})`);\n  const mode = getIonMode(menu);\n  const isIos = mode === 'ios';\n  const opacity = isIos ? 0.2 : 0.25;\n  backdropAnimation.addElement(menu.backdropEl).fromTo('opacity', 0.01, opacity);\n  return baseAnimation(isIos).addAnimation([menuAnimation, backdropAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getIonMode } from '../../../global/ionic-global';\nimport { createAnimation } from '../../animation/animation';\nimport { baseAnimation } from './base';\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\nexport const menuPushAnimation = (menu) => {\n  let contentOpenedX;\n  let menuClosedX;\n  const mode = getIonMode(menu);\n  const width = menu.width;\n  if (menu.isEndSide) {\n    contentOpenedX = -width + 'px';\n    menuClosedX = width + 'px';\n  }\n  else {\n    contentOpenedX = width + 'px';\n    menuClosedX = -width + 'px';\n  }\n  const menuAnimation = createAnimation()\n    .addElement(menu.menuInnerEl)\n    .fromTo('transform', `translateX(${menuClosedX})`, 'translateX(0px)');\n  const contentAnimation = createAnimation()\n    .addElement(menu.contentEl)\n    .fromTo('transform', 'translateX(0px)', `translateX(${contentOpenedX})`);\n  const backdropAnimation = createAnimation().addElement(menu.backdropEl).fromTo('opacity', 0.01, 0.32);\n  return baseAnimation(mode === 'ios').addAnimation([menuAnimation, contentAnimation, backdropAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getIonMode } from '../../../global/ionic-global';\nimport { createAnimation } from '../../animation/animation';\nimport { baseAnimation } from './base';\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\nexport const menuRevealAnimation = (menu) => {\n  const mode = getIonMode(menu);\n  const openedX = menu.width * (menu.isEndSide ? -1 : 1) + 'px';\n  const contentOpen = createAnimation()\n    .addElement(menu.contentEl) // REVIEW\n    .fromTo('transform', 'translateX(0px)', `translateX(${openedX})`);\n  return baseAnimation(mode === 'ios').addAnimation(contentOpen);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { MENU_BACK_BUTTON_PRIORITY } from '../hardware-back-button';\nimport { componentOnReady } from '../helpers';\nimport { menuOverlayAnimation } from './animations/overlay';\nimport { menuPushAnimation } from './animations/push';\nimport { menuRevealAnimation } from './animations/reveal';\nconst createMenuController = () => {\n  const menuAnimations = new Map();\n  const menus = [];\n  const open = async (menu) => {\n    const menuEl = await get(menu);\n    if (menuEl) {\n      return menuEl.open();\n    }\n    return false;\n  };\n  const close = async (menu) => {\n    const menuEl = await (menu !== undefined ? get(menu) : getOpen());\n    if (menuEl !== undefined) {\n      return menuEl.close();\n    }\n    return false;\n  };\n  const toggle = async (menu) => {\n    const menuEl = await get(menu);\n    if (menuEl) {\n      return menuEl.toggle();\n    }\n    return false;\n  };\n  const enable = async (shouldEnable, menu) => {\n    const menuEl = await get(menu);\n    if (menuEl) {\n      menuEl.disabled = !shouldEnable;\n    }\n    return menuEl;\n  };\n  const swipeGesture = async (shouldEnable, menu) => {\n    const menuEl = await get(menu);\n    if (menuEl) {\n      menuEl.swipeGesture = shouldEnable;\n    }\n    return menuEl;\n  };\n  const isOpen = async (menu) => {\n    if (menu != null) {\n      const menuEl = await get(menu);\n      // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n      return menuEl !== undefined && menuEl.isOpen();\n    }\n    else {\n      const menuEl = await getOpen();\n      return menuEl !== undefined;\n    }\n  };\n  const isEnabled = async (menu) => {\n    const menuEl = await get(menu);\n    if (menuEl) {\n      return !menuEl.disabled;\n    }\n    return false;\n  };\n  const get = async (menu) => {\n    await waitUntilReady();\n    if (menu === 'start' || menu === 'end') {\n      // there could be more than one menu on the same side\n      // so first try to get the enabled one\n      const menuRef = find((m) => m.side === menu && !m.disabled);\n      if (menuRef) {\n        return menuRef;\n      }\n      // didn't find a menu side that is enabled\n      // so try to get the first menu side found\n      return find((m) => m.side === menu);\n    }\n    else if (menu != null) {\n      // the menuId was not left or right\n      // so try to get the menu by its \"id\"\n      return find((m) => m.menuId === menu);\n    }\n    // return the first enabled menu\n    const menuEl = find((m) => !m.disabled);\n    if (menuEl) {\n      return menuEl;\n    }\n    // get the first menu in the array, if one exists\n    return menus.length > 0 ? menus[0].el : undefined;\n  };\n  /**\n   * Get the instance of the opened menu. Returns `null` if a menu is not found.\n   */\n  const getOpen = async () => {\n    await waitUntilReady();\n    return _getOpenSync();\n  };\n  /**\n   * Get all menu instances.\n   */\n  const getMenus = async () => {\n    await waitUntilReady();\n    return getMenusSync();\n  };\n  /**\n   * Get whether or not a menu is animating. Returns `true` if any\n   * menu is currently animating.\n   */\n  const isAnimating = async () => {\n    await waitUntilReady();\n    return isAnimatingSync();\n  };\n  const registerAnimation = (name, animation) => {\n    menuAnimations.set(name, animation);\n  };\n  const _register = (menu) => {\n    if (menus.indexOf(menu) < 0) {\n      if (!menu.disabled) {\n        _setActiveMenu(menu);\n      }\n      menus.push(menu);\n    }\n  };\n  const _unregister = (menu) => {\n    const index = menus.indexOf(menu);\n    if (index > -1) {\n      menus.splice(index, 1);\n    }\n  };\n  const _setActiveMenu = (menu) => {\n    // if this menu should be enabled\n    // then find all the other menus on this same side\n    // and automatically disable other same side menus\n    const side = menu.side;\n    menus.filter((m) => m.side === side && m !== menu).forEach((m) => (m.disabled = true));\n  };\n  const _setOpen = async (menu, shouldOpen, animated) => {\n    if (isAnimatingSync()) {\n      return false;\n    }\n    if (shouldOpen) {\n      const openedMenu = await getOpen();\n      if (openedMenu && menu.el !== openedMenu) {\n        await openedMenu.setOpen(false, false);\n      }\n    }\n    return menu._setOpen(shouldOpen, animated);\n  };\n  const _createAnimation = (type, menuCmp) => {\n    const animationBuilder = menuAnimations.get(type); // TODO(FW-2832): type\n    if (!animationBuilder) {\n      throw new Error('animation not registered');\n    }\n    const animation = animationBuilder(menuCmp);\n    return animation;\n  };\n  const _getOpenSync = () => {\n    return find((m) => m._isOpen);\n  };\n  const getMenusSync = () => {\n    return menus.map((menu) => menu.el);\n  };\n  const isAnimatingSync = () => {\n    return menus.some((menu) => menu.isAnimating);\n  };\n  const find = (predicate) => {\n    const instance = menus.find(predicate);\n    if (instance !== undefined) {\n      return instance.el;\n    }\n    return undefined;\n  };\n  const waitUntilReady = () => {\n    return Promise.all(Array.from(document.querySelectorAll('ion-menu')).map((menu) => new Promise((resolve) => componentOnReady(menu, resolve))));\n  };\n  registerAnimation('reveal', menuRevealAnimation);\n  registerAnimation('push', menuPushAnimation);\n  registerAnimation('overlay', menuOverlayAnimation);\n  if (typeof document !== 'undefined') {\n    document.addEventListener('ionBackButton', (ev) => {\n      // TODO(FW-2832): type\n      const openMenu = _getOpenSync();\n      if (openMenu) {\n        ev.detail.register(MENU_BACK_BUTTON_PRIORITY, () => {\n          return openMenu.close();\n        });\n      }\n    });\n  }\n  return {\n    registerAnimation,\n    get,\n    getMenus,\n    getOpen,\n    isEnabled,\n    swipeGesture,\n    isAnimating,\n    isOpen,\n    enable,\n    toggle,\n    close,\n    open,\n    _getOpenSync,\n    _createAnimation,\n    _register,\n    _unregister,\n    _setOpen,\n    _setActiveMenu,\n  };\n};\nexport const menuController = /*@__PURE__*/ createMenuController();\n",":host {\n  display: block;\n}\n","import { Component, Host, Method, h } from '@stencil/core';\nimport { animationBuilderFadePages } from '../../global/page-animation';\nimport routerProvider from '../../global/router-provider';\nimport { reset } from '../../global/store';\n\n@Component({\n  tag: 'app-dialog-restart',\n  styleUrl: 'app-dialog-restart.css',\n  shadow: true,\n})\nexport class AppDialogRestart {\n  confirmRestartModal: HTMLIonModalElement;\n  @Method() async open() {\n    await this.confirmRestartModal.present();\n  }\n\n  render() {\n    return (\n      <Host>\n        <ion-modal ref={e => (this.confirmRestartModal = e)}>\n          <ion-header>\n            <ion-toolbar>\n              <ion-buttons slot=\"start\">\n                <ion-button onClick={() => this.confirmRestartModal.dismiss()}>Nein</ion-button>\n              </ion-buttons>\n              <ion-title>Von vorne beginnen?</ion-title>\n              <ion-buttons slot=\"end\">\n                <ion-button onClick={() => this.restart()}>Ja</ion-button>\n              </ion-buttons>\n            </ion-toolbar>\n          </ion-header>\n          <ion-content class=\"ion-padding\">Der Spielstand wird gelöscht und das Puzzle beginnt erneut.</ion-content>\n        </ion-modal>\n      </Host>\n    );\n  }\n\n  private async restart() {\n    await this.confirmRestartModal.dismiss();\n    reset();\n    await routerProvider.ionRouterElement.push('/intro', 'forward', animationBuilderFadePages);\n  }\n}\n","ion-menu ion-content {\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\nion-menu.md ion-content {\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --padding-top: 20px;\n  --padding-bottom: 20px;\n}\n\nion-menu.md ion-list {\n  padding: 20px 0;\n}\n\nion-menu.md ion-note {\n  margin-bottom: 30px;\n}\n\nion-menu.md ion-list-header,\nion-menu.md ion-note {\n  padding-left: 10px;\n}\n\nion-menu.md ion-list#inbox-list {\n  border-bottom: 1px solid var(--ion-color-step-150, #d7d8da);\n}\n\nion-menu.md ion-list#inbox-list ion-list-header {\n  font-size: 22px;\n  font-weight: 600;\n  min-height: 20px;\n}\n\nion-menu.md ion-list#labels-list ion-list-header {\n  font-size: 16px;\n  margin-bottom: 18px;\n  min-height: 26px;\n}\n\nion-menu.md ion-item {\n  --padding-start: 10px;\n  --padding-end: 10px;\n  border-radius: 4px;\n}\n\nion-menu.md ion-item.selected {\n  --background: rgba(var(--ion-color-primary-rgb), 0.14);\n}\n\nion-menu.md ion-item.selected ion-icon {\n  color: var(--ion-color-primary);\n}\n\nion-menu.md ion-item ion-icon {\n  color: #616e7e;\n}\n\nion-menu.md ion-item ion-label {\n  font-weight: 500;\n}\n\nion-menu.ios ion-content {\n  --padding-bottom: 20px;\n}\n\nion-menu.ios ion-list {\n  padding: 20px 0 0 0;\n}\n\nion-menu.ios ion-note {\n  line-height: 24px;\n  margin-bottom: 20px;\n}\n\nion-menu.ios ion-item {\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --min-height: 50px;\n}\n\nion-menu.ios ion-item ion-icon {\n  font-size: 24px;\n  color: #73849a;\n}\n\nion-menu.ios ion-item .selected ion-icon {\n  color: var(--ion-color-primary);\n}\n\nion-menu.ios ion-list#labels-list ion-list-header {\n  margin-bottom: 8px;\n}\n\nion-menu.ios ion-list-header,\nion-menu.ios ion-note {\n  padding-left: 16px;\n  padding-right: 16px;\n}\n\nion-menu.ios ion-note {\n  margin-bottom: 8px;\n}\n\nion-note {\n  display: inline-block;\n  font-size: 16px;\n  color: var(--ion-color-medium-shade);\n}\n\nion-item.selected {\n  --color: var(--ion-color-primary);\n}\n","import { Component, getAssetPath, h } from '@stencil/core';\nimport { checkmarkCircleOutline, informationCircleOutline, refreshOutline } from 'ionicons/icons';\nimport { appPages } from '../../global/appPages';\nimport { state } from '../../global/store';\n\n@Component({\n  tag: 'app-menu',\n  styleUrl: 'app-menu.css',\n  // shadow: true,\n})\nexport class AppMenu {\n  confirmRestartModal: HTMLAppDialogRestartElement;\n\n  render() {\n    return (\n      <ion-menu contentId=\"main-menu\" type=\"overlay\">\n        <ion-content>\n          <ion-list id=\"inbox-list\">\n            <ion-list-header>Inhalt</ion-list-header>\n            <ion-note>Eine Geschichte – 12 Teile</ion-note>\n\n            {appPages.map((appPage, index) => {\n              const t = state[appPage.key];\n              return (\n                <ion-menu-toggle key={index} autoHide={false}>\n                  <ion-item\n                    disabled={t === 'locked' || t === 'highlighted'}\n                    class={location.pathname === appPage.url ? 'selected' : ''}\n                    href={appPage.url}\n                    routerDirection=\"forward\"\n                    lines=\"none\"\n                    detail={false}\n                  >\n                    {t === 'done' ? (\n                      <ion-icon color=\"primary\" aria-hidden=\"true\" slot=\"start\" icon={checkmarkCircleOutline} />\n                    ) : (\n                      <ion-icon color=\"primary\" aria-hidden=\"true\" slot=\"start\" src={getAssetPath('../../assets/icons/hexagon-outline.svg')} />\n                    )}\n                    <ion-label>{appPage.title}</ion-label>\n                  </ion-item>\n                </ion-menu-toggle>\n              );\n            })}\n          </ion-list>\n\n          <ion-list id=\"labels-list\">\n            {/* <ion-list-header>Impressum</ion-list-header> */}\n            <ion-note>Rund um diese App</ion-note>\n            <ion-menu-toggle autoHide={false}>\n              <ion-item lines=\"none\" href={'/about-us'}>\n                <ion-icon color=\"primary\" aria-hidden=\"true\" slot=\"start\" icon={informationCircleOutline} />\n                <ion-label>Impressum</ion-label>\n              </ion-item>\n            </ion-menu-toggle>\n            <ion-item lines=\"none\" button detail={false} onClick={() => this.confirmRestartModal.open()}>\n              <ion-icon color=\"primary\" aria-hidden=\"true\" slot=\"start\" icon={refreshOutline} />\n              <ion-label>Neustart ...</ion-label>\n            </ion-item>\n            <app-dialog-restart ref={e => (this.confirmRestartModal = e)}></app-dialog-restart>\n          </ion-list>\n        </ion-content>\n      </ion-menu>\n    );\n  }\n}\n",":host {\n  /**\n    * @prop --background: Background of the button\n    * @prop --background-focused: Background of the button when focused with the tab key\n    * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n    * @prop --background-hover: Background of the button on hover\n    * @prop --background-hover-opacity: Opacity of the background on hover\n    *\n    * @prop --color: Text color of the button\n    * @prop --color-focused: Text color of the button when focused with the tab key\n    * @prop --color-hover: Text color of the button on hover\n    *\n    * @prop --min-width: Minimum width of the button\n    * @prop --min-height: Minimum height of the button\n    *\n    * @prop --transition: Transition of the button\n    *\n    * @prop --border-radius: Border radius of the button\n    *\n    * @prop --ripple-color: Color of the button ripple effect\n    *\n    * @prop --opacity: Opacity of the button\n    *\n    * @prop --margin-top: Top margin of the button\n    * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button\n    * @prop --margin-bottom: Bottom margin of the button\n    * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button\n    *\n    * @prop --padding-top: Top padding of the button\n    * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n    * @prop --padding-bottom: Bottom padding of the button\n    * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n    *\n    * @prop --icon-margin-top: Top margin of the button icon\n    * @prop --icon-margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon\n    * @prop --icon-margin-bottom: Bottom margin of the button icon\n    * @prop --icon-margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon\n    *\n    * @prop --icon-padding-top: Top padding of the button icon\n    * @prop --icon-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon\n    * @prop --icon-padding-bottom: Bottom padding of the button icon\n    * @prop --icon-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon\n    *\n    * @prop --icon-font-size: Font size of the button icon\n    * @prop --icon-font-weight: Font weight of the button icon\n    */\n  --background: transparent;\n  --color-focused: currentColor;\n  --color-hover: currentColor;\n  --icon-margin-top: 0;\n  --icon-margin-bottom: 0;\n  --icon-padding-top: 0;\n  --icon-padding-end: 0;\n  --icon-padding-bottom: 0;\n  --icon-padding-start: 0;\n  --margin-top: 0;\n  --margin-end: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --min-width: auto;\n  --min-height: auto;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --opacity: 1;\n  --ripple-color: currentColor;\n  --transition: background-color, opacity 100ms linear;\n  display: none;\n  min-width: var(--min-width);\n  min-height: var(--min-height);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  user-select: none;\n  font-kerning: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.show-back-button) {\n  display: block;\n}\n\n:host(.back-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: var(--margin-start);\n  margin-inline-start: var(--margin-start);\n  -webkit-margin-end: var(--margin-end);\n  margin-inline-end: var(--margin-end);\n  margin-top: var(--margin-top);\n  margin-bottom: var(--margin-bottom);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  -webkit-padding-start: var(--icon-padding-start);\n  padding-inline-start: var(--icon-padding-start);\n  -webkit-padding-end: var(--icon-padding-end);\n  padding-inline-end: var(--icon-padding-end);\n  padding-top: var(--icon-padding-top);\n  padding-bottom: var(--icon-padding-bottom);\n  -webkit-margin-start: var(--icon-margin-start);\n  margin-inline-start: var(--icon-margin-start);\n  -webkit-margin-end: var(--icon-margin-end);\n  margin-inline-end: var(--icon-margin-end);\n  margin-top: var(--icon-margin-top);\n  margin-bottom: var(--icon-margin-bottom);\n  display: inherit;\n  font-size: var(--icon-font-size);\n  font-weight: var(--icon-font-weight);\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-color.ion-focused) .button-native {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n}\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-hover: transparent;\n  --background-hover-opacity: 1;\n  --background-focused: currentColor;\n  --background-focused-opacity: .1;\n  --border-radius: 4px;\n  --color: var(--ion-color-primary, #3880ff);\n  --icon-margin-end: 1px;\n  --icon-margin-start: -4px;\n  --icon-font-size: 1.6em;\n  --min-height: 32px;\n  font-size: 17px;\n}\n\n.button-native {\n  transform: translateZ(0);\n  overflow: visible;\n  z-index: 99;\n}\n\n:host(.ion-activated) .button-native {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    opacity: 0.6;\n  }\n}",":host {\n  /**\n    * @prop --background: Background of the button\n    * @prop --background-focused: Background of the button when focused with the tab key\n    * @prop --background-focused-opacity: Opacity of the button background when focused with the tab key\n    * @prop --background-hover: Background of the button on hover\n    * @prop --background-hover-opacity: Opacity of the background on hover\n    *\n    * @prop --color: Text color of the button\n    * @prop --color-focused: Text color of the button when focused with the tab key\n    * @prop --color-hover: Text color of the button on hover\n    *\n    * @prop --min-width: Minimum width of the button\n    * @prop --min-height: Minimum height of the button\n    *\n    * @prop --transition: Transition of the button\n    *\n    * @prop --border-radius: Border radius of the button\n    *\n    * @prop --ripple-color: Color of the button ripple effect\n    *\n    * @prop --opacity: Opacity of the button\n    *\n    * @prop --margin-top: Top margin of the button\n    * @prop --margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button\n    * @prop --margin-bottom: Bottom margin of the button\n    * @prop --margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button\n    *\n    * @prop --padding-top: Top padding of the button\n    * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n    * @prop --padding-bottom: Bottom padding of the button\n    * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n    *\n    * @prop --icon-margin-top: Top margin of the button icon\n    * @prop --icon-margin-end: Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon\n    * @prop --icon-margin-bottom: Bottom margin of the button icon\n    * @prop --icon-margin-start: Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon\n    *\n    * @prop --icon-padding-top: Top padding of the button icon\n    * @prop --icon-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon\n    * @prop --icon-padding-bottom: Bottom padding of the button icon\n    * @prop --icon-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon\n    *\n    * @prop --icon-font-size: Font size of the button icon\n    * @prop --icon-font-weight: Font weight of the button icon\n    */\n  --background: transparent;\n  --color-focused: currentColor;\n  --color-hover: currentColor;\n  --icon-margin-top: 0;\n  --icon-margin-bottom: 0;\n  --icon-padding-top: 0;\n  --icon-padding-end: 0;\n  --icon-padding-bottom: 0;\n  --icon-padding-start: 0;\n  --margin-top: 0;\n  --margin-end: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --min-width: auto;\n  --min-height: auto;\n  --padding-top: 0;\n  --padding-end: 0;\n  --padding-bottom: 0;\n  --padding-start: 0;\n  --opacity: 1;\n  --ripple-color: currentColor;\n  --transition: background-color, opacity 100ms linear;\n  display: none;\n  min-width: var(--min-width);\n  min-height: var(--min-height);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  user-select: none;\n  font-kerning: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.show-back-button) {\n  display: block;\n}\n\n:host(.back-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: var(--margin-start);\n  margin-inline-start: var(--margin-start);\n  -webkit-margin-end: var(--margin-end);\n  margin-inline-end: var(--margin-end);\n  margin-top: var(--margin-top);\n  margin-bottom: var(--margin-bottom);\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n  transition: var(--transition);\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  -webkit-padding-start: var(--icon-padding-start);\n  padding-inline-start: var(--icon-padding-start);\n  -webkit-padding-end: var(--icon-padding-end);\n  padding-inline-end: var(--icon-padding-end);\n  padding-top: var(--icon-padding-top);\n  padding-bottom: var(--icon-padding-bottom);\n  -webkit-margin-start: var(--icon-margin-start);\n  margin-inline-start: var(--icon-margin-start);\n  -webkit-margin-end: var(--icon-margin-end);\n  margin-inline-end: var(--icon-margin-end);\n  margin-top: var(--icon-margin-top);\n  margin-bottom: var(--icon-margin-bottom);\n  display: inherit;\n  font-size: var(--icon-font-size);\n  font-weight: var(--icon-font-weight);\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.ion-color.ion-focused) .button-native {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n}\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --border-radius: 4px;\n  --background-focused: currentColor;\n  --background-focused-opacity: .12;\n  --background-hover: currentColor;\n  --background-hover-opacity: 0.04;\n  --color: currentColor;\n  --icon-margin-end: 0;\n  --icon-margin-start: 0;\n  --icon-font-size: 24px;\n  --icon-font-weight: normal;\n  --min-height: 32px;\n  --min-width: 44px;\n  --padding-start: 12px;\n  --padding-end: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n}\n\n:host(.back-button-has-icon-only) {\n  --border-radius: 50%;\n  min-width: 48px;\n  height: 48px;\n}\n\n.button-native {\n  box-shadow: none;\n}\n\n.button-text {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 4px;\n  padding-inline-end: 4px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\nion-icon {\n  line-height: 0.67;\n  text-align: start;\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}\n:host(.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-base);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { arrowBackSharp, chevronBack } from 'ionicons/icons';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button element that wraps all child elements.\n * @part icon - The back button icon (uses ion-icon).\n * @part text - The back button text.\n */\nexport class BackButton {\n  constructor() {\n    this.inheritedAttributes = {};\n    this.onClick = async (ev) => {\n      const nav = this.el.closest('ion-nav');\n      ev.preventDefault();\n      if (nav && (await nav.canGoBack())) {\n        return nav.pop({ animationBuilder: this.routerAnimation, skipIfBusy: true });\n      }\n      return openURL(this.defaultHref, ev, 'back', this.routerAnimation);\n    };\n    this.color = undefined;\n    this.defaultHref = undefined;\n    this.disabled = false;\n    this.icon = undefined;\n    this.text = undefined;\n    this.type = 'button';\n    this.routerAnimation = undefined;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n    if (this.defaultHref === undefined) {\n      this.defaultHref = config.get('backButtonDefaultHref');\n    }\n  }\n  get backButtonIcon() {\n    const icon = this.icon;\n    if (icon != null) {\n      // icon is set on the component or by the config\n      return icon;\n    }\n    if (getIonMode(this) === 'ios') {\n      // default ios back button icon\n      return config.get('backButtonIcon', chevronBack);\n    }\n    // default md back button icon\n    return config.get('backButtonIcon', arrowBackSharp);\n  }\n  get backButtonText() {\n    const defaultBackButtonText = getIonMode(this) === 'ios' ? 'Back' : null;\n    return this.text != null ? this.text : config.get('backButtonText', defaultBackButtonText);\n  }\n  get hasIconOnly() {\n    return this.backButtonIcon && !this.backButtonText;\n  }\n  get rippleType() {\n    // If the button only has an icon we use the unbounded\n    // \"circular\" ripple effect\n    if (this.hasIconOnly) {\n      return 'unbounded';\n    }\n    return 'bounded';\n  }\n  render() {\n    const { color, defaultHref, disabled, type, hasIconOnly, backButtonIcon, backButtonText, icon, inheritedAttributes, } = this;\n    const showBackButton = defaultHref !== undefined;\n    const mode = getIonMode(this);\n    const ariaLabel = inheritedAttributes['aria-label'] || backButtonText || 'back';\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(color, {\n        [mode]: true,\n        button: true,\n        'back-button-disabled': disabled,\n        'back-button-has-icon-only': hasIconOnly,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true,\n        'show-back-button': showBackButton,\n      }) }, h(\"button\", { type: type, disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }, h(\"span\", { class: \"button-inner\" }, backButtonIcon && (h(\"ion-icon\", { part: \"icon\", icon: backButtonIcon, \"aria-hidden\": \"true\", lazy: false, \"flip-rtl\": icon === undefined })), backButtonText && (h(\"span\", { part: \"text\", \"aria-hidden\": \"true\", class: \"button-text\" }, backButtonText))), mode === 'md' && h(\"ion-ripple-effect\", { type: this.rippleType }))));\n  }\n  static get is() { return \"ion-back-button\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"back-button.ios.scss\"],\n      \"md\": [\"back-button.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"back-button.ios.css\"],\n      \"md\": [\"back-button.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"defaultHref\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The url to navigate back to by default when there is no history.\"\n        },\n        \"attribute\": \"default-href\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the button.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"icon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The built-in named SVG icon name or the exact `src` of an SVG file\\nto use for the back button.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"text\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display in the back button.\"\n        },\n        \"attribute\": \"text\",\n        \"reflect\": false\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'submit' | 'reset' | 'button'\",\n          \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The type of the button.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false,\n        \"defaultValue\": \"'button'\"\n      },\n      \"routerAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder | undefined\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page.\"\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n",":host {\n  /**\n   * @prop --background: Background of the list header\n   * @prop --color: Color of the list header text\n   *\n   * @prop --border-color: Color of the list header border\n   * @prop --border-width: Width of the list header border\n   * @prop --border-style: Style of the list header border\n   *\n   * @prop --inner-border-width: Width of the inner list header border\n   */\n  --border-style: solid;\n  --border-width: 0;\n  --inner-border-width: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 40px;\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  color: var(--color);\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n.list-header-inner {\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  flex: 1 1 auto;\n}\n\n:host(.list-header-lines-inset),\n:host(.list-header-lines-none) {\n  --border-width: 0;\n}\n\n:host(.list-header-lines-full),\n:host(.list-header-lines-none) {\n  --inner-border-width: 0;\n}\n\n:host {\n  --background: transparent;\n  --color: var(--ion-color-step-850, #262626);\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));\n  -webkit-padding-start: calc(var(--ion-safe-area-left, 0px) + 16px);\n  padding-inline-start: calc(var(--ion-safe-area-left, 0px) + 16px);\n  position: relative;\n  align-items: flex-end;\n  font-size: 22px;\n  font-weight: 700;\n  letter-spacing: 0;\n}\n\n::slotted(ion-button),\n::slotted(ion-label) {\n  margin-top: 29px;\n  margin-bottom: 6px;\n}\n\n::slotted(ion-button) {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  -webkit-margin-start: 3px;\n  margin-inline-start: 3px;\n  -webkit-margin-end: 3px;\n  margin-inline-end: 3px;\n  min-height: 1.4em;\n}\n\n:host(.list-header-lines-full) {\n  --border-width: 0 0 0.55px 0;\n}\n\n:host(.list-header-lines-inset) {\n  --inner-border-width: 0 0 0.55px 0;\n}",":host {\n  /**\n   * @prop --background: Background of the list header\n   * @prop --color: Color of the list header text\n   *\n   * @prop --border-color: Color of the list header border\n   * @prop --border-width: Width of the list header border\n   * @prop --border-style: Style of the list header border\n   *\n   * @prop --inner-border-width: Width of the inner list header border\n   */\n  --border-style: solid;\n  --border-width: 0;\n  --inner-border-width: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 40px;\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  color: var(--color);\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n.list-header-inner {\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  flex: 1 1 auto;\n}\n\n:host(.list-header-lines-inset),\n:host(.list-header-lines-none) {\n  --border-width: 0;\n}\n\n:host(.list-header-lines-full),\n:host(.list-header-lines-none) {\n  --inner-border-width: 0;\n}\n\n:host {\n  --background: transparent;\n  --color: var(--ion-text-color, #000);\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));\n  -webkit-padding-start: calc(var(--ion-safe-area-left, 0) + 16px);\n  padding-inline-start: calc(var(--ion-safe-area-left, 0) + 16px);\n  min-height: 45px;\n  font-size: 14px;\n}\n\n:host(.list-header-lines-full) {\n  --border-width: 0 0 1px 0;\n}\n\n:host(.list-header-lines-inset) {\n  --inner-border-width: 0 0 1px 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from '../../global/ionic-global';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class ListHeader {\n  constructor() {\n    this.color = undefined;\n    this.lines = undefined;\n  }\n  render() {\n    const { lines } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n        [`list-header-lines-${lines}`]: lines !== undefined,\n      }) }, h(\"div\", { class: \"list-header-inner\" }, h(\"slot\", null))));\n  }\n  static get is() { return \"ion-list-header\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"list-header.ios.scss\"],\n      \"md\": [\"list-header.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"list-header.ios.css\"],\n      \"md\": [\"list-header.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"lines\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'full' | 'inset' | 'none'\",\n          \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"How the bottom border should be displayed on the list header.\"\n        },\n        \"attribute\": \"lines\",\n        \"reflect\": false\n      }\n    };\n  }\n}\n",":host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.menu-side-start) .menu-inner {\n    inset-inline-start: 0;\n    inset-inline-end: auto;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.menu-side-start) .menu-inner {\n    left: 0;\n    right: auto;\n  }\n  :host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n    left: unset;\n    right: unset;\n    left: auto;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.menu-side-start) .menu-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.menu-side-end) .menu-inner {\n    inset-inline-start: auto;\n    inset-inline-end: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.menu-side-end) .menu-inner {\n    left: auto;\n    right: 0;\n  }\n  :host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n    left: unset;\n    right: unset;\n    left: 0;\n    right: auto;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.menu-side-end) .menu-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: 0;\n      right: auto;\n    }\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n:host(.menu-pane-visible) {\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  /* stylelint-disable declaration-no-important */\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  display: hidden !important;\n  /* stylelint-enable declaration-no-important */\n}\n\n:host(.menu-type-push) {\n  z-index: 1000;\n}\n\n:host(.menu-type-push) .show-backdrop {\n  display: block;\n}",":host {\n  /**\n   * @prop --background: Background of the menu\n   *\n   * @prop --min-width: Minimum width of the menu\n   * @prop --width: Width of the menu\n   * @prop --max-width: Maximum width of the menu\n   *\n   * @prop --min-height: Minimum height of the menu\n   * @prop --height: Height of the menu\n   * @prop --max-height: Maximum height of the menu\n   */\n  --width: 304px;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --background: var(--ion-background-color, #fff);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  position: absolute;\n  contain: strict;\n}\n\n:host(.show-menu) {\n  display: block;\n}\n\n.menu-inner {\n  transform: translateX(-9999px);\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  justify-content: space-between;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: strict;\n}\n\n:host(.menu-side-start) .menu-inner {\n  --ion-safe-area-right: 0px;\n  top: 0;\n  bottom: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.menu-side-start) .menu-inner {\n    inset-inline-start: 0;\n    inset-inline-end: auto;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.menu-side-start) .menu-inner {\n    left: 0;\n    right: auto;\n  }\n  :host-context([dir=rtl]):host(.menu-side-start) .menu-inner, :host-context([dir=rtl]).menu-side-start .menu-inner {\n    left: unset;\n    right: unset;\n    left: auto;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.menu-side-start) .menu-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n:host(.menu-side-end) .menu-inner {\n  --ion-safe-area-left: 0px;\n  top: 0;\n  bottom: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.menu-side-end) .menu-inner {\n    inset-inline-start: auto;\n    inset-inline-end: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.menu-side-end) .menu-inner {\n    left: auto;\n    right: 0;\n  }\n  :host-context([dir=rtl]):host(.menu-side-end) .menu-inner, :host-context([dir=rtl]).menu-side-end .menu-inner {\n    left: unset;\n    right: unset;\n    left: 0;\n    right: auto;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.menu-side-end) .menu-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: 0;\n      right: auto;\n    }\n  }\n}\n\nion-backdrop {\n  display: none;\n  opacity: 0.01;\n  z-index: -1;\n}\n\n@media (max-width: 340px) {\n  .menu-inner {\n    --width: 264px;\n  }\n}\n:host(.menu-type-reveal) {\n  z-index: 0;\n}\n\n:host(.menu-type-reveal.show-menu) .menu-inner {\n  transform: translate3d(0,  0,  0);\n}\n\n:host(.menu-type-overlay) {\n  z-index: 1000;\n}\n\n:host(.menu-type-overlay) .show-backdrop {\n  display: block;\n  cursor: pointer;\n}\n\n:host(.menu-pane-visible) {\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n}\n\n:host(.menu-pane-visible) .menu-inner {\n  left: 0;\n  right: 0;\n  width: auto;\n  /* stylelint-disable declaration-no-important */\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n:host(.menu-pane-visible) ion-backdrop {\n  display: hidden !important;\n  /* stylelint-enable declaration-no-important */\n}\n\n:host(.menu-type-overlay) .menu-inner {\n  box-shadow: 4px 0px 16px rgba(0, 0, 0, 0.18);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Build, Host, h } from '@stencil/core';\nimport { getTimeGivenProgression } from \"../../utils/animation/cubic-bezier\";\nimport { doc } from \"../../utils/browser/index\";\nimport { GESTURE_CONTROLLER } from \"../../utils/gesture/index\";\nimport { inheritAriaAttributes, assert, clamp, isEndSide as isEnd } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getOverlay } from \"../../utils/overlays\";\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\n/**\n * @part container - The container for the menu content.\n * @part backdrop - The backdrop that appears over the main content when the menu is open.\n */\nexport class Menu {\n  constructor() {\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = (ev) => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    this.contentId = undefined;\n    this.menuId = undefined;\n    this.type = undefined;\n    this.disabled = false;\n    this.side = 'start';\n    this.swipeGesture = true;\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen,\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEnd(this.side);\n    /**\n     * Menu direction animation is calculated based on the document direction.\n     * If the document direction changes, we need to create a new animation.\n     */\n    this.animation = undefined;\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined' && customElements != null) {\n      await customElements.whenDefined('ion-menu');\n    }\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    if (!Build.isBrowser) {\n      return;\n    }\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('../../utils/gesture')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: (ev) => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  async disconnectedCallback() {\n    /**\n     * The menu should be closed when it is\n     * unmounted from the DOM.\n     * This is an async call, so we need to wait for\n     * this to finish otherwise contentEl\n     * will not have MENU_CONTENT_OPEN removed.\n     */\n    await this.close(false);\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  focusFirstDescendant() {\n    const { el } = this;\n    const firstInput = el.querySelector(focusableQueryString);\n    if (firstInput) {\n      firstInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  focusLastDescendant() {\n    const { el } = this;\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n    if (lastInput) {\n      lastInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    }\n    else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      this.focusFirstDescendant();\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        this.focusLastDescendant();\n      }\n    }\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    /**\n     * Menu direction animation is calculated based on the document direction.\n     * If the document direction changes, we need to create a new animation.\n     */\n    const isEndSide = isEnd(this.side);\n    if (width === this.width && this.animation !== undefined && isEndSide === this.isEndSide) {\n      return;\n    }\n    this.width = width;\n    this.isEndSide = isEndSide;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction(isReversed ? 'reverse' : 'normal')\n      .easing(isReversed ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide\n        ? shouldCompleteRight\n        : shouldCompleteLeft\n      : isEndSide\n        ? shouldCompleteLeft\n        : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue +=\n      getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    // add css class and hide content behind menu from screen readers\n    if (this.contentEl) {\n      this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      /**\n       * When the menu is open and overlaying the main\n       * content, the main content should not be announced\n       * by the screenreader as the menu is the main\n       * focus. This is useful with screenreaders that have\n       * \"read from top\" gestures that read the entire\n       * page from top to bottom when activated.\n       * This should be done before the animation starts\n       * so that users cannot accidentally scroll\n       * the content while dragging a menu open.\n       */\n      this.contentEl.setAttribute('aria-hidden', 'true');\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    var _a;\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    }\n    else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (doc === null || doc === void 0 ? void 0 : doc.contains(this.el)) {\n      /**\n       * Only set the active menu if the menu element is\n       * present in the DOM. Otherwise if it was destructively\n       * re-hydrated (through Angular Universal), then ignore\n       * setting the removed node as the active menu.\n       */\n      if (!this.disabled) {\n        menuController._setActiveMenu(this);\n      }\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { type, disabled, isPaneVisible, inheritedAttributes, side } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        [`menu-side-${side}`]: true,\n        'menu-pane-visible': isPaneVisible,\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  static get is() { return \"ion-menu\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"menu.ios.scss\"],\n      \"md\": [\"menu.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"menu.ios.css\"],\n      \"md\": [\"menu.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"contentId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The `id` of the main content. When using\\na router this is typically `ion-router-outlet`.\\nWhen not using a router, this is typically\\nyour main view's `ion-content`. This is not the\\nid of the `ion-content` inside of your `ion-menu`.\"\n        },\n        \"attribute\": \"content-id\",\n        \"reflect\": true\n      },\n      \"menuId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"An id for the menu.\"\n        },\n        \"attribute\": \"menu-id\",\n        \"reflect\": true\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The display type of the menu.\\nAvailable options: `\\\"overlay\\\"`, `\\\"reveal\\\"`, `\\\"push\\\"`.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the menu is disabled.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"side\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Side\",\n          \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n          \"references\": {\n            \"Side\": {\n              \"location\": \"import\",\n              \"path\": \"./menu-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Which side of the view the menu should be placed.\"\n        },\n        \"attribute\": \"side\",\n        \"reflect\": true,\n        \"defaultValue\": \"'start'\"\n      },\n      \"swipeGesture\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, swiping the menu is enabled.\"\n        },\n        \"attribute\": \"swipe-gesture\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"maxEdgeStart\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The edge threshold for dragging the menu open.\\nIf a drag/swipe happens over this value, the menu is not triggered.\"\n        },\n        \"attribute\": \"max-edge-start\",\n        \"reflect\": false,\n        \"defaultValue\": \"50\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"isPaneVisible\": {},\n      \"isEndSide\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionWillOpen\",\n        \"name\": \"ionWillOpen\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is about to be opened.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionWillClose\",\n        \"name\": \"ionWillClose\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is about to be closed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionDidOpen\",\n        \"name\": \"ionDidOpen\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is open.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionDidClose\",\n        \"name\": \"ionDidClose\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the menu is closed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionMenuChange\",\n        \"name\": \"ionMenuChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the menu state is changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"MenuChangeEventDetail\",\n          \"resolved\": \"MenuChangeEventDetail\",\n          \"references\": {\n            \"MenuChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"./menu-interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"isOpen\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<boolean>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns `true` is the menu is open.\",\n          \"tags\": []\n        }\n      },\n      \"isActive\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<boolean>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Returns `true` is the menu is active.\\n\\nA menu is active when it can be opened or closed, meaning it's enabled\\nand it's not part of a `ion-split-pane`.\",\n          \"tags\": []\n        }\n      },\n      \"open\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Opens the menu. If the menu is already open or it can't be opened,\\nit returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"close\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Closes the menu. If the menu is already closed or it can't be closed,\\nit returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"toggle\": {\n        \"complexType\": {\n          \"signature\": \"(animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\\nIf the operation can't be completed successfully, it returns `false`.\",\n          \"tags\": []\n        }\n      },\n      \"setOpen\": {\n        \"complexType\": {\n          \"signature\": \"(shouldOpen: boolean, animated?: boolean) => Promise<boolean>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }, {\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<boolean>\"\n        },\n        \"docs\": {\n          \"text\": \"Opens or closes the button.\\nIf the operation can't be completed successfully, it returns `false`.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"type\",\n        \"methodName\": \"typeChanged\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }, {\n        \"propName\": \"side\",\n        \"methodName\": \"sideChanged\"\n      }, {\n        \"propName\": \"swipeGesture\",\n        \"methodName\": \"swipeGestureChanged\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"ionSplitPaneVisible\",\n        \"method\": \"onSplitPaneChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"click\",\n        \"method\": \"onBackdropClick\",\n        \"target\": undefined,\n        \"capture\": true,\n        \"passive\": false\n      }, {\n        \"name\": \"keydown\",\n        \"method\": \"onKeydown\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { menuController } from \"../../utils/menu-controller/index\";\n// Given a menu, return whether or not the menu toggle should be visible\nexport const updateVisibility = async (menu) => {\n  const menuEl = await menuController.get(menu);\n  return !!(menuEl && (await menuEl.isActive()));\n};\n",":host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .1;\n  --border-radius: 4px;\n  --color: var(--ion-color-primary, #3880ff);\n  --padding-start: 5px;\n  --padding-end: 5px;\n  height: 32px;\n  font-size: 31px;\n}\n\n:host(.ion-activated) {\n  opacity: 0.4;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    opacity: 0.6;\n  }\n}",":host {\n  /**\n   * @prop --border-radius: Border radius of the menu button\n   *\n   * @prop --background: Background of the menu button\n   * @prop --background-hover: Background of the menu button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   * @prop --background-focused: Background of the menu button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the menu button background when focused with the tab key\n   *\n   * @prop --color: Color of the menu button\n   * @prop --color-hover: Color of the menu button on hover\n   * @prop --color-focused: Color of the menu button when focused with the tab key\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --background: transparent;\n  --color-focused: currentColor;\n  --border-radius: initial;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  color: var(--color);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  text-transform: none;\n  white-space: nowrap;\n  font-kerning: none;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  cursor: pointer;\n  overflow: hidden;\n  user-select: none;\n  z-index: 0;\n  appearance: none;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\nion-icon {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  pointer-events: none;\n}\n\n:host(.menu-button-hidden) {\n  display: none;\n}\n\n:host(.menu-button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n@media (any-hover: hover) {\n  :host(:hover) .button-native {\n    color: var(--color-hover);\n  }\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity, 0);\n  }\n}\n:host(.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.in-toolbar-color)) {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host {\n  --background-focused: currentColor;\n  --background-focused-opacity: .12;\n  --background-hover: currentColor;\n  --background-hover-opacity: .04;\n  --border-radius: 50%;\n  --color: initial;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  width: 48px;\n  height: 48px;\n  font-size: 24px;\n}\n\n:host(.ion-color.ion-focused)::after {\n  background: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { menuOutline, menuSharp } from 'ionicons/icons';\nimport { config } from '../../global/config';\nimport { getIonMode } from '../../global/ionic-global';\nimport { updateVisibility } from '../menu-toggle/menu-toggle-util';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML button element that wraps all child elements.\n * @part icon - The menu button icon (uses ion-icon).\n */\nexport class MenuButton {\n  constructor() {\n    this.inheritedAttributes = {};\n    this.onClick = async () => {\n      return menuController.toggle(this.menu);\n    };\n    this.visible = false;\n    this.color = undefined;\n    this.disabled = false;\n    this.menu = undefined;\n    this.autoHide = true;\n    this.type = 'button';\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  componentDidLoad() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const { color, disabled, inheritedAttributes } = this;\n    const mode = getIonMode(this);\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n    const hidden = this.autoHide && !this.visible;\n    const attrs = {\n      type: this.type,\n    };\n    const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n    return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        button: true,\n        'menu-button-hidden': hidden,\n        'menu-button-disabled': disabled,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true,\n      }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n  }\n  static get is() { return \"ion-menu-button\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"menu-button.ios.scss\"],\n      \"md\": [\"menu-button.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"menu-button.ios.css\"],\n      \"md\": [\"menu-button.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the menu button.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"menu\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Optional property that maps to a Menu's `menuId` prop. Can also be `start` or `end` for the menu side. This is used to find the correct menu to toggle\"\n        },\n        \"attribute\": \"menu\",\n        \"reflect\": false\n      },\n      \"autoHide\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Automatically hides the menu button when the corresponding menu is not active\"\n        },\n        \"attribute\": \"auto-hide\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'submit' | 'reset' | 'button'\",\n          \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The type of the button.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false,\n        \"defaultValue\": \"'button'\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"visible\": {}\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get listeners() {\n    return [{\n        \"name\": \"ionMenuChange\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"ionSplitPaneVisible\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n",":host(.menu-toggle-hidden) {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { menuController } from \"../../utils/menu-controller/index\";\nimport { getIonMode } from '../../global/ionic-global';\nimport { updateVisibility } from './menu-toggle-util';\n/**\n * @slot - Content is placed inside the toggle to act as the click target.\n */\nexport class MenuToggle {\n  constructor() {\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n    this.visible = false;\n    this.menu = undefined;\n    this.autoHide = true;\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n  static get is() { return \"ion-menu-toggle\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"menu-toggle.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"menu-toggle.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"menu\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Optional property that maps to a Menu's `menuId` prop.\\nCan also be `start` or `end` for the menu side.\\nThis is used to find the correct menu to toggle.\\n\\nIf this property is not used, `ion-menu-toggle` will toggle the\\nfirst menu that is active.\"\n        },\n        \"attribute\": \"menu\",\n        \"reflect\": false\n      },\n      \"autoHide\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Automatically hides the content when the corresponding menu is not active.\\n\\nBy default, it's `true`. Change it to `false` in order to\\nkeep `ion-menu-toggle` always visible regardless the state of the menu.\"\n        },\n        \"attribute\": \"auto-hide\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"visible\": {}\n    };\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"ionMenuChange\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }, {\n        \"name\": \"ionSplitPaneVisible\",\n        \"method\": \"visibilityChanged\",\n        \"target\": \"body\",\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"],"mappings":"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"}