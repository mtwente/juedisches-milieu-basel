{"version":3,"names":["ImpactStyle","NotificationType","HapticEngine","getEngine","tapticEngine","window","TapticEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","Haptics","undefined","available","engine","this","getPlatform","navigator","vibrate","isCordova","isCapacitor","impact","options","style","toLowerCase","notification","type","selection","Light","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticAvailable","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"sources":["node_modules/@ionic/core/dist/collection/utils/native/haptic.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getCapacitor } from './capacitor';\nexport var ImpactStyle;\n(function (ImpactStyle) {\n  /**\n   * A collision between large, heavy user interface elements\n   *\n   * @since 1.0.0\n   */\n  ImpactStyle[\"Heavy\"] = \"HEAVY\";\n  /**\n   * A collision between moderately sized user interface elements\n   *\n   * @since 1.0.0\n   */\n  ImpactStyle[\"Medium\"] = \"MEDIUM\";\n  /**\n   * A collision between small, light user interface elements\n   *\n   * @since 1.0.0\n   */\n  ImpactStyle[\"Light\"] = \"LIGHT\";\n})(ImpactStyle || (ImpactStyle = {}));\nexport var NotificationType;\n(function (NotificationType) {\n  /**\n   * A notification feedback type indicating that a task has completed successfully\n   *\n   * @since 1.0.0\n   */\n  NotificationType[\"Success\"] = \"SUCCESS\";\n  /**\n   * A notification feedback type indicating that a task has produced a warning\n   *\n   * @since 1.0.0\n   */\n  NotificationType[\"Warning\"] = \"WARNING\";\n  /**\n   * A notification feedback type indicating that a task has failed\n   *\n   * @since 1.0.0\n   */\n  NotificationType[\"Error\"] = \"ERROR\";\n})(NotificationType || (NotificationType = {}));\nconst HapticEngine = {\n  getEngine() {\n    const tapticEngine = window.TapticEngine;\n    if (tapticEngine) {\n      // Cordova\n      // TODO FW-4707 - Remove this in Ionic 8\n      return tapticEngine;\n    }\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Haptics')) {\n      // Capacitor\n      return capacitor.Plugins.Haptics;\n    }\n    return undefined;\n  },\n  available() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return false;\n    }\n    const capacitor = getCapacitor();\n    /**\n     * Developers can manually import the\n     * Haptics plugin in their app which will cause\n     * getEngine to return the Haptics engine. However,\n     * the Haptics engine will throw an error if\n     * used in a web browser that does not support\n     * the Vibrate API. This check avoids that error\n     * if the browser does not support the Vibrate API.\n     */\n    if ((capacitor === null || capacitor === void 0 ? void 0 : capacitor.getPlatform()) === 'web') {\n      return typeof navigator !== 'undefined' && navigator.vibrate !== undefined;\n    }\n    return true;\n  },\n  isCordova() {\n    return window.TapticEngine !== undefined;\n  },\n  isCapacitor() {\n    return getCapacitor() !== undefined;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    /**\n     * To provide backwards compatibility with Cordova apps,\n     * we convert the style to lowercase.\n     *\n     * TODO: FW-4707 - Remove this in Ionic 8\n     */\n    const style = this.isCapacitor() ? options.style : options.style.toLowerCase();\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    /**\n     * To provide backwards compatibility with Cordova apps,\n     * we convert the style to lowercase.\n     *\n     * TODO: FW-4707 - Remove this in Ionic 8\n     */\n    const type = this.isCapacitor() ? options.type : options.type.toLowerCase();\n    engine.notification({ type });\n  },\n  selection() {\n    /**\n     * To provide backwards compatibility with Cordova apps,\n     * we convert the style to lowercase.\n     *\n     * TODO: FW-4707 - Remove this in Ionic 8\n     */\n    const style = this.isCapacitor() ? ImpactStyle.Light : 'light';\n    this.impact({ style });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  },\n};\n/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\nexport const hapticAvailable = () => {\n  return HapticEngine.available();\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nexport const hapticSelection = () => {\n  hapticAvailable() && HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nexport const hapticSelectionStart = () => {\n  hapticAvailable() && HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nexport const hapticSelectionChanged = () => {\n  hapticAvailable() && HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nexport const hapticSelectionEnd = () => {\n  hapticAvailable() && HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ type: NotificationType.SUCCESS }` (or `WARNING`/`ERROR`)\n */\nexport const hapticNotification = (options) => {\n  hapticAvailable() && HapticEngine.notification(options);\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: ImpactStyle.LIGHT }` (or `MEDIUM`/`HEAVY`)\n */\nexport const hapticImpact = (options) => {\n  hapticAvailable() && HapticEngine.impact(options);\n};\n"],"mappings":";;;GAIU,IAACA,GACX,SAAWA,GAMTA,EAAY,SAAW,QAMvBA,EAAY,UAAY,SAMxBA,EAAY,SAAW,OACxB,EAnBD,CAmBGA,IAAgBA,EAAc,KAC1B,IAAIC,GACX,SAAWA,GAMTA,EAAiB,WAAa,UAM9BA,EAAiB,WAAa,UAM9BA,EAAiB,SAAW,OAC7B,EAnBD,CAmBGA,IAAqBA,EAAmB,KAC3C,MAAMC,EAAe,CACnB,SAAAC,GACE,MAAMC,EAAeC,OAAOC,aAC5B,GAAIF,EAAc,CAGhB,OAAOA,CACb,CACI,MAAMG,EAAYC,IAClB,GAAID,IAAc,MAAQA,SAAmB,OAAS,EAAIA,EAAUE,kBAAkB,WAAY,CAEhG,OAAOF,EAAUG,QAAQC,OAC/B,CACI,OAAOC,SACX,EACE,SAAAC,GACE,MAAMC,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,OAAO,KACb,CACI,MAAMP,EAAYC,IAUlB,IAAKD,IAAc,MAAQA,SAAmB,OAAS,EAAIA,EAAUS,iBAAmB,MAAO,CAC7F,cAAcC,YAAc,aAAeA,UAAUC,UAAYN,SACvE,CACI,OAAO,IACX,EACE,SAAAO,GACE,OAAOd,OAAOC,eAAiBM,SACnC,EACE,WAAAQ,GACE,OAAOZ,MAAmBI,SAC9B,EACE,MAAAS,CAAOC,GACL,MAAMR,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,MACN,CAOI,MAAMS,EAAQR,KAAKK,cAAgBE,EAAQC,MAAQD,EAAQC,MAAMC,cACjEV,EAAOO,OAAO,CAAEE,SACpB,EACE,YAAAE,CAAaH,GACX,MAAMR,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,MACN,CAOI,MAAMY,EAAOX,KAAKK,cAAgBE,EAAQI,KAAOJ,EAAQI,KAAKF,cAC9DV,EAAOW,aAAa,CAAEC,QAC1B,EACE,SAAAC,GAOE,MAAMJ,EAAQR,KAAKK,cAAgBpB,EAAY4B,MAAQ,QACvDb,KAAKM,OAAO,CAAEE,SAClB,EACE,cAAAM,GACE,MAAMf,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,MACN,CACI,GAAIC,KAAKK,cAAe,CACtBN,EAAOe,gBACb,KACS,CACHf,EAAOgB,uBACb,CACA,EACE,gBAAAC,GACE,MAAMjB,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,MACN,CACI,GAAIC,KAAKK,cAAe,CACtBN,EAAOiB,kBACb,KACS,CACHjB,EAAOkB,yBACb,CACA,EACE,YAAAC,GACE,MAAMnB,EAASC,KAAKZ,YACpB,IAAKW,EAAQ,CACX,MACN,CACI,GAAIC,KAAKK,cAAe,CACtBN,EAAOmB,cACb,KACS,CACHnB,EAAOoB,qBACb,CACA,GAMO,MAAMC,EAAkB,IACtBjC,EAAaW,YAMV,MAACuB,EAAkB,KAC7BD,KAAqBjC,EAAayB,WAAW,EAKnC,MAACU,EAAuB,KAClCF,KAAqBjC,EAAa2B,gBAAgB,EAKxC,MAACS,EAAyB,KACpCH,KAAqBjC,EAAa6B,kBAAkB,EAM1C,MAACQ,EAAqB,KAChCJ,KAAqBjC,EAAa+B,cAAc,EAatC,MAACO,EAAgBlB,IAC3Ba,KAAqBjC,EAAamB,OAAOC,EAAQ,S"}